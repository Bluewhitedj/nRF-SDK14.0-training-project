; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --reduce_paths -o.\_build\nrf_log_backend_rtt.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\nrf_log_backend_rtt.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..\components\libraries\balloc -I..\..\..\..\..\..\components\libraries\bootloader\dfu -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\experimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\components\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\libraries\fifo -I.\RTE\_nrf52832_xxaa -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.14.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DNRF52 -DBL_SETTINGS_ACCESS_ONLY -DBOARD_PCA10040 -DCONFIG_GPIO_AS_PINRESET -DNRF52 -DNRF52832_XXAA -DNRF52_PAN_74 -DNRF_SD_BLE_API_VERSION=5 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -DDEBUG --omf_browse=.\_build\nrf_log_backend_rtt.crf ..\..\..\..\..\..\components\libraries\experimental_log\src\nrf_log_backend_rtt.c]
                          THUMB

                          AREA ||i.nrf_log_backend_rtt_flush||, CODE, READONLY, ALIGN=1

                  nrf_log_backend_rtt_flush PROC
;;;91     
;;;92     static void nrf_log_backend_rtt_flush(nrf_log_backend_t const * p_backend)
000000  4770              BX       lr
;;;93     {
;;;94     
;;;95     }
;;;96     
                          ENDP


                          AREA ||i.nrf_log_backend_rtt_init||, CODE, READONLY, ALIGN=1

                  nrf_log_backend_rtt_init PROC
;;;56     
;;;57     void nrf_log_backend_rtt_init(void)
000000  b510              PUSH     {r4,lr}
;;;58     {
;;;59         SEGGER_RTT_Init();
000002  f7fffffe          BL       SEGGER_RTT_Init
;;;60     }
000006  bd10              POP      {r4,pc}
;;;61     
                          ENDP


                          AREA ||i.nrf_log_backend_rtt_panic_set||, CODE, READONLY, ALIGN=1

                  nrf_log_backend_rtt_panic_set PROC
;;;96     
;;;97     static void nrf_log_backend_rtt_panic_set(nrf_log_backend_t const * p_backend)
000000  4770              BX       lr
;;;98     {
;;;99     
;;;100    }
;;;101    
                          ENDP


                          AREA ||i.nrf_log_backend_rtt_put||, CODE, READONLY, ALIGN=2

                  nrf_log_backend_rtt_put PROC
;;;85     }
;;;86     static void nrf_log_backend_rtt_put(nrf_log_backend_t const * p_backend,
000000  b538              PUSH     {r3-r5,lr}
;;;87                                    nrf_log_entry_t * p_msg)
;;;88     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;89         nrf_log_backend_serial_put(p_backend, p_msg, m_string_buff, RTT_BACKEND_BUFFER_SIZE, serial_tx);
000006  4804              LDR      r0,|L4.24|
000008  2340              MOVS     r3,#0x40
00000a  4a04              LDR      r2,|L4.28|
00000c  4629              MOV      r1,r5
00000e  9000              STR      r0,[sp,#0]
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       nrf_log_backend_serial_put
;;;90     }
000016  bd38              POP      {r3-r5,pc}
;;;91     
                          ENDP

                  |L4.24|
                          DCD      serial_tx
                  |L4.28|
                          DCD      m_string_buff

                          AREA ||i.serial_tx||, CODE, READONLY, ALIGN=1

                  serial_tx PROC
;;;61     
;;;62     static void serial_tx(void const * p_context, char const * buffer, size_t len)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;63     {
000004  4681              MOV      r9,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
;;;64         if (len)
00000a  b1b5              CBZ      r5,|L5.58|
;;;65         {
;;;66             uint32_t idx    = 0;
00000c  2700              MOVS     r7,#0
;;;67             uint32_t processed;
;;;68             uint32_t watchdog_counter = 10;
00000e  f04f080a          MOV      r8,#0xa
;;;69             do
000012  bf00              NOP      
                  |L5.20|
;;;70             {
;;;71                 processed = SEGGER_RTT_WriteNoLock(0, &buffer[idx], len);
000014  19f1              ADDS     r1,r6,r7
000016  462a              MOV      r2,r5
000018  2000              MOVS     r0,#0
00001a  f7fffffe          BL       SEGGER_RTT_WriteNoLock
00001e  4604              MOV      r4,r0
;;;72                 idx += processed;
000020  4427              ADD      r7,r7,r4
;;;73                 len -= processed;
000022  1b2d              SUBS     r5,r5,r4
;;;74                 if (processed == 0)
000024  b92c              CBNZ     r4,|L5.50|
;;;75                 {
;;;76                     // If RTT is not connected then ensure that logger does not block
;;;77                     watchdog_counter--;
000026  f1a80801          SUB      r8,r8,#1
;;;78                     if (watchdog_counter == 0)
00002a  f1b80f00          CMP      r8,#0
00002e  d100              BNE      |L5.50|
;;;79                     {
;;;80                         break;
000030  e001              B        |L5.54|
                  |L5.50|
;;;81                     }
;;;82                 }
;;;83             } while (len);
000032  2d00              CMP      r5,#0
000034  d1ee              BNE      |L5.20|
                  |L5.54|
000036  bf00              NOP                            ;80
;;;84         }
000038  bf00              NOP      
                  |L5.58|
;;;85     }
00003a  e8bd87f0          POP      {r4-r10,pc}
;;;86     static void nrf_log_backend_rtt_put(nrf_log_backend_t const * p_backend,
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  m_string_buff
                          %        64

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  nrf_log_backend_rtt_api
                          DCD      nrf_log_backend_rtt_put
                          DCD      nrf_log_backend_rtt_panic_set
                          DCD      nrf_log_backend_rtt_flush

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\libraries\\experimental_log\\src\\nrf_log_backend_rtt.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___21_nrf_log_backend_rtt_c_cfd52ccc____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___21_nrf_log_backend_rtt_c_cfd52ccc____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___21_nrf_log_backend_rtt_c_cfd52ccc____REVSH|
#line 402
|__asm___21_nrf_log_backend_rtt_c_cfd52ccc____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___21_nrf_log_backend_rtt_c_cfd52ccc____RRX|
#line 587
|__asm___21_nrf_log_backend_rtt_c_cfd52ccc____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
