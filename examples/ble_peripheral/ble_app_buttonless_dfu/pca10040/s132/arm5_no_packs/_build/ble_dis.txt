; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --reduce_paths -o.\_build\ble_dis.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\ble_dis.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..\components\libraries\balloc -I..\..\..\..\..\..\components\libraries\bootloader\dfu -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\experimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\components\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\libraries\fifo -I.\RTE\_nrf52832_xxaa -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.14.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DNRF52 -DBL_SETTINGS_ACCESS_ONLY -DBOARD_PCA10040 -DCONFIG_GPIO_AS_PINRESET -DNRF52 -DNRF52832_XXAA -DNRF52_PAN_74 -DNRF_SD_BLE_API_VERSION=5 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -DDEBUG --omf_browse=.\_build\ble_dis.crf ..\..\..\..\..\..\components\ble\ble_services\ble_dis\ble_dis.c]
                          THUMB

                          AREA ||i.ble_dis_init||, CODE, READONLY, ALIGN=2

                  ble_dis_init PROC
;;;171    
;;;172    uint32_t ble_dis_init(ble_dis_init_t const * p_dis_init)
000000  b57f              PUSH     {r0-r6,lr}
;;;173    {
000002  4604              MOV      r4,r0
;;;174        uint32_t   err_code;
;;;175        ble_uuid_t ble_uuid;
;;;176    
;;;177        // Add service
;;;178        BLE_UUID_BLE_ASSIGN(ble_uuid, BLE_UUID_DEVICE_INFORMATION_SERVICE);
000004  bf00              NOP      
000006  2001              MOVS     r0,#1
000008  f88d000e          STRB     r0,[sp,#0xe]
00000c  f641000a          MOV      r0,#0x180a
000010  f8ad000c          STRH     r0,[sp,#0xc]
000014  bf00              NOP      
;;;179    
;;;180        err_code = sd_ble_gatts_service_add(BLE_GATTS_SRVC_TYPE_PRIMARY, &ble_uuid, &service_handle);
000016  4a56              LDR      r2,|L1.368|
000018  a903              ADD      r1,sp,#0xc
00001a  2001              MOVS     r0,#1
00001c  dfa0              SVC      #0xa0
00001e  4605              MOV      r5,r0
;;;181        if (err_code != NRF_SUCCESS)
000020  b115              CBZ      r5,|L1.40|
;;;182        {
;;;183            return err_code;
000022  4628              MOV      r0,r5
                  |L1.36|
;;;184        }
;;;185    
;;;186        // Add characteristics
;;;187        if (p_dis_init->manufact_name_str.length > 0)
;;;188        {
;;;189            err_code = char_add(BLE_UUID_MANUFACTURER_NAME_STRING_CHAR,
;;;190                                p_dis_init->manufact_name_str.p_str,
;;;191                                p_dis_init->manufact_name_str.length,
;;;192                                &p_dis_init->dis_attr_md,
;;;193                                &manufact_name_handles);
;;;194            if (err_code != NRF_SUCCESS)
;;;195            {
;;;196                return err_code;
;;;197            }
;;;198        }
;;;199        if (p_dis_init->model_num_str.length > 0)
;;;200        {
;;;201            err_code = char_add(BLE_UUID_MODEL_NUMBER_STRING_CHAR,
;;;202                                p_dis_init->model_num_str.p_str,
;;;203                                p_dis_init->model_num_str.length,
;;;204                                &p_dis_init->dis_attr_md,
;;;205                                &model_num_handles);
;;;206            if (err_code != NRF_SUCCESS)
;;;207            {
;;;208                return err_code;
;;;209            }
;;;210        }
;;;211        if (p_dis_init->serial_num_str.length > 0)
;;;212        {
;;;213            err_code = char_add(BLE_UUID_SERIAL_NUMBER_STRING_CHAR,
;;;214                                p_dis_init->serial_num_str.p_str,
;;;215                                p_dis_init->serial_num_str.length,
;;;216                                &p_dis_init->dis_attr_md,
;;;217                                &serial_num_handles);
;;;218            if (err_code != NRF_SUCCESS)
;;;219            {
;;;220                return err_code;
;;;221            }
;;;222        }
;;;223        if (p_dis_init->hw_rev_str.length > 0)
;;;224        {
;;;225            err_code = char_add(BLE_UUID_HARDWARE_REVISION_STRING_CHAR,
;;;226                                p_dis_init->hw_rev_str.p_str,
;;;227                                p_dis_init->hw_rev_str.length,
;;;228                                &p_dis_init->dis_attr_md,
;;;229                                &hw_rev_handles);
;;;230            if (err_code != NRF_SUCCESS)
;;;231            {
;;;232                return err_code;
;;;233            }
;;;234        }
;;;235        if (p_dis_init->fw_rev_str.length > 0)
;;;236        {
;;;237            err_code = char_add(BLE_UUID_FIRMWARE_REVISION_STRING_CHAR,
;;;238                                p_dis_init->fw_rev_str.p_str,
;;;239                                p_dis_init->fw_rev_str.length,
;;;240                                &p_dis_init->dis_attr_md,
;;;241                                &fw_rev_handles);
;;;242            if (err_code != NRF_SUCCESS)
;;;243            {
;;;244                return err_code;
;;;245            }
;;;246        }
;;;247        if (p_dis_init->sw_rev_str.length > 0)
;;;248        {
;;;249            err_code = char_add(BLE_UUID_SOFTWARE_REVISION_STRING_CHAR,
;;;250                                p_dis_init->sw_rev_str.p_str,
;;;251                                p_dis_init->sw_rev_str.length,
;;;252                                &p_dis_init->dis_attr_md,
;;;253                                &sw_rev_handles);
;;;254            if (err_code != NRF_SUCCESS)
;;;255            {
;;;256                return err_code;
;;;257            }
;;;258        }
;;;259        if (p_dis_init->p_sys_id != NULL)
;;;260        {
;;;261            uint8_t encoded_sys_id[BLE_DIS_SYS_ID_LEN];
;;;262    
;;;263            sys_id_encode(encoded_sys_id, p_dis_init->p_sys_id);
;;;264            err_code = char_add(BLE_UUID_SYSTEM_ID_CHAR,
;;;265                                encoded_sys_id,
;;;266                                BLE_DIS_SYS_ID_LEN,
;;;267                                &p_dis_init->dis_attr_md,
;;;268                                &sys_id_handles);
;;;269            if (err_code != NRF_SUCCESS)
;;;270            {
;;;271                return err_code;
;;;272            }
;;;273        }
;;;274        if (p_dis_init->p_reg_cert_data_list != NULL)
;;;275        {
;;;276            err_code = char_add(BLE_UUID_IEEE_REGULATORY_CERTIFICATION_DATA_LIST_CHAR,
;;;277                                p_dis_init->p_reg_cert_data_list->p_list,
;;;278                                p_dis_init->p_reg_cert_data_list->list_len,
;;;279                                &p_dis_init->dis_attr_md,
;;;280                                &reg_cert_data_list_handles);
;;;281            if (err_code != NRF_SUCCESS)
;;;282            {
;;;283                return err_code;
;;;284            }
;;;285        }
;;;286        if (p_dis_init->p_pnp_id != NULL)
;;;287        {
;;;288            uint8_t encoded_pnp_id[BLE_DIS_PNP_ID_LEN];
;;;289    
;;;290            pnp_id_encode(encoded_pnp_id, p_dis_init->p_pnp_id);
;;;291            err_code = char_add(BLE_UUID_PNP_ID_CHAR,
;;;292                                encoded_pnp_id,
;;;293                                BLE_DIS_PNP_ID_LEN,
;;;294                                &p_dis_init->dis_attr_md,
;;;295                                &pnp_id_handles);
;;;296            if (err_code != NRF_SUCCESS)
;;;297            {
;;;298                return err_code;
;;;299            }
;;;300        }
;;;301    
;;;302        return NRF_SUCCESS;
;;;303    }
000024  b004              ADD      sp,sp,#0x10
000026  bd70              POP      {r4-r6,pc}
                  |L1.40|
000028  8820              LDRH     r0,[r4,#0]            ;187
00002a  2800              CMP      r0,#0                 ;187
00002c  dd0d              BLE      |L1.74|
00002e  4851              LDR      r0,|L1.372|
000030  9000              STR      r0,[sp,#0]            ;189
000032  8822              LDRH     r2,[r4,#0]            ;189
000034  f104033c          ADD      r3,r4,#0x3c           ;189
000038  f6422029          MOV      r0,#0x2a29            ;189
00003c  6861              LDR      r1,[r4,#4]            ;189
00003e  f7fffffe          BL       char_add
000042  4605              MOV      r5,r0                 ;189
000044  b10d              CBZ      r5,|L1.74|
000046  4628              MOV      r0,r5                 ;196
000048  e7ec              B        |L1.36|
                  |L1.74|
00004a  8920              LDRH     r0,[r4,#8]            ;199
00004c  2800              CMP      r0,#0                 ;199
00004e  dd0d              BLE      |L1.108|
000050  4849              LDR      r0,|L1.376|
000052  9000              STR      r0,[sp,#0]            ;201
000054  8922              LDRH     r2,[r4,#8]            ;201
000056  f104033c          ADD      r3,r4,#0x3c           ;201
00005a  f6422024          MOV      r0,#0x2a24            ;201
00005e  68e1              LDR      r1,[r4,#0xc]          ;201
000060  f7fffffe          BL       char_add
000064  4605              MOV      r5,r0                 ;201
000066  b10d              CBZ      r5,|L1.108|
000068  4628              MOV      r0,r5                 ;208
00006a  e7db              B        |L1.36|
                  |L1.108|
00006c  8a20              LDRH     r0,[r4,#0x10]         ;211
00006e  2800              CMP      r0,#0                 ;211
000070  dd0d              BLE      |L1.142|
000072  4842              LDR      r0,|L1.380|
000074  9000              STR      r0,[sp,#0]            ;213
000076  8a22              LDRH     r2,[r4,#0x10]         ;213
000078  f104033c          ADD      r3,r4,#0x3c           ;213
00007c  f6422025          MOV      r0,#0x2a25            ;213
000080  6961              LDR      r1,[r4,#0x14]         ;213
000082  f7fffffe          BL       char_add
000086  4605              MOV      r5,r0                 ;213
000088  b10d              CBZ      r5,|L1.142|
00008a  4628              MOV      r0,r5                 ;220
00008c  e7ca              B        |L1.36|
                  |L1.142|
00008e  8b20              LDRH     r0,[r4,#0x18]         ;223
000090  2800              CMP      r0,#0                 ;223
000092  dd0d              BLE      |L1.176|
000094  483a              LDR      r0,|L1.384|
000096  9000              STR      r0,[sp,#0]            ;225
000098  8b22              LDRH     r2,[r4,#0x18]         ;225
00009a  f104033c          ADD      r3,r4,#0x3c           ;225
00009e  f6422027          MOV      r0,#0x2a27            ;225
0000a2  69e1              LDR      r1,[r4,#0x1c]         ;225
0000a4  f7fffffe          BL       char_add
0000a8  4605              MOV      r5,r0                 ;225
0000aa  b10d              CBZ      r5,|L1.176|
0000ac  4628              MOV      r0,r5                 ;232
0000ae  e7b9              B        |L1.36|
                  |L1.176|
0000b0  8c20              LDRH     r0,[r4,#0x20]         ;235
0000b2  2800              CMP      r0,#0                 ;235
0000b4  dd0d              BLE      |L1.210|
0000b6  4833              LDR      r0,|L1.388|
0000b8  9000              STR      r0,[sp,#0]            ;237
0000ba  8c22              LDRH     r2,[r4,#0x20]         ;237
0000bc  f104033c          ADD      r3,r4,#0x3c           ;237
0000c0  f6422026          MOV      r0,#0x2a26            ;237
0000c4  6a61              LDR      r1,[r4,#0x24]         ;237
0000c6  f7fffffe          BL       char_add
0000ca  4605              MOV      r5,r0                 ;237
0000cc  b10d              CBZ      r5,|L1.210|
0000ce  4628              MOV      r0,r5                 ;244
0000d0  e7a8              B        |L1.36|
                  |L1.210|
0000d2  8d20              LDRH     r0,[r4,#0x28]         ;247
0000d4  2800              CMP      r0,#0                 ;247
0000d6  dd0d              BLE      |L1.244|
0000d8  482b              LDR      r0,|L1.392|
0000da  9000              STR      r0,[sp,#0]            ;249
0000dc  8d22              LDRH     r2,[r4,#0x28]         ;249
0000de  f104033c          ADD      r3,r4,#0x3c           ;249
0000e2  f6422028          MOV      r0,#0x2a28            ;249
0000e6  6ae1              LDR      r1,[r4,#0x2c]         ;249
0000e8  f7fffffe          BL       char_add
0000ec  4605              MOV      r5,r0                 ;249
0000ee  b10d              CBZ      r5,|L1.244|
0000f0  4628              MOV      r0,r5                 ;256
0000f2  e797              B        |L1.36|
                  |L1.244|
0000f4  6b20              LDR      r0,[r4,#0x30]         ;259
0000f6  b190              CBZ      r0,|L1.286|
0000f8  a801              ADD      r0,sp,#4              ;263
0000fa  6b21              LDR      r1,[r4,#0x30]         ;263
0000fc  f7fffffe          BL       sys_id_encode
000100  4822              LDR      r0,|L1.396|
000102  f104033c          ADD      r3,r4,#0x3c           ;264
000106  2208              MOVS     r2,#8                 ;264
000108  a901              ADD      r1,sp,#4              ;264
00010a  9000              STR      r0,[sp,#0]            ;264
00010c  f6422023          MOV      r0,#0x2a23            ;264
000110  f7fffffe          BL       char_add
000114  4605              MOV      r5,r0                 ;264
000116  b10d              CBZ      r5,|L1.284|
000118  4628              MOV      r0,r5                 ;271
00011a  e783              B        |L1.36|
                  |L1.284|
00011c  bf00              NOP                            ;273
                  |L1.286|
00011e  6b60              LDR      r0,[r4,#0x34]         ;274
000120  b170              CBZ      r0,|L1.320|
000122  481b              LDR      r0,|L1.400|
000124  9000              STR      r0,[sp,#0]            ;276
000126  6b60              LDR      r0,[r4,#0x34]         ;276
000128  7902              LDRB     r2,[r0,#4]            ;276
00012a  f104033c          ADD      r3,r4,#0x3c           ;276
00012e  6801              LDR      r1,[r0,#0]            ;276
000130  f642202a          MOV      r0,#0x2a2a            ;276
000134  f7fffffe          BL       char_add
000138  4605              MOV      r5,r0                 ;276
00013a  b10d              CBZ      r5,|L1.320|
00013c  4628              MOV      r0,r5                 ;283
00013e  e771              B        |L1.36|
                  |L1.320|
000140  6ba0              LDR      r0,[r4,#0x38]         ;286
000142  b190              CBZ      r0,|L1.362|
000144  a801              ADD      r0,sp,#4              ;290
000146  6ba1              LDR      r1,[r4,#0x38]         ;290
000148  f7fffffe          BL       pnp_id_encode
00014c  4811              LDR      r0,|L1.404|
00014e  f104033c          ADD      r3,r4,#0x3c           ;291
000152  2207              MOVS     r2,#7                 ;291
000154  a901              ADD      r1,sp,#4              ;291
000156  9000              STR      r0,[sp,#0]            ;291
000158  f6422050          MOV      r0,#0x2a50            ;291
00015c  f7fffffe          BL       char_add
000160  4605              MOV      r5,r0                 ;291
000162  b10d              CBZ      r5,|L1.360|
000164  4628              MOV      r0,r5                 ;298
000166  e75d              B        |L1.36|
                  |L1.360|
000168  bf00              NOP                            ;300
                  |L1.362|
00016a  2000              MOVS     r0,#0                 ;302
00016c  e75a              B        |L1.36|
;;;304    #endif // NRF_MODULE_ENABLED(BLE_DIS)
                          ENDP

00016e  0000              DCW      0x0000
                  |L1.368|
                          DCD      service_handle
                  |L1.372|
                          DCD      manufact_name_handles
                  |L1.376|
                          DCD      model_num_handles
                  |L1.380|
                          DCD      serial_num_handles
                  |L1.384|
                          DCD      hw_rev_handles
                  |L1.388|
                          DCD      fw_rev_handles
                  |L1.392|
                          DCD      sw_rev_handles
                  |L1.396|
                          DCD      sys_id_handles
                  |L1.400|
                          DCD      reg_cert_data_list_handles
                  |L1.404|
                          DCD      pnp_id_handles

                          AREA ||i.char_add||, CODE, READONLY, ALIGN=2

                  char_add PROC
;;;123     */
;;;124    static uint32_t char_add(uint16_t                        uuid,
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;125                             uint8_t                       * p_char_value,
;;;126                             uint16_t                        char_len,
;;;127                             ble_srv_security_mode_t const * dis_attr_md,
;;;128                             ble_gatts_char_handles_t      * p_handles)
;;;129    {
000004  b08f              SUB      sp,sp,#0x3c
000006  4607              MOV      r7,r0
000008  460d              MOV      r5,r1
00000a  4614              MOV      r4,r2
00000c  461e              MOV      r6,r3
00000e  f8dd8058          LDR      r8,[sp,#0x58]
;;;130        ble_uuid_t          ble_uuid;
;;;131        ble_gatts_char_md_t char_md;
;;;132        ble_gatts_attr_t    attr_char_value;
;;;133        ble_gatts_attr_md_t attr_md;
;;;134    
;;;135        APP_ERROR_CHECK_BOOL(p_char_value != NULL);
000012  bf00              NOP      
000014  b10d              CBZ      r5,|L2.26|
000016  2001              MOVS     r0,#1
000018  e000              B        |L2.28|
                  |L2.26|
00001a  2000              MOVS     r0,#0
                  |L2.28|
00001c  4681              MOV      r9,r0
00001e  f1b90f00          CMP      r9,#0
000022  d106              BNE      |L2.50|
000024  bf00              NOP      
000026  a235              ADR      r2,|L2.252|
000028  2187              MOVS     r1,#0x87
00002a  2000              MOVS     r0,#0
00002c  f7fffffe          BL       app_error_handler
000030  bf00              NOP      
                  |L2.50|
000032  bf00              NOP      
;;;136        APP_ERROR_CHECK_BOOL(char_len > 0);
000034  bf00              NOP      
000036  2c00              CMP      r4,#0
000038  dd01              BLE      |L2.62|
00003a  2001              MOVS     r0,#1
00003c  e000              B        |L2.64|
                  |L2.62|
00003e  2000              MOVS     r0,#0
                  |L2.64|
000040  4681              MOV      r9,r0
000042  f1b90f00          CMP      r9,#0
000046  d106              BNE      |L2.86|
000048  bf00              NOP      
00004a  a22c              ADR      r2,|L2.252|
00004c  2188              MOVS     r1,#0x88
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       app_error_handler
000054  bf00              NOP      
                  |L2.86|
000056  bf00              NOP      
;;;137    
;;;138        // The ble_gatts_char_md_t structure uses bit fields. So we reset the memory to zero.
;;;139        memset(&char_md, 0, sizeof(char_md));
000058  211c              MOVS     r1,#0x1c
00005a  a807              ADD      r0,sp,#0x1c
00005c  f7fffffe          BL       __aeabi_memclr4
;;;140    
;;;141        char_md.char_props.read  = 1;
000060  f89d001c          LDRB     r0,[sp,#0x1c]
000064  f0200002          BIC      r0,r0,#2
000068  1c80              ADDS     r0,r0,#2
00006a  f88d001c          STRB     r0,[sp,#0x1c]
;;;142        char_md.p_char_user_desc = NULL;
00006e  2000              MOVS     r0,#0
000070  9008              STR      r0,[sp,#0x20]
;;;143        char_md.p_char_pf        = NULL;
000072  900a              STR      r0,[sp,#0x28]
;;;144        char_md.p_user_desc_md   = NULL;
000074  900b              STR      r0,[sp,#0x2c]
;;;145        char_md.p_cccd_md        = NULL;
000076  900c              STR      r0,[sp,#0x30]
;;;146        char_md.p_sccd_md        = NULL;
000078  900d              STR      r0,[sp,#0x34]
;;;147    
;;;148        BLE_UUID_BLE_ASSIGN(ble_uuid, uuid);
00007a  bf00              NOP      
00007c  2001              MOVS     r0,#1
00007e  f88d003a          STRB     r0,[sp,#0x3a]
000082  f8ad7038          STRH     r7,[sp,#0x38]
000086  bf00              NOP      
;;;149    
;;;150        memset(&attr_md, 0, sizeof(attr_md));
000088  2000              MOVS     r0,#0
00008a  9001              STR      r0,[sp,#4]
;;;151    
;;;152        attr_md.read_perm  = dis_attr_md->read_perm;
00008c  7830              LDRB     r0,[r6,#0]
00008e  f88d0004          STRB     r0,[sp,#4]
;;;153        attr_md.write_perm = dis_attr_md->write_perm;
000092  7870              LDRB     r0,[r6,#1]
000094  f88d0005          STRB     r0,[sp,#5]
;;;154        attr_md.vloc       = BLE_GATTS_VLOC_STACK;
000098  f89d0006          LDRB     r0,[sp,#6]
00009c  f0200006          BIC      r0,r0,#6
0000a0  1c80              ADDS     r0,r0,#2
0000a2  f88d0006          STRB     r0,[sp,#6]
;;;155        attr_md.rd_auth    = 0;
0000a6  f89d0006          LDRB     r0,[sp,#6]
0000aa  f0200008          BIC      r0,r0,#8
0000ae  f88d0006          STRB     r0,[sp,#6]
;;;156        attr_md.wr_auth    = 0;
0000b2  f89d0006          LDRB     r0,[sp,#6]
0000b6  f0200010          BIC      r0,r0,#0x10
0000ba  f88d0006          STRB     r0,[sp,#6]
;;;157        attr_md.vlen       = 0;
0000be  f89d0006          LDRB     r0,[sp,#6]
0000c2  f0200001          BIC      r0,r0,#1
0000c6  f88d0006          STRB     r0,[sp,#6]
;;;158    
;;;159        memset(&attr_char_value, 0, sizeof(attr_char_value));
0000ca  2114              MOVS     r1,#0x14
0000cc  a802              ADD      r0,sp,#8
0000ce  f7fffffe          BL       __aeabi_memclr4
;;;160    
;;;161        attr_char_value.p_uuid    = &ble_uuid;
0000d2  a80e              ADD      r0,sp,#0x38
0000d4  9002              STR      r0,[sp,#8]
;;;162        attr_char_value.p_attr_md = &attr_md;
0000d6  a801              ADD      r0,sp,#4
0000d8  9003              STR      r0,[sp,#0xc]
;;;163        attr_char_value.init_len  = char_len;
0000da  f8ad4010          STRH     r4,[sp,#0x10]
;;;164        attr_char_value.init_offs = 0;
0000de  2000              MOVS     r0,#0
0000e0  f8ad0012          STRH     r0,[sp,#0x12]
;;;165        attr_char_value.max_len   = char_len;
0000e4  f8ad4014          STRH     r4,[sp,#0x14]
;;;166        attr_char_value.p_value   = p_char_value;
0000e8  9506              STR      r5,[sp,#0x18]
;;;167    
;;;168        return sd_ble_gatts_characteristic_add(service_handle, &char_md, &attr_char_value, p_handles);
0000ea  4643              MOV      r3,r8
0000ec  aa02              ADD      r2,sp,#8
0000ee  a907              ADD      r1,sp,#0x1c
0000f0  4812              LDR      r0,|L2.316|
0000f2  8800              LDRH     r0,[r0,#0]  ; service_handle
0000f4  dfa2              SVC      #0xa2
;;;169    }
0000f6  b00f              ADD      sp,sp,#0x3c
0000f8  e8bd83f0          POP      {r4-r9,pc}
;;;170    
                          ENDP

                  |L2.252|
0000fc  2e2e5c2e          DCB      "..\\..\\..\\..\\..\\..\\components\\ble\\ble_services\\"
000100  2e5c2e2e
000104  5c2e2e5c
000108  2e2e5c2e
00010c  2e5c636f
000110  6d706f6e
000114  656e7473
000118  5c626c65
00011c  5c626c65
000120  5f736572
000124  76696365
000128  735c    
00012a  626c655f          DCB      "ble_dis\\ble_dis.c",0
00012e  6469735c
000132  626c655f
000136  6469732e
00013a  6300    
                  |L2.316|
                          DCD      service_handle

                          AREA ||i.pnp_id_encode||, CODE, READONLY, ALIGN=2

                  pnp_id_encode PROC
;;;96      */
;;;97     static void pnp_id_encode(uint8_t * p_encoded_buffer, ble_dis_pnp_id_t const * p_pnp_id)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;98     {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;99         uint8_t len = 0;
000008  2400              MOVS     r4,#0
;;;100    
;;;101        APP_ERROR_CHECK_BOOL(p_pnp_id != NULL);
00000a  bf00              NOP      
00000c  b10e              CBZ      r6,|L3.18|
00000e  2001              MOVS     r0,#1
000010  e000              B        |L3.20|
                  |L3.18|
000012  2000              MOVS     r0,#0
                  |L3.20|
000014  4607              MOV      r7,r0
000016  b937              CBNZ     r7,|L3.38|
000018  bf00              NOP      
00001a  a21f              ADR      r2,|L3.152|
00001c  2165              MOVS     r1,#0x65
00001e  2000              MOVS     r0,#0
000020  f7fffffe          BL       app_error_handler
000024  bf00              NOP      
                  |L3.38|
000026  bf00              NOP      
;;;102        APP_ERROR_CHECK_BOOL(p_encoded_buffer != NULL);
000028  bf00              NOP      
00002a  b10d              CBZ      r5,|L3.48|
00002c  2001              MOVS     r0,#1
00002e  e000              B        |L3.50|
                  |L3.48|
000030  2000              MOVS     r0,#0
                  |L3.50|
000032  4607              MOV      r7,r0
000034  b937              CBNZ     r7,|L3.68|
000036  bf00              NOP      
000038  a217              ADR      r2,|L3.152|
00003a  2166              MOVS     r1,#0x66
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       app_error_handler
000042  bf00              NOP      
                  |L3.68|
000044  bf00              NOP      
;;;103    
;;;104        p_encoded_buffer[len++] = p_pnp_id->vendor_id_source;
000046  7832              LDRB     r2,[r6,#0]
000048  4621              MOV      r1,r4
00004a  1c60              ADDS     r0,r4,#1
00004c  b2c4              UXTB     r4,r0
00004e  546a              STRB     r2,[r5,r1]
;;;105    
;;;106        len += uint16_encode(p_pnp_id->vendor_id, &p_encoded_buffer[len]);
000050  1929              ADDS     r1,r5,r4
000052  8870              LDRH     r0,[r6,#2]
000054  f7fffffe          BL       uint16_encode
000058  4420              ADD      r0,r0,r4
00005a  b2c4              UXTB     r4,r0
;;;107        len += uint16_encode(p_pnp_id->product_id, &p_encoded_buffer[len]);
00005c  1929              ADDS     r1,r5,r4
00005e  88b0              LDRH     r0,[r6,#4]
000060  f7fffffe          BL       uint16_encode
000064  4420              ADD      r0,r0,r4
000066  b2c4              UXTB     r4,r0
;;;108        len += uint16_encode(p_pnp_id->product_version, &p_encoded_buffer[len]);
000068  1929              ADDS     r1,r5,r4
00006a  88f0              LDRH     r0,[r6,#6]
00006c  f7fffffe          BL       uint16_encode
000070  4420              ADD      r0,r0,r4
000072  b2c4              UXTB     r4,r0
;;;109    
;;;110        APP_ERROR_CHECK_BOOL(len == BLE_DIS_PNP_ID_LEN);
000074  bf00              NOP      
000076  2c07              CMP      r4,#7
000078  d101              BNE      |L3.126|
00007a  2001              MOVS     r0,#1
00007c  e000              B        |L3.128|
                  |L3.126|
00007e  2000              MOVS     r0,#0
                  |L3.128|
000080  4607              MOV      r7,r0
000082  b937              CBNZ     r7,|L3.146|
000084  bf00              NOP      
000086  a204              ADR      r2,|L3.152|
000088  216e              MOVS     r1,#0x6e
00008a  2000              MOVS     r0,#0
00008c  f7fffffe          BL       app_error_handler
000090  bf00              NOP      
                  |L3.146|
000092  bf00              NOP      
;;;111    }
000094  e8bd81f0          POP      {r4-r8,pc}
;;;112    
                          ENDP

                  |L3.152|
000098  2e2e5c2e          DCB      "..\\..\\..\\..\\..\\..\\components\\ble\\ble_services\\"
00009c  2e5c2e2e
0000a0  5c2e2e5c
0000a4  2e2e5c2e
0000a8  2e5c636f
0000ac  6d706f6e
0000b0  656e7473
0000b4  5c626c65
0000b8  5c626c65
0000bc  5f736572
0000c0  76696365
0000c4  735c    
0000c6  626c655f          DCB      "ble_dis\\ble_dis.c",0
0000ca  6469735c
0000ce  626c655f
0000d2  6469732e
0000d6  6300    

                          AREA ||i.sys_id_encode||, CODE, READONLY, ALIGN=2

                  sys_id_encode PROC
;;;74      */
;;;75     static void sys_id_encode(uint8_t * p_encoded_buffer, ble_dis_sys_id_t const * p_sys_id)
000000  b570              PUSH     {r4-r6,lr}
;;;76     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;77         APP_ERROR_CHECK_BOOL(p_sys_id != NULL);
000006  bf00              NOP      
000008  b10d              CBZ      r5,|L4.14|
00000a  2001              MOVS     r0,#1
00000c  e000              B        |L4.16|
                  |L4.14|
00000e  2000              MOVS     r0,#0
                  |L4.16|
000010  4606              MOV      r6,r0
000012  b936              CBNZ     r6,|L4.34|
000014  bf00              NOP      
000016  a21f              ADR      r2,|L4.148|
000018  214d              MOVS     r1,#0x4d
00001a  2000              MOVS     r0,#0
00001c  f7fffffe          BL       app_error_handler
000020  bf00              NOP      
                  |L4.34|
000022  bf00              NOP      
;;;78         APP_ERROR_CHECK_BOOL(p_encoded_buffer != NULL);
000024  bf00              NOP      
000026  b10c              CBZ      r4,|L4.44|
000028  2001              MOVS     r0,#1
00002a  e000              B        |L4.46|
                  |L4.44|
00002c  2000              MOVS     r0,#0
                  |L4.46|
00002e  4606              MOV      r6,r0
000030  b936              CBNZ     r6,|L4.64|
000032  bf00              NOP      
000034  a217              ADR      r2,|L4.148|
000036  214e              MOVS     r1,#0x4e
000038  2000              MOVS     r0,#0
00003a  f7fffffe          BL       app_error_handler
00003e  bf00              NOP      
                  |L4.64|
000040  bf00              NOP      
;;;79     
;;;80         p_encoded_buffer[0] = (p_sys_id->manufacturer_id & 0x00000000FF);
000042  7828              LDRB     r0,[r5,#0]
000044  7020              STRB     r0,[r4,#0]
;;;81         p_encoded_buffer[1] = (p_sys_id->manufacturer_id & 0x000000FF00) >> 8;
000046  8829              LDRH     r1,[r5,#0]
000048  7928              LDRB     r0,[r5,#4]
00004a  f44f437f          MOV      r3,#0xff00
00004e  4019              ANDS     r1,r1,r3
000050  2000              MOVS     r0,#0
000052  0602              LSLS     r2,r0,#24
000054  ea422011          ORR      r0,r2,r1,LSR #8
000058  7060              STRB     r0,[r4,#1]
;;;82         p_encoded_buffer[2] = (p_sys_id->manufacturer_id & 0x0000FF0000) >> 16;
00005a  7928              LDRB     r0,[r5,#4]
00005c  021a              LSLS     r2,r3,#8
00005e  6829              LDR      r1,[r5,#0]
000060  4011              ANDS     r1,r1,r2
000062  2000              MOVS     r0,#0
000064  0402              LSLS     r2,r0,#16
000066  ea424011          ORR      r0,r2,r1,LSR #16
00006a  70a0              STRB     r0,[r4,#2]
;;;83         p_encoded_buffer[3] = (p_sys_id->manufacturer_id & 0x00FF000000) >> 24;
00006c  7928              LDRB     r0,[r5,#4]
00006e  041a              LSLS     r2,r3,#16
000070  6829              LDR      r1,[r5,#0]
000072  4011              ANDS     r1,r1,r2
000074  2000              MOVS     r0,#0
000076  0202              LSLS     r2,r0,#8
000078  ea426011          ORR      r0,r2,r1,LSR #24
00007c  70e0              STRB     r0,[r4,#3]
;;;84         p_encoded_buffer[4] = (p_sys_id->manufacturer_id & 0xFF00000000) >> 32;
00007e  7928              LDRB     r0,[r5,#4]
000080  7120              STRB     r0,[r4,#4]
;;;85     
;;;86         p_encoded_buffer[5] = (p_sys_id->organizationally_unique_id & 0x0000FF);
000082  7a28              LDRB     r0,[r5,#8]
000084  7160              STRB     r0,[r4,#5]
;;;87         p_encoded_buffer[6] = (p_sys_id->organizationally_unique_id & 0x00FF00) >> 8;
000086  8928              LDRH     r0,[r5,#8]
000088  0a00              LSRS     r0,r0,#8
00008a  71a0              STRB     r0,[r4,#6]
;;;88         p_encoded_buffer[7] = (p_sys_id->organizationally_unique_id & 0xFF0000) >> 16;
00008c  68a8              LDR      r0,[r5,#8]
00008e  0c00              LSRS     r0,r0,#16
000090  71e0              STRB     r0,[r4,#7]
;;;89     }
000092  bd70              POP      {r4-r6,pc}
;;;90     
                          ENDP

                  |L4.148|
000094  2e2e5c2e          DCB      "..\\..\\..\\..\\..\\..\\components\\ble\\ble_services\\"
000098  2e5c2e2e
00009c  5c2e2e5c
0000a0  2e2e5c2e
0000a4  2e5c636f
0000a8  6d706f6e
0000ac  656e7473
0000b0  5c626c65
0000b4  5c626c65
0000b8  5f736572
0000bc  76696365
0000c0  735c    
0000c2  626c655f          DCB      "ble_dis\\ble_dis.c",0
0000c6  6469735c
0000ca  626c655f
0000ce  6469732e
0000d2  6300    

                          AREA ||i.uint16_encode||, CODE, READONLY, ALIGN=1

                  uint16_encode PROC
;;;803     */
;;;804    static __INLINE uint8_t uint16_encode(uint16_t value, uint8_t * p_encoded_data)
000000  4602              MOV      r2,r0
;;;805    {
;;;806        p_encoded_data[0] = (uint8_t) ((value & 0x00FF) >> 0);
000002  700a              STRB     r2,[r1,#0]
;;;807        p_encoded_data[1] = (uint8_t) ((value & 0xFF00) >> 8);
000004  0a10              LSRS     r0,r2,#8
000006  7048              STRB     r0,[r1,#1]
;;;808        return sizeof(uint16_t);
000008  2002              MOVS     r0,#2
;;;809    }
00000a  4770              BX       lr
;;;810    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=1

                  service_handle
000000  0000              DCB      0x00,0x00
                  manufact_name_handles
000002  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000008  0000              DCB      0x00,0x00
                  model_num_handles
00000a  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000010  0000              DCB      0x00,0x00
                  serial_num_handles
000012  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000018  0000              DCB      0x00,0x00
                  hw_rev_handles
00001a  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000020  0000              DCB      0x00,0x00
                  fw_rev_handles
000022  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000028  0000              DCB      0x00,0x00
                  sw_rev_handles
00002a  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000030  0000              DCB      0x00,0x00
                  sys_id_handles
000032  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000038  0000              DCB      0x00,0x00
                  reg_cert_data_list_handles
00003a  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000040  0000              DCB      0x00,0x00
                  pnp_id_handles
000042  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000048  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\ble\\ble_services\\ble_dis\\ble_dis.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_ble_dis_c_e51dcafe____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_ble_dis_c_e51dcafe____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_ble_dis_c_e51dcafe____REVSH|
#line 402
|__asm___9_ble_dis_c_e51dcafe____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_ble_dis_c_e51dcafe____RRX|
#line 587
|__asm___9_ble_dis_c_e51dcafe____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
