; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --reduce_paths -o.\_build\nrf_ble_gatt.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\nrf_ble_gatt.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..\components\libraries\balloc -I..\..\..\..\..\..\components\libraries\bootloader\dfu -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\experimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\components\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\libraries\fifo -I.\RTE\_nrf52832_xxaa -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.14.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DNRF52 -DBL_SETTINGS_ACCESS_ONLY -DBOARD_PCA10040 -DCONFIG_GPIO_AS_PINRESET -DNRF52 -DNRF52832_XXAA -DNRF52_PAN_74 -DNRF_SD_BLE_API_VERSION=5 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -DDEBUG --omf_browse=.\_build\nrf_ble_gatt.crf ..\..\..\..\..\..\components\ble\nrf_ble_gatt\nrf_ble_gatt.c]
                          THUMB

                          AREA ||i.data_length_update||, CODE, READONLY, ALIGN=2

                  data_length_update PROC
;;;74      */
;;;75     static void data_length_update(uint16_t conn_handle, nrf_ble_gatt_t const * p_gatt)
000000  b57c              PUSH     {r2-r6,lr}
;;;76     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;77         NRF_LOG_DEBUG("Requesting to update data length to %u on connection 0x%x.",
000006  1da9              ADDS     r1,r5,#6
000008  eb0101c4          ADD      r1,r1,r4,LSL #3
00000c  798a              LDRB     r2,[r1,#6]
00000e  4914              LDR      r1,|L1.96|
000010  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000012  2304              MOVS     r3,#4
000014  ea434001          ORR      r0,r3,r1,LSL #16
000018  4623              MOV      r3,r4
00001a  a112              ADR      r1,|L1.100|
00001c  f7fffffe          BL       nrf_log_frontend_std_2
;;;78                       p_gatt->links[conn_handle].data_length_desired, conn_handle);
;;;79     
;;;80         ble_gap_data_length_params_t const dlp =
000020  2000              MOVS     r0,#0
000022  9000              STR      r0,[sp,#0]
000024  9001              STR      r0,[sp,#4]
000026  1da8              ADDS     r0,r5,#6
000028  eb0000c4          ADD      r0,r0,r4,LSL #3
00002c  7980              LDRB     r0,[r0,#6]
00002e  f8ad0000          STRH     r0,[sp,#0]
000032  1da8              ADDS     r0,r5,#6
000034  eb0000c4          ADD      r0,r0,r4,LSL #3
000038  7980              LDRB     r0,[r0,#6]
00003a  f8ad0002          STRH     r0,[sp,#2]
;;;81         {
;;;82             .max_rx_octets  = p_gatt->links[conn_handle].data_length_desired,
;;;83             .max_tx_octets  = p_gatt->links[conn_handle].data_length_desired,
;;;84             .max_rx_time_us = BLE_GAP_DATA_LENGTH_AUTO,
;;;85             .max_tx_time_us = BLE_GAP_DATA_LENGTH_AUTO,
;;;86         };
;;;87     
;;;88         ret_code_t err_code = sd_ble_gap_data_length_update(conn_handle, &dlp, NULL);
00003e  2200              MOVS     r2,#0
000040  4669              MOV      r1,sp
000042  4620              MOV      r0,r4
000044  df90              SVC      #0x90
000046  4606              MOV      r6,r0
;;;89         if (err_code != NRF_SUCCESS)
000048  b14e              CBZ      r6,|L1.94|
;;;90         {
;;;91             NRF_LOG_ERROR("sd_ble_gap_data_length_update() (request)"
00004a  4905              LDR      r1,|L1.96|
00004c  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
00004e  2201              MOVS     r2,#1
000050  ea424001          ORR      r0,r2,r1,LSL #16
000054  4633              MOV      r3,r6
000056  4622              MOV      r2,r4
000058  4911              LDR      r1,|L1.160|
00005a  f7fffffe          BL       nrf_log_frontend_std_2
                  |L1.94|
;;;92                           " on connection 0x%x returned unexpected value 0x%x.",
;;;93                           conn_handle, err_code);
;;;94         }
;;;95     }
00005e  bd7c              POP      {r2-r6,pc}
;;;96     
                          ENDP

                  |L1.96|
                          DCD      m_nrf_log_ble_gatt_logs_data_dynamic
                  |L1.100|
000064  52657175          DCB      "Requesting to update data length to %u on connection 0x"
000068  65737469
00006c  6e672074
000070  6f207570
000074  64617465
000078  20646174
00007c  61206c65
000080  6e677468
000084  20746f20
000088  2575206f
00008c  6e20636f
000090  6e6e6563
000094  74696f6e
000098  203078  
00009b  25782e00          DCB      "%x.",0
00009f  00                DCB      0
                  |L1.160|
                          DCD      ||.conststring||

                          AREA ||i.link_init||, CODE, READONLY, ALIGN=1

                  link_init PROC
;;;58     /**@brief Initialize a link's parameters to defaults. */
;;;59     static void link_init(nrf_ble_gatt_link_t * p_link)
000000  2117              MOVS     r1,#0x17
;;;60     {
;;;61         p_link->att_mtu_desired            = NRF_SDH_BLE_GATT_MAX_MTU_SIZE;
000002  8001              STRH     r1,[r0,#0]
;;;62         p_link->att_mtu_effective          = BLE_GATT_ATT_MTU_DEFAULT;
000004  8041              STRH     r1,[r0,#2]
;;;63         p_link->att_mtu_exchange_pending   = false;
000006  2100              MOVS     r1,#0
000008  7101              STRB     r1,[r0,#4]
;;;64         p_link->att_mtu_exchange_requested = false;
00000a  7141              STRB     r1,[r0,#5]
;;;65         p_link->data_length_desired        = NRF_SDH_BLE_GATT_MAX_MTU_SIZE + L2CAP_HDR_LEN;
00000c  211b              MOVS     r1,#0x1b
00000e  7181              STRB     r1,[r0,#6]
;;;66         p_link->data_length_effective      = BLE_GATT_ATT_MTU_DEFAULT + L2CAP_HDR_LEN;
000010  71c1              STRB     r1,[r0,#7]
;;;67     }
000012  4770              BX       lr
;;;68     
                          ENDP


                          AREA ||i.nrf_ble_gatt_att_mtu_central_set||, CODE, READONLY, ALIGN=1

                  nrf_ble_gatt_att_mtu_central_set PROC
;;;390    
;;;391    ret_code_t nrf_ble_gatt_att_mtu_central_set(nrf_ble_gatt_t * p_gatt, uint16_t desired_mtu)
000000  4602              MOV      r2,r0
;;;392    {
;;;393        VERIFY_PARAM_NOT_NULL(p_gatt);
000002  bf00              NOP      
000004  b90a              CBNZ     r2,|L3.10|
000006  200e              MOVS     r0,#0xe
                  |L3.8|
;;;394    
;;;395        if ((desired_mtu < BLE_GATT_ATT_MTU_DEFAULT) || (desired_mtu > NRF_SDH_BLE_GATT_MAX_MTU_SIZE))
;;;396        {
;;;397            return NRF_ERROR_INVALID_PARAM;
;;;398        }
;;;399    
;;;400        p_gatt->att_mtu_desired_central = desired_mtu;
;;;401        return NRF_SUCCESS;
;;;402    }
000008  4770              BX       lr
                  |L3.10|
00000a  bf00              NOP                            ;393
00000c  2917              CMP      r1,#0x17              ;395
00000e  db00              BLT      |L3.18|
000010  dd01              BLE      |L3.22|
                  |L3.18|
000012  2007              MOVS     r0,#7                 ;397
000014  e7f8              B        |L3.8|
                  |L3.22|
000016  8051              STRH     r1,[r2,#2]            ;400
000018  2000              MOVS     r0,#0                 ;401
00001a  e7f5              B        |L3.8|
;;;403    
                          ENDP


                          AREA ||i.nrf_ble_gatt_att_mtu_periph_set||, CODE, READONLY, ALIGN=1

                  nrf_ble_gatt_att_mtu_periph_set PROC
;;;376    
;;;377    ret_code_t nrf_ble_gatt_att_mtu_periph_set(nrf_ble_gatt_t * p_gatt, uint16_t desired_mtu)
000000  4602              MOV      r2,r0
;;;378    {
;;;379        VERIFY_PARAM_NOT_NULL(p_gatt);
000002  bf00              NOP      
000004  b90a              CBNZ     r2,|L4.10|
000006  200e              MOVS     r0,#0xe
                  |L4.8|
;;;380    
;;;381        if ((desired_mtu < BLE_GATT_ATT_MTU_DEFAULT) || (desired_mtu > NRF_SDH_BLE_GATT_MAX_MTU_SIZE))
;;;382        {
;;;383            return NRF_ERROR_INVALID_PARAM;
;;;384        }
;;;385    
;;;386        p_gatt->att_mtu_desired_periph = desired_mtu;
;;;387        return NRF_SUCCESS;
;;;388    }
000008  4770              BX       lr
                  |L4.10|
00000a  bf00              NOP                            ;379
00000c  2917              CMP      r1,#0x17              ;381
00000e  db00              BLT      |L4.18|
000010  dd01              BLE      |L4.22|
                  |L4.18|
000012  2007              MOVS     r0,#7                 ;383
000014  e7f8              B        |L4.8|
                  |L4.22|
000016  8011              STRH     r1,[r2,#0]            ;386
000018  2000              MOVS     r0,#0                 ;387
00001a  e7f5              B        |L4.8|
;;;389    
                          ENDP


                          AREA ||i.nrf_ble_gatt_data_length_get||, CODE, READONLY, ALIGN=1

                  nrf_ble_gatt_data_length_get PROC
;;;450    
;;;451    ret_code_t nrf_ble_gatt_data_length_get(nrf_ble_gatt_t const * p_gatt,
000000  4603              MOV      r3,r0
;;;452                                            uint16_t               conn_handle,
;;;453                                            uint8_t              * p_data_length)
;;;454    {
;;;455        if ((p_gatt == NULL) || (p_data_length == NULL))
000002  b103              CBZ      r3,|L5.6|
000004  b90a              CBNZ     r2,|L5.10|
                  |L5.6|
;;;456        {
;;;457            return NRF_ERROR_NULL;
000006  200e              MOVS     r0,#0xe
                  |L5.8|
;;;458        }
;;;459    
;;;460        if (conn_handle == BLE_CONN_HANDLE_INVALID)
;;;461        {
;;;462            *p_data_length = p_gatt->data_length;
;;;463            return NRF_SUCCESS;
;;;464        }
;;;465    
;;;466        if (conn_handle >= NRF_BLE_GATT_LINK_COUNT)
;;;467        {
;;;468            return NRF_ERROR_INVALID_PARAM;
;;;469        }
;;;470    
;;;471        *p_data_length = p_gatt->links[conn_handle].data_length_effective;
;;;472        return NRF_SUCCESS;
;;;473    }
000008  4770              BX       lr
                  |L5.10|
00000a  f64f70ff          MOV      r0,#0xffff            ;460
00000e  4281              CMP      r1,r0                 ;460
000010  d103              BNE      |L5.26|
000012  7918              LDRB     r0,[r3,#4]            ;462
000014  7010              STRB     r0,[r2,#0]            ;462
000016  2000              MOVS     r0,#0                 ;463
000018  e7f6              B        |L5.8|
                  |L5.26|
00001a  2901              CMP      r1,#1                 ;466
00001c  db01              BLT      |L5.34|
00001e  2007              MOVS     r0,#7                 ;468
000020  e7f2              B        |L5.8|
                  |L5.34|
000022  1d98              ADDS     r0,r3,#6              ;471
000024  eb0000c1          ADD      r0,r0,r1,LSL #3       ;471
000028  79c0              LDRB     r0,[r0,#7]            ;471
00002a  7010              STRB     r0,[r2,#0]            ;471
00002c  2000              MOVS     r0,#0                 ;472
00002e  e7eb              B        |L5.8|
;;;474    
                          ENDP


                          AREA ||i.nrf_ble_gatt_data_length_set||, CODE, READONLY, ALIGN=1

                  nrf_ble_gatt_data_length_set PROC
;;;415    
;;;416    ret_code_t nrf_ble_gatt_data_length_set(nrf_ble_gatt_t * p_gatt,
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;417                                            uint16_t         conn_handle,
;;;418                                            uint8_t          data_length)
;;;419    {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;420        ret_code_t err_code;
;;;421    
;;;422        if (p_gatt == NULL)
;;;423        {
;;;424            return NRF_ERROR_NULL;
;;;425        }
;;;426    
;;;427        if (conn_handle == BLE_CONN_HANDLE_INVALID)
;;;428        {
;;;429            p_gatt->data_length = MIN(data_length, NRF_SDH_BLE_GATT_MAX_MTU_SIZE + L2CAP_HDR_LEN);
;;;430            return NRF_SUCCESS;
;;;431        }
;;;432    
;;;433        if (conn_handle >= NRF_BLE_GATT_LINK_COUNT)
;;;434        {
;;;435            return NRF_ERROR_INVALID_PARAM;
;;;436        }
;;;437    
;;;438        p_gatt->links[conn_handle].data_length_desired = data_length;
;;;439    
;;;440        ble_gap_data_length_params_t const dlp =
00000a  2000              MOVS     r0,#0
00000c  9000              STR      r0,[sp,#0]
00000e  9001              STR      r0,[sp,#4]
000010  b916              CBNZ     r6,|L6.24|
000012  200e              MOVS     r0,#0xe               ;424
                  |L6.20|
;;;441        {
;;;442            .max_rx_octets = data_length,
;;;443            .max_tx_octets = data_length,
;;;444        };
;;;445    
;;;446        err_code = sd_ble_gap_data_length_update(conn_handle, &dlp, NULL);
;;;447        return err_code;
;;;448    }
000014  e8bd81fc          POP      {r2-r8,pc}
                  |L6.24|
000018  f64f70ff          MOV      r0,#0xffff            ;427
00001c  4284              CMP      r4,r0                 ;427
00001e  d107              BNE      |L6.48|
000020  2d1b              CMP      r5,#0x1b              ;429
000022  da01              BGE      |L6.40|
000024  4628              MOV      r0,r5                 ;429
000026  e000              B        |L6.42|
                  |L6.40|
000028  201b              MOVS     r0,#0x1b              ;429
                  |L6.42|
00002a  7130              STRB     r0,[r6,#4]            ;429
00002c  2000              MOVS     r0,#0                 ;430
00002e  e7f1              B        |L6.20|
                  |L6.48|
000030  2c01              CMP      r4,#1                 ;433
000032  db01              BLT      |L6.56|
000034  2007              MOVS     r0,#7                 ;435
000036  e7ed              B        |L6.20|
                  |L6.56|
000038  1db0              ADDS     r0,r6,#6              ;438
00003a  eb0000c4          ADD      r0,r0,r4,LSL #3       ;438
00003e  7185              STRB     r5,[r0,#6]            ;438
000040  f8ad5000          STRH     r5,[sp,#0]            ;440
000044  f8ad5002          STRH     r5,[sp,#2]            ;440
000048  2200              MOVS     r2,#0                 ;446
00004a  4669              MOV      r1,sp                 ;446
00004c  4620              MOV      r0,r4                 ;446
00004e  df90              SVC      #0x90                 ;446
000050  4607              MOV      r7,r0                 ;446
000052  4638              MOV      r0,r7                 ;447
000054  e7de              B        |L6.20|
;;;449    
                          ENDP


                          AREA ||i.nrf_ble_gatt_eff_mtu_get||, CODE, READONLY, ALIGN=1

                  nrf_ble_gatt_eff_mtu_get PROC
;;;404    
;;;405    uint16_t nrf_ble_gatt_eff_mtu_get(nrf_ble_gatt_t const * p_gatt, uint16_t conn_handle)
000000  4602              MOV      r2,r0
;;;406    {
;;;407        if ((p_gatt == NULL) || (conn_handle >= NRF_BLE_GATT_LINK_COUNT))
000002  b10a              CBZ      r2,|L7.8|
000004  2901              CMP      r1,#1
000006  db01              BLT      |L7.12|
                  |L7.8|
;;;408        {
;;;409            return 0;
000008  2000              MOVS     r0,#0
                  |L7.10|
;;;410        }
;;;411    
;;;412        return p_gatt->links[conn_handle].att_mtu_effective;
;;;413    }
00000a  4770              BX       lr
                  |L7.12|
00000c  1d90              ADDS     r0,r2,#6              ;412
00000e  eb0000c1          ADD      r0,r0,r1,LSL #3       ;412
000012  8840              LDRH     r0,[r0,#2]            ;412
000014  e7f9              B        |L7.10|
;;;414    
                          ENDP


                          AREA ||i.nrf_ble_gatt_init||, CODE, READONLY, ALIGN=1

                  nrf_ble_gatt_init PROC
;;;358    
;;;359    ret_code_t nrf_ble_gatt_init(nrf_ble_gatt_t * p_gatt, nrf_ble_gatt_evt_handler_t evt_handler)
000000  b570              PUSH     {r4-r6,lr}
;;;360    {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
;;;361        VERIFY_PARAM_NOT_NULL(p_gatt);
000006  bf00              NOP      
000008  b90c              CBNZ     r4,|L8.14|
00000a  200e              MOVS     r0,#0xe
                  |L8.12|
;;;362    
;;;363        p_gatt->evt_handler             = evt_handler;
;;;364        p_gatt->att_mtu_desired_periph  = NRF_SDH_BLE_GATT_MAX_MTU_SIZE;
;;;365        p_gatt->att_mtu_desired_central = NRF_SDH_BLE_GATT_MAX_MTU_SIZE;
;;;366        p_gatt->data_length             = NRF_SDH_BLE_GATT_MAX_MTU_SIZE + L2CAP_HDR_LEN;
;;;367    
;;;368        for (uint32_t i = 0; i < NRF_BLE_GATT_LINK_COUNT; i++)
;;;369        {
;;;370            link_init(&p_gatt->links[i]);
;;;371        }
;;;372    
;;;373        return NRF_SUCCESS;
;;;374    }
00000c  bd70              POP      {r4-r6,pc}
                  |L8.14|
00000e  bf00              NOP                            ;361
000010  6126              STR      r6,[r4,#0x10]         ;363
000012  2017              MOVS     r0,#0x17              ;364
000014  8020              STRH     r0,[r4,#0]            ;364
000016  8060              STRH     r0,[r4,#2]            ;365
000018  201b              MOVS     r0,#0x1b              ;366
00001a  7120              STRB     r0,[r4,#4]            ;366
00001c  2500              MOVS     r5,#0                 ;368
00001e  e005              B        |L8.44|
                  |L8.32|
000020  1da1              ADDS     r1,r4,#6              ;370
000022  eb0100c5          ADD      r0,r1,r5,LSL #3       ;370
000026  f7fffffe          BL       link_init
00002a  1c6d              ADDS     r5,r5,#1              ;368
                  |L8.44|
00002c  2d00              CMP      r5,#0                 ;368
00002e  d0f7              BEQ      |L8.32|
000030  2000              MOVS     r0,#0                 ;373
000032  e7eb              B        |L8.12|
;;;375    
                          ENDP


                          AREA ||i.nrf_ble_gatt_on_ble_evt||, CODE, READONLY, ALIGN=2

                  nrf_ble_gatt_on_ble_evt PROC
;;;475    
;;;476    void nrf_ble_gatt_on_ble_evt(ble_evt_t const * p_ble_evt, void * p_context)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;477    {
000004  4606              MOV      r6,r0
000006  4688              MOV      r8,r1
;;;478        nrf_ble_gatt_t * p_gatt      = (nrf_ble_gatt_t *)p_context;
000008  4645              MOV      r5,r8
;;;479        uint16_t         conn_handle = p_ble_evt->evt.common_evt.conn_handle;
00000a  88b4              LDRH     r4,[r6,#4]
;;;480    
;;;481        if (conn_handle >= NRF_BLE_GATT_LINK_COUNT)
00000c  2c01              CMP      r4,#1
00000e  db01              BLT      |L9.20|
                  |L9.16|
;;;482        {
;;;483            return;
;;;484        }
;;;485    
;;;486        switch (p_ble_evt->header.evt_id)
;;;487        {
;;;488            case BLE_GAP_EVT_CONNECTED:
;;;489                on_connected_evt(p_gatt, p_ble_evt);
;;;490                break;
;;;491    
;;;492            case BLE_GAP_EVT_DISCONNECTED:
;;;493                on_disconnected_evt(p_gatt, p_ble_evt);
;;;494                break;
;;;495    
;;;496            case BLE_GATTC_EVT_EXCHANGE_MTU_RSP:
;;;497                on_exchange_mtu_rsp_evt(p_gatt, p_ble_evt);
;;;498                break;
;;;499    
;;;500            case BLE_GATTS_EVT_EXCHANGE_MTU_REQUEST:
;;;501                on_exchange_mtu_request_evt(p_gatt, p_ble_evt);
;;;502                break;
;;;503    
;;;504            case BLE_GAP_EVT_DATA_LENGTH_UPDATE:
;;;505                on_data_length_update_evt(p_gatt, p_ble_evt);
;;;506                break;
;;;507    
;;;508            case BLE_GAP_EVT_DATA_LENGTH_UPDATE_REQUEST:
;;;509                on_data_length_update_request_evt(p_gatt, p_ble_evt);
;;;510                break;
;;;511    
;;;512            default:
;;;513                break;
;;;514        }
;;;515    
;;;516        if (p_gatt->links[conn_handle].att_mtu_exchange_pending)
;;;517        {
;;;518            ret_code_t err_code;
;;;519    
;;;520            err_code = sd_ble_gattc_exchange_mtu_request(conn_handle,
;;;521                                                         p_gatt->links[conn_handle].att_mtu_desired);
;;;522    
;;;523            if (err_code == NRF_SUCCESS)
;;;524            {
;;;525                p_gatt->links[conn_handle].att_mtu_exchange_pending   = false;
;;;526                p_gatt->links[conn_handle].att_mtu_exchange_requested = true;
;;;527    
;;;528                NRF_LOG_DEBUG("Requesting to update ATT MTU to %u bytes on connection 0x%x (retry).",
;;;529                              p_gatt->links[conn_handle].att_mtu_desired, conn_handle);
;;;530            }
;;;531            else if (err_code != NRF_ERROR_BUSY)
;;;532            {
;;;533                NRF_LOG_ERROR("sd_ble_gattc_exchange_mtu_request() returned unexpected value 0x%x.",
;;;534                              err_code);
;;;535            }
;;;536        }
;;;537    }
000010  e8bd81f0          POP      {r4-r8,pc}
                  |L9.20|
000014  8830              LDRH     r0,[r6,#0]            ;486
000016  2824              CMP      r0,#0x24              ;486
000018  d020              BEQ      |L9.92|
00001a  dc06              BGT      |L9.42|
00001c  2810              CMP      r0,#0x10              ;486
00001e  d009              BEQ      |L9.52|
000020  2811              CMP      r0,#0x11              ;486
000022  d00c              BEQ      |L9.62|
000024  2823              CMP      r0,#0x23              ;486
000026  d123              BNE      |L9.112|
000028  e01d              B        |L9.102|
                  |L9.42|
00002a  283a              CMP      r0,#0x3a              ;486
00002c  d00c              BEQ      |L9.72|
00002e  2855              CMP      r0,#0x55              ;486
000030  d11e              BNE      |L9.112|
000032  e00e              B        |L9.82|
                  |L9.52|
000034  4631              MOV      r1,r6                 ;489
000036  4628              MOV      r0,r5                 ;489
000038  f7fffffe          BL       on_connected_evt
00003c  e019              B        |L9.114|
                  |L9.62|
00003e  4631              MOV      r1,r6                 ;493
000040  4628              MOV      r0,r5                 ;493
000042  f7fffffe          BL       on_disconnected_evt
000046  e014              B        |L9.114|
                  |L9.72|
000048  4631              MOV      r1,r6                 ;497
00004a  4628              MOV      r0,r5                 ;497
00004c  f7fffffe          BL       on_exchange_mtu_rsp_evt
000050  e00f              B        |L9.114|
                  |L9.82|
000052  4631              MOV      r1,r6                 ;501
000054  4628              MOV      r0,r5                 ;501
000056  f7fffffe          BL       on_exchange_mtu_request_evt
00005a  e00a              B        |L9.114|
                  |L9.92|
00005c  4631              MOV      r1,r6                 ;505
00005e  4628              MOV      r0,r5                 ;505
000060  f7fffffe          BL       on_data_length_update_evt
000064  e005              B        |L9.114|
                  |L9.102|
000066  4631              MOV      r1,r6                 ;509
000068  4628              MOV      r0,r5                 ;509
00006a  f7fffffe          BL       on_data_length_update_request_evt
00006e  e000              B        |L9.114|
                  |L9.112|
000070  bf00              NOP                            ;513
                  |L9.114|
000072  bf00              NOP                            ;490
000074  1da8              ADDS     r0,r5,#6              ;516
000076  eb0000c4          ADD      r0,r0,r4,LSL #3       ;516
00007a  7900              LDRB     r0,[r0,#4]            ;516
00007c  b348              CBZ      r0,|L9.210|
00007e  1da8              ADDS     r0,r5,#6              ;520
000080  f8301034          LDRH     r1,[r0,r4,LSL #3]     ;520
000084  4620              MOV      r0,r4                 ;520
000086  df9e              SVC      #0x9e                 ;520
000088  4607              MOV      r7,r0                 ;520
00008a  b9b7              CBNZ     r7,|L9.186|
00008c  2100              MOVS     r1,#0                 ;525
00008e  1da8              ADDS     r0,r5,#6              ;525
000090  eb0000c4          ADD      r0,r0,r4,LSL #3       ;525
000094  7101              STRB     r1,[r0,#4]            ;525
000096  2101              MOVS     r1,#1                 ;526
000098  1da8              ADDS     r0,r5,#6              ;526
00009a  eb0000c4          ADD      r0,r0,r4,LSL #3       ;526
00009e  7141              STRB     r1,[r0,#5]            ;526
0000a0  1da9              ADDS     r1,r5,#6              ;528
0000a2  f8312034          LDRH     r2,[r1,r4,LSL #3]     ;528
0000a6  490c              LDR      r1,|L9.216|
0000a8  8809              LDRH     r1,[r1,#0]            ;528  ; m_nrf_log_ble_gatt_logs_data_dynamic
0000aa  2304              MOVS     r3,#4                 ;528
0000ac  ea434001          ORR      r0,r3,r1,LSL #16      ;528
0000b0  4623              MOV      r3,r4                 ;528
0000b2  490a              LDR      r1,|L9.220|
0000b4  f7fffffe          BL       nrf_log_frontend_std_2
0000b8  e00a              B        |L9.208|
                  |L9.186|
0000ba  2f11              CMP      r7,#0x11              ;531
0000bc  d008              BEQ      |L9.208|
0000be  4906              LDR      r1,|L9.216|
0000c0  8809              LDRH     r1,[r1,#0]            ;533  ; m_nrf_log_ble_gatt_logs_data_dynamic
0000c2  2201              MOVS     r2,#1                 ;533
0000c4  ea424001          ORR      r0,r2,r1,LSL #16      ;533
0000c8  463a              MOV      r2,r7                 ;533
0000ca  4905              LDR      r1,|L9.224|
0000cc  f7fffffe          BL       nrf_log_frontend_std_1
                  |L9.208|
0000d0  bf00              NOP                            ;536
                  |L9.210|
0000d2  bf00              NOP      
0000d4  e79c              B        |L9.16|
;;;538    
                          ENDP

0000d6  0000              DCW      0x0000
                  |L9.216|
                          DCD      m_nrf_log_ble_gatt_logs_data_dynamic
                  |L9.220|
                          DCD      ||.conststring||+0x184
                  |L9.224|
                          DCD      ||.conststring||+0xb4

                          AREA ||i.on_connected_evt||, CODE, READONLY, ALIGN=2

                  on_connected_evt PROC
;;;102     */
;;;103    static void on_connected_evt(nrf_ble_gatt_t * p_gatt, ble_evt_t const * p_ble_evt)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;104    {
000004  4605              MOV      r5,r0
000006  4688              MOV      r8,r1
;;;105        ret_code_t            err_code;
;;;106        uint16_t              conn_handle = p_ble_evt->evt.common_evt.conn_handle;
000008  f8b87004          LDRH     r7,[r8,#4]
;;;107        nrf_ble_gatt_link_t * p_link      = &p_gatt->links[conn_handle];
00000c  1da8              ADDS     r0,r5,#6
00000e  eb0004c7          ADD      r4,r0,r7,LSL #3
;;;108    
;;;109        // Update the link desired settings to reflect the current global settings.
;;;110    
;;;111        p_link->data_length_desired = p_gatt->data_length;
000012  7928              LDRB     r0,[r5,#4]
000014  71a0              STRB     r0,[r4,#6]
;;;112    
;;;113        switch (p_ble_evt->evt.gap_evt.params.connected.role)
000016  f898000f          LDRB     r0,[r8,#0xf]
00001a  2801              CMP      r0,#1
00001c  d002              BEQ      |L10.36|
00001e  2802              CMP      r0,#2
000020  d106              BNE      |L10.48|
000022  e002              B        |L10.42|
                  |L10.36|
;;;114        {
;;;115            case BLE_GAP_ROLE_PERIPH:
;;;116                p_link->att_mtu_desired = p_gatt->att_mtu_desired_periph;
000024  8828              LDRH     r0,[r5,#0]
000026  8020              STRH     r0,[r4,#0]
;;;117                break;
000028  e003              B        |L10.50|
                  |L10.42|
;;;118    
;;;119            case BLE_GAP_ROLE_CENTRAL:
;;;120                p_link->att_mtu_desired = p_gatt->att_mtu_desired_central;
00002a  8868              LDRH     r0,[r5,#2]
00002c  8020              STRH     r0,[r4,#0]
;;;121                break;
00002e  e000              B        |L10.50|
                  |L10.48|
;;;122    
;;;123            default:
;;;124                // Ignore.
;;;125                break;
000030  bf00              NOP      
                  |L10.50|
000032  bf00              NOP                            ;117
;;;126        }
;;;127    
;;;128        // Begin an ATT MTU exchange if necessary.
;;;129        if (p_link->att_mtu_desired > p_link->att_mtu_effective)
000034  8820              LDRH     r0,[r4,#0]
000036  8861              LDRH     r1,[r4,#2]
000038  4288              CMP      r0,r1
00003a  dd28              BLE      |L10.142|
;;;130        {
;;;131            NRF_LOG_DEBUG("Requesting to update ATT MTU to %u bytes on connection 0x%x.",
00003c  8822              LDRH     r2,[r4,#0]
00003e  4919              LDR      r1,|L10.164|
000040  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000042  2304              MOVS     r3,#4
000044  ea434001          ORR      r0,r3,r1,LSL #16
000048  463b              MOV      r3,r7
00004a  a117              ADR      r1,|L10.168|
00004c  f7fffffe          BL       nrf_log_frontend_std_2
;;;132                          p_link->att_mtu_desired, conn_handle);
;;;133    
;;;134            err_code = sd_ble_gattc_exchange_mtu_request(conn_handle, p_link->att_mtu_desired);
000050  8821              LDRH     r1,[r4,#0]
000052  4638              MOV      r0,r7
000054  df9e              SVC      #0x9e
000056  4606              MOV      r6,r0
;;;135    
;;;136            if (err_code == NRF_SUCCESS)
000058  b916              CBNZ     r6,|L10.96|
;;;137            {
;;;138                p_link->att_mtu_exchange_requested = true;
00005a  2001              MOVS     r0,#1
00005c  7160              STRB     r0,[r4,#5]
00005e  e016              B        |L10.142|
                  |L10.96|
;;;139            }
;;;140            else if (err_code == NRF_ERROR_BUSY)
000060  2e11              CMP      r6,#0x11
000062  d10b              BNE      |L10.124|
;;;141            {
;;;142                p_link->att_mtu_exchange_pending = true;
000064  2001              MOVS     r0,#1
000066  7120              STRB     r0,[r4,#4]
;;;143                NRF_LOG_DEBUG("sd_ble_gattc_exchange_mtu_request()"
000068  490e              LDR      r1,|L10.164|
00006a  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
00006c  2204              MOVS     r2,#4
00006e  ea424001          ORR      r0,r2,r1,LSL #16
000072  463a              MOV      r2,r7
000074  491c              LDR      r1,|L10.232|
000076  f7fffffe          BL       nrf_log_frontend_std_1
00007a  e008              B        |L10.142|
                  |L10.124|
;;;144                              " on connection 0x%x returned busy, will retry.", conn_handle);
;;;145            }
;;;146            else
;;;147            {
;;;148                NRF_LOG_ERROR("sd_ble_gattc_exchange_mtu_request()"
00007c  4909              LDR      r1,|L10.164|
00007e  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000080  2201              MOVS     r2,#1
000082  ea424001          ORR      r0,r2,r1,LSL #16
000086  4632              MOV      r2,r6
000088  4918              LDR      r1,|L10.236|
00008a  f7fffffe          BL       nrf_log_frontend_std_1
                  |L10.142|
;;;149                              " returned unexpected value 0x%x.",
;;;150                              err_code);
;;;151            }
;;;152        }
;;;153    
;;;154        // Send a data length update request if necessary.
;;;155        if (p_link->data_length_desired > p_link->data_length_effective)
00008e  79a0              LDRB     r0,[r4,#6]
000090  79e1              LDRB     r1,[r4,#7]
000092  4288              CMP      r0,r1
000094  dd03              BLE      |L10.158|
;;;156        {
;;;157            data_length_update(conn_handle, p_gatt);
000096  4629              MOV      r1,r5
000098  4638              MOV      r0,r7
00009a  f7fffffe          BL       data_length_update
                  |L10.158|
;;;158        }
;;;159    }
00009e  e8bd81f0          POP      {r4-r8,pc}
;;;160    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L10.164|
                          DCD      m_nrf_log_ble_gatt_logs_data_dynamic
                  |L10.168|
0000a8  52657175          DCB      "Requesting to update ATT MTU to %u bytes on connection "
0000ac  65737469
0000b0  6e672074
0000b4  6f207570
0000b8  64617465
0000bc  20415454
0000c0  204d5455
0000c4  20746f20
0000c8  25752062
0000cc  79746573
0000d0  206f6e20
0000d4  636f6e6e
0000d8  65637469
0000dc  6f6e20  
0000df  30782578          DCB      "0x%x.",0
0000e3  2e00    
0000e5  00                DCB      0
0000e6  00                DCB      0
0000e7  00                DCB      0
                  |L10.232|
                          DCD      ||.conststring||+0x60
                  |L10.236|
                          DCD      ||.conststring||+0xb4

                          AREA ||i.on_data_length_update_evt||, CODE, READONLY, ALIGN=2

                  on_data_length_update_evt PROC
;;;272     */
;;;273    static void on_data_length_update_evt(nrf_ble_gatt_t * p_gatt, ble_evt_t const * p_ble_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;274    {
000002  b090              SUB      sp,sp,#0x40
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;275        ble_gap_evt_t const gap_evt     = p_ble_evt->evt.gap_evt;
000008  2234              MOVS     r2,#0x34
00000a  1d31              ADDS     r1,r6,#4
00000c  a803              ADD      r0,sp,#0xc
00000e  f7fffffe          BL       __aeabi_memcpy4
;;;276        uint16_t      const conn_handle = gap_evt.conn_handle;
000012  f8bd500c          LDRH     r5,[sp,#0xc]
;;;277    
;;;278        // Update the connection data length.
;;;279        p_gatt->links[conn_handle].data_length_effective =
000016  f8bd0010          LDRH     r0,[sp,#0x10]
00001a  b2c1              UXTB     r1,r0
00001c  1da0              ADDS     r0,r4,#6
00001e  eb0000c5          ADD      r0,r0,r5,LSL #3
000022  71c1              STRB     r1,[r0,#7]
;;;280            gap_evt.params.data_length_update.effective_params.max_tx_octets;
;;;281    
;;;282        NRF_LOG_DEBUG("Data length updated to %u on connection 0x%0x.",
000024  1da1              ADDS     r1,r4,#6
000026  eb0101c5          ADD      r1,r1,r5,LSL #3
00002a  79ca              LDRB     r2,[r1,#7]
00002c  4922              LDR      r1,|L11.184|
00002e  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000030  2304              MOVS     r3,#4
000032  ea434001          ORR      r0,r3,r1,LSL #16
000036  462b              MOV      r3,r5
000038  a120              ADR      r1,|L11.188|
00003a  f7fffffe          BL       nrf_log_frontend_std_2
;;;283                      p_gatt->links[conn_handle].data_length_effective,
;;;284                      conn_handle);
;;;285    
;;;286        NRF_LOG_DEBUG("max_rx_octets: %u",
00003e  f8bd2012          LDRH     r2,[sp,#0x12]
000042  491d              LDR      r1,|L11.184|
000044  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000046  2304              MOVS     r3,#4
000048  ea434001          ORR      r0,r3,r1,LSL #16
00004c  a127              ADR      r1,|L11.236|
00004e  f7fffffe          BL       nrf_log_frontend_std_1
;;;287                      gap_evt.params.data_length_update.effective_params.max_rx_octets);
;;;288        NRF_LOG_DEBUG("max_tx_octets: %u",
000052  f8bd2010          LDRH     r2,[sp,#0x10]
000056  4918              LDR      r1,|L11.184|
000058  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
00005a  2304              MOVS     r3,#4
00005c  ea434001          ORR      r0,r3,r1,LSL #16
000060  a127              ADR      r1,|L11.256|
000062  f7fffffe          BL       nrf_log_frontend_std_1
;;;289                      gap_evt.params.data_length_update.effective_params.max_tx_octets);
;;;290        NRF_LOG_DEBUG("max_rx_time: %u",
000066  f8bd2016          LDRH     r2,[sp,#0x16]
00006a  4913              LDR      r1,|L11.184|
00006c  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
00006e  2304              MOVS     r3,#4
000070  ea434001          ORR      r0,r3,r1,LSL #16
000074  a127              ADR      r1,|L11.276|
000076  f7fffffe          BL       nrf_log_frontend_std_1
;;;291                      gap_evt.params.data_length_update.effective_params.max_rx_time_us);
;;;292        NRF_LOG_DEBUG("max_tx_time: %u",
00007a  f8bd2014          LDRH     r2,[sp,#0x14]
00007e  490e              LDR      r1,|L11.184|
000080  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000082  2304              MOVS     r3,#4
000084  ea434001          ORR      r0,r3,r1,LSL #16
000088  a126              ADR      r1,|L11.292|
00008a  f7fffffe          BL       nrf_log_frontend_std_1
;;;293                      gap_evt.params.data_length_update.effective_params.max_tx_time_us);
;;;294    
;;;295        if (p_gatt->evt_handler != NULL)
00008e  6920              LDR      r0,[r4,#0x10]
000090  b180              CBZ      r0,|L11.180|
;;;296        {
;;;297            nrf_ble_gatt_evt_t const evt =
000092  4928              LDR      r1,|L11.308|
000094  c903              LDM      r1,{r0,r1}
000096  e9cd0101          STRD     r0,r1,[sp,#4]
00009a  f8ad5006          STRH     r5,[sp,#6]
00009e  1da0              ADDS     r0,r4,#6
0000a0  eb0000c5          ADD      r0,r0,r5,LSL #3
0000a4  79c0              LDRB     r0,[r0,#7]
0000a6  f88d0008          STRB     r0,[sp,#8]
;;;298            {
;;;299                .evt_id             = NRF_BLE_GATT_EVT_DATA_LENGTH_UPDATED,
;;;300                .conn_handle        = conn_handle,
;;;301                .params.data_length = p_gatt->links[conn_handle].data_length_effective,
;;;302            };
;;;303    
;;;304            p_gatt->evt_handler(p_gatt, &evt);
0000aa  a901              ADD      r1,sp,#4
0000ac  4620              MOV      r0,r4
0000ae  6922              LDR      r2,[r4,#0x10]
0000b0  4790              BLX      r2
;;;305        }
0000b2  bf00              NOP      
                  |L11.180|
;;;306    }
0000b4  b010              ADD      sp,sp,#0x40
0000b6  bd70              POP      {r4-r6,pc}
;;;307    
                          ENDP

                  |L11.184|
                          DCD      m_nrf_log_ble_gatt_logs_data_dynamic
                  |L11.188|
0000bc  44617461          DCB      "Data length updated to %u on connection 0x%0x.",0
0000c0  206c656e
0000c4  67746820
0000c8  75706461
0000cc  74656420
0000d0  746f2025
0000d4  75206f6e
0000d8  20636f6e
0000dc  6e656374
0000e0  696f6e20
0000e4  30782530
0000e8  782e00  
0000eb  00                DCB      0
                  |L11.236|
0000ec  6d61785f          DCB      "max_rx_octets: %u",0
0000f0  72785f6f
0000f4  63746574
0000f8  733a2025
0000fc  7500    
0000fe  00                DCB      0
0000ff  00                DCB      0
                  |L11.256|
000100  6d61785f          DCB      "max_tx_octets: %u",0
000104  74785f6f
000108  63746574
00010c  733a2025
000110  7500    
000112  00                DCB      0
000113  00                DCB      0
                  |L11.276|
000114  6d61785f          DCB      "max_rx_time: %u",0
000118  72785f74
00011c  696d653a
000120  20257500
                  |L11.292|
000124  6d61785f          DCB      "max_tx_time: %u",0
000128  74785f74
00012c  696d653a
000130  20257500
                  |L11.308|
                          DCD      ||.constdata||+0x10

                          AREA ||i.on_data_length_update_request_evt||, CODE, READONLY, ALIGN=2

                  on_data_length_update_request_evt PROC
;;;323     */
;;;324    static void on_data_length_update_request_evt(nrf_ble_gatt_t * p_gatt, ble_evt_t const * p_ble_evt)
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;325    {
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
;;;326        ret_code_t err_code;
;;;327    
;;;328        ble_gap_evt_t       const * p_gap_evt = &p_ble_evt->evt.gap_evt;
;;;329        nrf_ble_gatt_link_t       * p_link    = &p_gatt->links[p_gap_evt->conn_handle];
;;;330    
;;;331        uint8_t const data_length_peer =
;;;332            p_gap_evt->params.data_length_update_request.peer_params.max_tx_octets;
;;;333    
;;;334        NRF_LOG_DEBUG("Peer on connection 0x%x requested a data length of %u bytes.",
;;;335                      p_gap_evt->conn_handle, data_length_peer);
;;;336    
;;;337        uint8_t const data_length = MIN(p_link->data_length_desired, data_length_peer);
;;;338    
;;;339        ble_gap_data_length_params_t const dlp =
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  f1080404          ADD      r4,r8,#4              ;328
000012  8821              LDRH     r1,[r4,#0]            ;329
000014  1db8              ADDS     r0,r7,#6              ;329
000016  eb0009c1          ADD      r9,r0,r1,LSL #3       ;329
00001a  f894a004          LDRB     r10,[r4,#4]           ;331
00001e  8822              LDRH     r2,[r4,#0]            ;334
000020  4918              LDR      r1,|L12.132|
000022  8809              LDRH     r1,[r1,#0]            ;334  ; m_nrf_log_ble_gatt_logs_data_dynamic
000024  2304              MOVS     r3,#4                 ;334
000026  ea434001          ORR      r0,r3,r1,LSL #16      ;334
00002a  4653              MOV      r3,r10                ;334
00002c  a116              ADR      r1,|L12.136|
00002e  f7fffffe          BL       nrf_log_frontend_std_2
000032  f8990006          LDRB     r0,[r9,#6]            ;337
000036  4550              CMP      r0,r10                ;337
000038  da02              BGE      |L12.64|
00003a  f8990006          LDRB     r0,[r9,#6]            ;337
00003e  e000              B        |L12.66|
                  |L12.64|
000040  4650              MOV      r0,r10                ;337
                  |L12.66|
000042  4606              MOV      r6,r0                 ;337
000044  f8ad6000          STRH     r6,[sp,#0]
000048  f8ad6002          STRH     r6,[sp,#2]
;;;340        {
;;;341            .max_rx_octets = data_length,
;;;342            .max_tx_octets = data_length,
;;;343        };
;;;344    
;;;345        NRF_LOG_DEBUG("Updating data length to %u bytes on connection 0x%x.",
00004c  8823              LDRH     r3,[r4,#0]
00004e  490d              LDR      r1,|L12.132|
000050  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000052  2204              MOVS     r2,#4
000054  ea424001          ORR      r0,r2,r1,LSL #16
000058  4632              MOV      r2,r6
00005a  a11b              ADR      r1,|L12.200|
00005c  f7fffffe          BL       nrf_log_frontend_std_2
;;;346                      data_length, p_gap_evt->conn_handle);
;;;347    
;;;348        err_code = sd_ble_gap_data_length_update(p_gap_evt->conn_handle, &dlp, NULL);
000060  8820              LDRH     r0,[r4,#0]
000062  2200              MOVS     r2,#0
000064  4669              MOV      r1,sp
000066  df90              SVC      #0x90
000068  4605              MOV      r5,r0
;;;349    
;;;350        if (err_code != NRF_SUCCESS)
00006a  b145              CBZ      r5,|L12.126|
;;;351        {
;;;352            NRF_LOG_ERROR("sd_ble_gap_data_length_update() (reply)"
00006c  4905              LDR      r1,|L12.132|
00006e  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000070  2201              MOVS     r2,#1
000072  ea424001          ORR      r0,r2,r1,LSL #16
000076  462a              MOV      r2,r5
000078  4921              LDR      r1,|L12.256|
00007a  f7fffffe          BL       nrf_log_frontend_std_1
                  |L12.126|
;;;353                          " returned unexpected value 0x%x.",
;;;354                          err_code);
;;;355        }
;;;356    }
00007e  e8bd87fc          POP      {r2-r10,pc}
;;;357    
                          ENDP

000082  0000              DCW      0x0000
                  |L12.132|
                          DCD      m_nrf_log_ble_gatt_logs_data_dynamic
                  |L12.136|
000088  50656572          DCB      "Peer on connection 0x%x requested a data length of %u b"
00008c  206f6e20
000090  636f6e6e
000094  65637469
000098  6f6e2030
00009c  78257820
0000a0  72657175
0000a4  65737465
0000a8  64206120
0000ac  64617461
0000b0  206c656e
0000b4  67746820
0000b8  6f662025
0000bc  752062  
0000bf  79746573          DCB      "ytes.",0
0000c3  2e00    
0000c5  00                DCB      0
0000c6  00                DCB      0
0000c7  00                DCB      0
                  |L12.200|
0000c8  55706461          DCB      "Updating data length to %u bytes on connection 0x%x.",0
0000cc  74696e67
0000d0  20646174
0000d4  61206c65
0000d8  6e677468
0000dc  20746f20
0000e0  25752062
0000e4  79746573
0000e8  206f6e20
0000ec  636f6e6e
0000f0  65637469
0000f4  6f6e2030
0000f8  7825782e
0000fc  00      
0000fd  00                DCB      0
0000fe  00                DCB      0
0000ff  00                DCB      0
                  |L12.256|
                          DCD      ||.conststring||+0x13c

                          AREA ||i.on_disconnected_evt||, CODE, READONLY, ALIGN=1

                  on_disconnected_evt PROC
;;;161    
;;;162    static void on_disconnected_evt(nrf_ble_gatt_t * p_gatt, ble_evt_t const * p_ble_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;163    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;164        // Reset connection parameters.
;;;165        link_init(&p_gatt->links[p_ble_evt->evt.gap_evt.conn_handle]);
000006  88aa              LDRH     r2,[r5,#4]
000008  1da1              ADDS     r1,r4,#6
00000a  eb0100c2          ADD      r0,r1,r2,LSL #3
00000e  f7fffffe          BL       link_init
;;;166    }
000012  bd70              POP      {r4-r6,pc}
;;;167    
                          ENDP


                          AREA ||i.on_exchange_mtu_request_evt||, CODE, READONLY, ALIGN=2

                  on_exchange_mtu_request_evt PROC
;;;216     */
;;;217    static void on_exchange_mtu_request_evt(nrf_ble_gatt_t * p_gatt, ble_evt_t const * p_ble_evt)
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;218    {
000004  4606              MOV      r6,r0
000006  4688              MOV      r8,r1
;;;219        ret_code_t err_code;
;;;220        uint16_t   conn_handle = p_ble_evt->evt.gatts_evt.conn_handle;
000008  f8b85004          LDRH     r5,[r8,#4]
;;;221        uint16_t   client_mtu  = p_ble_evt->evt.gatts_evt.params.exchange_mtu_request.client_rx_mtu;
00000c  f8b89006          LDRH     r9,[r8,#6]
;;;222    
;;;223        nrf_ble_gatt_link_t * p_link = &p_gatt->links[conn_handle];
000010  1db0              ADDS     r0,r6,#6
000012  eb0004c5          ADD      r4,r0,r5,LSL #3
;;;224    
;;;225        NRF_LOG_DEBUG("Peer on connection 0x%x requested an ATT MTU of %u bytes.",
000016  4925              LDR      r1,|L14.172|
000018  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
00001a  2204              MOVS     r2,#4
00001c  ea424001          ORR      r0,r2,r1,LSL #16
000020  464b              MOV      r3,r9
000022  462a              MOV      r2,r5
000024  a122              ADR      r1,|L14.176|
000026  f7fffffe          BL       nrf_log_frontend_std_2
;;;226                      conn_handle, client_mtu);
;;;227    
;;;228        client_mtu = MAX(client_mtu, BLE_GATT_ATT_MTU_DEFAULT);
00002a  f1b90f17          CMP      r9,#0x17
00002e  da01              BGE      |L14.52|
000030  2017              MOVS     r0,#0x17
000032  e000              B        |L14.54|
                  |L14.52|
000034  4648              MOV      r0,r9
                  |L14.54|
000036  4681              MOV      r9,r0
;;;229        p_link->att_mtu_effective = MIN(client_mtu, p_link->att_mtu_desired);
000038  8820              LDRH     r0,[r4,#0]
00003a  4548              CMP      r0,r9
00003c  dd01              BLE      |L14.66|
00003e  4648              MOV      r0,r9
000040  e000              B        |L14.68|
                  |L14.66|
000042  8820              LDRH     r0,[r4,#0]
                  |L14.68|
000044  8060              STRH     r0,[r4,#2]
;;;230        p_link->att_mtu_exchange_pending = false;
000046  2000              MOVS     r0,#0
000048  7120              STRB     r0,[r4,#4]
;;;231    
;;;232        NRF_LOG_DEBUG("Updating ATT MTU to %u bytes (desired: %u) on connection 0x%x.",
00004a  9500              STR      r5,[sp,#0]
00004c  8823              LDRH     r3,[r4,#0]
00004e  8862              LDRH     r2,[r4,#2]
000050  4916              LDR      r1,|L14.172|
000052  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000054  f04f0c04          MOV      r12,#4
000058  ea4c4001          ORR      r0,r12,r1,LSL #16
00005c  a123              ADR      r1,|L14.236|
00005e  f7fffffe          BL       nrf_log_frontend_std_3
;;;233                      p_link->att_mtu_effective, p_link->att_mtu_desired, conn_handle);
;;;234    
;;;235        err_code = sd_ble_gatts_exchange_mtu_reply(conn_handle, p_link->att_mtu_desired);
000062  8821              LDRH     r1,[r4,#0]
000064  4628              MOV      r0,r5
000066  dfad              SVC      #0xad
000068  4607              MOV      r7,r0
;;;236    
;;;237        if (err_code != NRF_SUCCESS)
00006a  b147              CBZ      r7,|L14.126|
;;;238        {
;;;239            NRF_LOG_ERROR("sd_ble_gatts_exchange_mtu_reply() returned unexpected value 0x%x.",
00006c  490f              LDR      r1,|L14.172|
00006e  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000070  2201              MOVS     r2,#1
000072  ea424001          ORR      r0,r2,r1,LSL #16
000076  463a              MOV      r2,r7
000078  492c              LDR      r1,|L14.300|
00007a  f7fffffe          BL       nrf_log_frontend_std_1
                  |L14.126|
;;;240                          err_code);
;;;241        }
;;;242    
;;;243        // If an ATT_MTU exchange was requested to the peer, defer sending
;;;244        // the data length update request and the event to the application until
;;;245        // the response for that request is received.
;;;246        if (p_link->att_mtu_exchange_requested)
00007e  7960              LDRB     r0,[r4,#5]
000080  b108              CBZ      r0,|L14.134|
                  |L14.130|
;;;247        {
;;;248            return;
;;;249        }
;;;250    
;;;251        // The ATT MTU exchange has finished. Send an event to the application.
;;;252        if (p_gatt->evt_handler != NULL)
;;;253        {
;;;254            nrf_ble_gatt_evt_t const evt =
;;;255            {
;;;256                .evt_id                   = NRF_BLE_GATT_EVT_ATT_MTU_UPDATED,
;;;257                .conn_handle              = conn_handle,
;;;258                .params.att_mtu_effective = p_link->att_mtu_effective,
;;;259            };
;;;260    
;;;261            p_gatt->evt_handler(p_gatt, &evt);
;;;262        }
;;;263    }
000082  e8bd87fc          POP      {r2-r10,pc}
                  |L14.134|
000086  6930              LDR      r0,[r6,#0x10]         ;252
000088  b168              CBZ      r0,|L14.166|
00008a  4929              LDR      r1,|L14.304|
00008c  c903              LDM      r1,{r0,r1}            ;254
00008e  e9cd0100          STRD     r0,r1,[sp,#0]         ;254
000092  f8ad5002          STRH     r5,[sp,#2]            ;254
000096  8860              LDRH     r0,[r4,#2]            ;254
000098  f8ad0004          STRH     r0,[sp,#4]            ;254
00009c  4669              MOV      r1,sp                 ;261
00009e  4630              MOV      r0,r6                 ;261
0000a0  6932              LDR      r2,[r6,#0x10]         ;261
0000a2  4790              BLX      r2                    ;261
0000a4  bf00              NOP                            ;262
                  |L14.166|
0000a6  bf00              NOP      
0000a8  e7eb              B        |L14.130|
;;;264    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L14.172|
                          DCD      m_nrf_log_ble_gatt_logs_data_dynamic
                  |L14.176|
0000b0  50656572          DCB      "Peer on connection 0x%x requested an ATT MTU of %u byte"
0000b4  206f6e20
0000b8  636f6e6e
0000bc  65637469
0000c0  6f6e2030
0000c4  78257820
0000c8  72657175
0000cc  65737465
0000d0  6420616e
0000d4  20415454
0000d8  204d5455
0000dc  206f6620
0000e0  25752062
0000e4  797465  
0000e7  732e00            DCB      "s.",0
0000ea  00                DCB      0
0000eb  00                DCB      0
                  |L14.236|
0000ec  55706461          DCB      "Updating ATT MTU to %u bytes (desired: %u) on connectio"
0000f0  74696e67
0000f4  20415454
0000f8  204d5455
0000fc  20746f20
000100  25752062
000104  79746573
000108  20286465
00010c  73697265
000110  643a2025
000114  7529206f
000118  6e20636f
00011c  6e6e6563
000120  74696f  
000123  6e203078          DCB      "n 0x%x.",0
000127  25782e00
00012b  00                DCB      0
                  |L14.300|
                          DCD      ||.conststring||+0xf8
                  |L14.304|
                          DCD      ||.constdata||+0x8

                          AREA ||i.on_exchange_mtu_rsp_evt||, CODE, READONLY, ALIGN=2

                  on_exchange_mtu_rsp_evt PROC
;;;177     */
;;;178    static void on_exchange_mtu_rsp_evt(nrf_ble_gatt_t * p_gatt, ble_evt_t const * p_ble_evt)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;179    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;180        uint16_t conn_handle   = p_ble_evt->evt.gattc_evt.conn_handle;
000008  88b7              LDRH     r7,[r6,#4]
;;;181        uint16_t server_rx_mtu = p_ble_evt->evt.gattc_evt.params.exchange_mtu_rsp.server_rx_mtu;
00000a  f8b6800a          LDRH     r8,[r6,#0xa]
;;;182    
;;;183        nrf_ble_gatt_link_t * p_link = &p_gatt->links[conn_handle];
00000e  1da8              ADDS     r0,r5,#6
000010  eb0004c7          ADD      r4,r0,r7,LSL #3
;;;184    
;;;185        // Determine the lowest MTU between our own desired MTU and the peer's.
;;;186        // The MTU may not be less than BLE_GATT_ATT_MTU_DEFAULT.
;;;187        p_link->att_mtu_effective = MIN(server_rx_mtu, p_link->att_mtu_desired);
000014  8820              LDRH     r0,[r4,#0]
000016  4540              CMP      r0,r8
000018  dd01              BLE      |L15.30|
00001a  4640              MOV      r0,r8
00001c  e000              B        |L15.32|
                  |L15.30|
00001e  8820              LDRH     r0,[r4,#0]
                  |L15.32|
000020  8060              STRH     r0,[r4,#2]
;;;188        p_link->att_mtu_effective = MAX(p_link->att_mtu_effective, BLE_GATT_ATT_MTU_DEFAULT);
000022  8860              LDRH     r0,[r4,#2]
000024  2817              CMP      r0,#0x17
000026  da01              BGE      |L15.44|
000028  2017              MOVS     r0,#0x17
00002a  e000              B        |L15.46|
                  |L15.44|
00002c  8860              LDRH     r0,[r4,#2]
                  |L15.46|
00002e  8060              STRH     r0,[r4,#2]
;;;189    
;;;190        NRF_LOG_DEBUG("ATT MTU updated to %u bytes on connection 0x%x (response).",
000030  8862              LDRH     r2,[r4,#2]
000032  4910              LDR      r1,|L15.116|
000034  8809              LDRH     r1,[r1,#0]  ; m_nrf_log_ble_gatt_logs_data_dynamic
000036  2304              MOVS     r3,#4
000038  ea434001          ORR      r0,r3,r1,LSL #16
00003c  463b              MOV      r3,r7
00003e  a10e              ADR      r1,|L15.120|
000040  f7fffffe          BL       nrf_log_frontend_std_2
;;;191                      p_link->att_mtu_effective, conn_handle);
;;;192    
;;;193        // Trigger an event indicating that the ATT MTU size has changed.
;;;194        // Send an event to the application only if an ATT MTU exchange was requested.
;;;195        if ((p_gatt->evt_handler != NULL) && (p_link->att_mtu_exchange_requested))
000044  6928              LDR      r0,[r5,#0x10]
000046  b178              CBZ      r0,|L15.104|
000048  7960              LDRB     r0,[r4,#5]
00004a  b168              CBZ      r0,|L15.104|
;;;196        {
;;;197            nrf_ble_gatt_evt_t const evt =
00004c  4919              LDR      r1,|L15.180|
00004e  c903              LDM      r1,{r0,r1}
000050  e9cd0100          STRD     r0,r1,[sp,#0]
000054  f8ad7002          STRH     r7,[sp,#2]
000058  8860              LDRH     r0,[r4,#2]
00005a  f8ad0004          STRH     r0,[sp,#4]
;;;198            {
;;;199                .evt_id                   = NRF_BLE_GATT_EVT_ATT_MTU_UPDATED,
;;;200                .conn_handle              = conn_handle,
;;;201                .params.att_mtu_effective = p_link->att_mtu_effective,
;;;202            };
;;;203    
;;;204            p_gatt->evt_handler(p_gatt, &evt);
00005e  4669              MOV      r1,sp
000060  4628              MOV      r0,r5
000062  692a              LDR      r2,[r5,#0x10]
000064  4790              BLX      r2
;;;205        }
000066  bf00              NOP      
                  |L15.104|
;;;206    
;;;207        p_link->att_mtu_exchange_requested = false;
000068  2000              MOVS     r0,#0
00006a  7160              STRB     r0,[r4,#5]
;;;208        p_link->att_mtu_exchange_pending   = false;
00006c  7120              STRB     r0,[r4,#4]
;;;209    }
00006e  e8bd81fc          POP      {r2-r8,pc}
;;;210    
                          ENDP

000072  0000              DCW      0x0000
                  |L15.116|
                          DCD      m_nrf_log_ble_gatt_logs_data_dynamic
                  |L15.120|
000078  41545420          DCB      "ATT MTU updated to %u bytes on connection 0x%x (respons"
00007c  4d545520
000080  75706461
000084  74656420
000088  746f2025
00008c  75206279
000090  74657320
000094  6f6e2063
000098  6f6e6e65
00009c  6374696f
0000a0  6e203078
0000a4  25782028
0000a8  72657370
0000ac  6f6e73  
0000af  65292e00          DCB      "e).",0
0000b3  00                DCB      0
                  |L15.180|
                          DCD      ||.constdata||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  0a770000          DCW      0x0a77,0x0000
000004  0000              DCW      0x0000
000006  0000              DCB      0x00,0x00
000008  0a770000          DCW      0x0a77,0x0000
00000c  0000              DCW      0x0000
00000e  0000              DCB      0x00,0x00
000010  da7a0000          DCW      0xda7a,0x0000
000014  0000              DCB      0x00,0x00

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  73645f62          DCB      "sd_ble_gap_data_length_update() (request) on connection"
000004  6c655f67
000008  61705f64
00000c  6174615f
000010  6c656e67
000014  74685f75
000018  70646174
00001c  65282920
000020  28726571
000024  75657374
000028  29206f6e
00002c  20636f6e
000030  6e656374
000034  696f6e  
000037  20307825          DCB      " 0x%x returned unexpected value 0x%x.",0
00003b  78207265
00003f  7475726e
000043  65642075
000047  6e657870
00004b  65637465
00004f  64207661
000053  6c756520
000057  30782578
00005b  2e00    
00005d  00                DCB      0
00005e  00                DCB      0
00005f  00                DCB      0
000060  73645f62          DCB      "sd_ble_gattc_exchange_mtu_request() on connection 0x%x "
000064  6c655f67
000068  61747463
00006c  5f657863
000070  68616e67
000074  655f6d74
000078  755f7265
00007c  71756573
000080  74282920
000084  6f6e2063
000088  6f6e6e65
00008c  6374696f
000090  6e203078
000094  257820  
000097  72657475          DCB      "returned busy, will retry.",0
00009b  726e6564
00009f  20627573
0000a3  792c2077
0000a7  696c6c20
0000ab  72657472
0000af  792e00  
0000b2  00                DCB      0
0000b3  00                DCB      0
0000b4  73645f62          DCB      "sd_ble_gattc_exchange_mtu_request() returned unexpected"
0000b8  6c655f67
0000bc  61747463
0000c0  5f657863
0000c4  68616e67
0000c8  655f6d74
0000cc  755f7265
0000d0  71756573
0000d4  74282920
0000d8  72657475
0000dc  726e6564
0000e0  20756e65
0000e4  78706563
0000e8  746564  
0000eb  2076616c          DCB      " value 0x%x.",0
0000ef  75652030
0000f3  7825782e
0000f7  00      
0000f8  73645f62          DCB      "sd_ble_gatts_exchange_mtu_reply() returned unexpected v"
0000fc  6c655f67
000100  61747473
000104  5f657863
000108  68616e67
00010c  655f6d74
000110  755f7265
000114  706c7928
000118  29207265
00011c  7475726e
000120  65642075
000124  6e657870
000128  65637465
00012c  642076  
00012f  616c7565          DCB      "alue 0x%x.",0
000133  20307825
000137  782e00  
00013a  00                DCB      0
00013b  00                DCB      0
00013c  73645f62          DCB      "sd_ble_gap_data_length_update() (reply) returned unexpe"
000140  6c655f67
000144  61705f64
000148  6174615f
00014c  6c656e67
000150  74685f75
000154  70646174
000158  65282920
00015c  28726570
000160  6c792920
000164  72657475
000168  726e6564
00016c  20756e65
000170  787065  
000173  63746564          DCB      "cted value 0x%x.",0
000177  2076616c
00017b  75652030
00017f  7825782e
000183  00      
000184  52657175          DCB      "Requesting to update ATT MTU to %u bytes on connection "
000188  65737469
00018c  6e672074
000190  6f207570
000194  64617465
000198  20415454
00019c  204d5455
0001a0  20746f20
0001a4  25752062
0001a8  79746573
0001ac  206f6e20
0001b0  636f6e6e
0001b4  65637469
0001b8  6f6e20  
0001bb  30782578          DCB      "0x%x (retry).",0
0001bf  20287265
0001c3  74727929
0001c7  2e00    

                          AREA ||.conststrlit||, DATA, READONLY, ALIGN=2

000000  626c655f          DCB      0x62,0x6c,0x65,0x5f
000004  67617474          DCB      0x67,0x61,0x74,0x74
000008  00                DCB      0x00

                          AREA log_const_data, DATA, READONLY, ALIGN=2

                  m_nrf_log_ble_gatt_logs_data_const
                  ||__tagsym$$used||
                          DCD      ||.conststrlit||
000004  00000400          DCB      0x00,0x00,0x04,0x00

                          AREA log_dynamic_data, DATA, ALIGN=2

                  m_nrf_log_ble_gatt_logs_data_dynamic
                  |symbol_number.126|
                          %        12

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\ble\\nrf_ble_gatt\\nrf_ble_gatt.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_nrf_ble_gatt_c_f318ec1a____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___14_nrf_ble_gatt_c_f318ec1a____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_nrf_ble_gatt_c_f318ec1a____REVSH|
#line 402
|__asm___14_nrf_ble_gatt_c_f318ec1a____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_nrf_ble_gatt_c_f318ec1a____RRX|
#line 587
|__asm___14_nrf_ble_gatt_c_f318ec1a____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
