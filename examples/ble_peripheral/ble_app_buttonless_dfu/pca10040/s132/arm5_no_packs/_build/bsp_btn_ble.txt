; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --reduce_paths -o.\_build\bsp_btn_ble.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\bsp_btn_ble.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..\components\libraries\balloc -I..\..\..\..\..\..\components\libraries\bootloader\dfu -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\experimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\components\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\libraries\fifo -I.\RTE\_nrf52832_xxaa -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.14.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DNRF52 -DBL_SETTINGS_ACCESS_ONLY -DBOARD_PCA10040 -DCONFIG_GPIO_AS_PINRESET -DNRF52 -DNRF52832_XXAA -DNRF52_PAN_74 -DNRF_SD_BLE_API_VERSION=5 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -DDEBUG --omf_browse=.\_build\bsp_btn_ble.crf ..\..\..\..\..\..\components\libraries\bsp\bsp_btn_ble.c]
                          THUMB

                          AREA ||i.advertising_buttons_configure||, CODE, READONLY, ALIGN=1

                  advertising_buttons_configure PROC
;;;132     */
;;;133    static uint32_t advertising_buttons_configure()
000000  b510              PUSH     {r4,lr}
;;;134    {
;;;135        uint32_t err_code;
;;;136    
;;;137        err_code = bsp_event_to_button_action_assign(BTN_ID_DISCONNECT,
000002  2201              MOVS     r2,#1
000004  2102              MOVS     r1,#2
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       bsp_event_to_button_action_assign
00000c  4604              MOV      r4,r0
;;;138                                                     BTN_ACTION_DISCONNECT,
;;;139                                                     BSP_EVENT_DEFAULT);
;;;140        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
00000e  bf00              NOP      
000010  b11c              CBZ      r4,|L1.26|
000012  2c07              CMP      r4,#7
000014  d001              BEQ      |L1.26|
000016  4620              MOV      r0,r4
                  |L1.24|
;;;141    
;;;142        err_code = bsp_event_to_button_action_assign(BTN_ID_WHITELIST_OFF,
;;;143                                                     BTN_ACTION_WHITELIST_OFF,
;;;144                                                     BSP_EVENT_WHITELIST_OFF);
;;;145        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
;;;146    
;;;147        err_code = bsp_event_to_button_action_assign(BTN_ID_SLEEP,
;;;148                                                     BTN_ACTION_SLEEP,
;;;149                                                     BSP_EVENT_SLEEP);
;;;150        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
;;;151    
;;;152        return NRF_SUCCESS;
;;;153    }
000018  bd10              POP      {r4,pc}
                  |L1.26|
00001a  bf00              NOP                            ;140
00001c  2207              MOVS     r2,#7                 ;142
00001e  2102              MOVS     r1,#2                 ;142
000020  2001              MOVS     r0,#1                 ;142
000022  f7fffffe          BL       bsp_event_to_button_action_assign
000026  4604              MOV      r4,r0                 ;142
000028  bf00              NOP                            ;145
00002a  b11c              CBZ      r4,|L1.52|
00002c  2c07              CMP      r4,#7                 ;145
00002e  d001              BEQ      |L1.52|
000030  4620              MOV      r0,r4                 ;145
000032  e7f1              B        |L1.24|
                  |L1.52|
000034  bf00              NOP                            ;145
000036  220a              MOVS     r2,#0xa               ;147
000038  2100              MOVS     r1,#0                 ;147
00003a  4608              MOV      r0,r1                 ;147
00003c  f7fffffe          BL       bsp_event_to_button_action_assign
000040  4604              MOV      r4,r0                 ;147
000042  bf00              NOP                            ;150
000044  b11c              CBZ      r4,|L1.78|
000046  2c07              CMP      r4,#7                 ;150
000048  d001              BEQ      |L1.78|
00004a  4620              MOV      r0,r4                 ;150
00004c  e7e4              B        |L1.24|
                  |L1.78|
00004e  bf00              NOP                            ;150
000050  2000              MOVS     r0,#0                 ;152
000052  e7e1              B        |L1.24|
;;;154    
                          ENDP


                          AREA ||i.ble_evt_handler||, CODE, READONLY, ALIGN=2

                  ble_evt_handler PROC
;;;199     */
;;;200    static void ble_evt_handler(ble_evt_t const * p_ble_evt, void * p_context)
000000  b570              PUSH     {r4-r6,lr}
;;;201    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;202        uint32_t err_code;
;;;203    
;;;204        switch (p_ble_evt->header.evt_id)
000006  8828              LDRH     r0,[r5,#0]
000008  2810              CMP      r0,#0x10
00000a  d002              BEQ      |L2.18|
00000c  2811              CMP      r0,#0x11
00000e  d12c              BNE      |L2.106|
000010  e015              B        |L2.62|
                  |L2.18|
;;;205        {
;;;206            case BLE_GAP_EVT_CONNECTED:
;;;207                if (m_num_connections == 0)
000012  4817              LDR      r0,|L2.112|
000014  6800              LDR      r0,[r0,#0]  ; m_num_connections
000016  b960              CBNZ     r0,|L2.50|
;;;208                {
;;;209                    err_code = connection_buttons_configure();
000018  f7fffffe          BL       connection_buttons_configure
00001c  4604              MOV      r4,r0
;;;210                    CALL_HANDLER_ON_ERROR(err_code);
00001e  bf00              NOP      
000020  b134              CBZ      r4,|L2.48|
000022  4814              LDR      r0,|L2.116|
000024  6800              LDR      r0,[r0,#0]  ; m_error_handler
000026  b118              CBZ      r0,|L2.48|
000028  4620              MOV      r0,r4
00002a  4912              LDR      r1,|L2.116|
00002c  6809              LDR      r1,[r1,#0]  ; m_error_handler
00002e  4788              BLX      r1
                  |L2.48|
000030  bf00              NOP      
                  |L2.50|
;;;211                }
;;;212    
;;;213                m_num_connections++;
000032  480f              LDR      r0,|L2.112|
000034  6800              LDR      r0,[r0,#0]  ; m_num_connections
000036  1c40              ADDS     r0,r0,#1
000038  490d              LDR      r1,|L2.112|
00003a  6008              STR      r0,[r1,#0]  ; m_num_connections
;;;214                break;
00003c  e016              B        |L2.108|
                  |L2.62|
;;;215    
;;;216            case BLE_GAP_EVT_DISCONNECTED:
;;;217                m_num_connections--;
00003e  480c              LDR      r0,|L2.112|
000040  6800              LDR      r0,[r0,#0]  ; m_num_connections
000042  1e40              SUBS     r0,r0,#1
000044  490a              LDR      r1,|L2.112|
000046  6008              STR      r0,[r1,#0]  ; m_num_connections
;;;218    
;;;219                if (m_num_connections == 0)
000048  4608              MOV      r0,r1
00004a  6800              LDR      r0,[r0,#0]  ; m_num_connections
00004c  b960              CBNZ     r0,|L2.104|
;;;220                {
;;;221                    err_code = advertising_buttons_configure();
00004e  f7fffffe          BL       advertising_buttons_configure
000052  4604              MOV      r4,r0
;;;222                    CALL_HANDLER_ON_ERROR(err_code);
000054  bf00              NOP      
000056  b134              CBZ      r4,|L2.102|
000058  4806              LDR      r0,|L2.116|
00005a  6800              LDR      r0,[r0,#0]  ; m_error_handler
00005c  b118              CBZ      r0,|L2.102|
00005e  4620              MOV      r0,r4
000060  4904              LDR      r1,|L2.116|
000062  6809              LDR      r1,[r1,#0]  ; m_error_handler
000064  4788              BLX      r1
                  |L2.102|
000066  bf00              NOP      
                  |L2.104|
;;;223                }
;;;224                break;
000068  e000              B        |L2.108|
                  |L2.106|
;;;225    
;;;226            default:
;;;227                break;
00006a  bf00              NOP      
                  |L2.108|
00006c  bf00              NOP                            ;214
;;;228        }
;;;229    }
00006e  bd70              POP      {r4-r6,pc}
;;;230    
                          ENDP

                  |L2.112|
                          DCD      m_num_connections
                  |L2.116|
                          DCD      m_error_handler

                          AREA ||i.bsp_btn_ble_init||, CODE, READONLY, ALIGN=2

                  bsp_btn_ble_init PROC
;;;233    
;;;234    uint32_t bsp_btn_ble_init(bsp_btn_ble_error_handler_t error_handler, bsp_event_t * p_startup_bsp_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;235    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;236        uint32_t err_code = NRF_SUCCESS;
000006  2600              MOVS     r6,#0
;;;237    
;;;238        m_error_handler = error_handler;
000008  4806              LDR      r0,|L3.36|
00000a  6005              STR      r5,[r0,#0]  ; m_error_handler
;;;239    
;;;240        if (p_startup_bsp_evt != NULL)
00000c  b114              CBZ      r4,|L3.20|
;;;241        {
;;;242            startup_event_extract(p_startup_bsp_evt);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       startup_event_extract
                  |L3.20|
;;;243        }
;;;244    
;;;245        if (m_num_connections == 0)
000014  4804              LDR      r0,|L3.40|
000016  6800              LDR      r0,[r0,#0]  ; m_num_connections
000018  b910              CBNZ     r0,|L3.32|
;;;246        {
;;;247            err_code = advertising_buttons_configure();
00001a  f7fffffe          BL       advertising_buttons_configure
00001e  4606              MOV      r6,r0
                  |L3.32|
;;;248        }
;;;249    
;;;250        return err_code;
000020  4630              MOV      r0,r6
;;;251    }
000022  bd70              POP      {r4-r6,pc}
                          ENDP

                  |L3.36|
                          DCD      m_error_handler
                  |L3.40|
                          DCD      m_num_connections

                          AREA ||i.bsp_btn_ble_sleep_mode_prepare||, CODE, READONLY, ALIGN=1

                  bsp_btn_ble_sleep_mode_prepare PROC
;;;181    
;;;182    uint32_t bsp_btn_ble_sleep_mode_prepare(void)
000000  b510              PUSH     {r4,lr}
;;;183    {
;;;184        uint32_t err_code = bsp_wakeup_button_enable(BTN_ID_WAKEUP);
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       bsp_wakeup_button_enable
000008  4604              MOV      r4,r0
;;;185        RETURN_ON_ERROR_NOT_NOT_SUPPORTED(err_code);
00000a  bf00              NOP      
00000c  b11c              CBZ      r4,|L4.22|
00000e  2c06              CMP      r4,#6
000010  d001              BEQ      |L4.22|
000012  4620              MOV      r0,r4
                  |L4.20|
;;;186    
;;;187        err_code = bsp_wakeup_button_enable(BTN_ID_WAKEUP_BOND_DELETE);
;;;188        RETURN_ON_ERROR_NOT_NOT_SUPPORTED(err_code);
;;;189    
;;;190        return NRF_SUCCESS;
;;;191    }
000014  bd10              POP      {r4,pc}
                  |L4.22|
000016  bf00              NOP                            ;185
000018  2001              MOVS     r0,#1                 ;187
00001a  f7fffffe          BL       bsp_wakeup_button_enable
00001e  4604              MOV      r4,r0                 ;187
000020  bf00              NOP                            ;188
000022  b11c              CBZ      r4,|L4.44|
000024  2c06              CMP      r4,#6                 ;188
000026  d001              BEQ      |L4.44|
000028  4620              MOV      r0,r4                 ;188
00002a  e7f3              B        |L4.20|
                  |L4.44|
00002c  bf00              NOP                            ;188
00002e  2000              MOVS     r0,#0                 ;190
000030  e7f0              B        |L4.20|
;;;192    
                          ENDP


                          AREA ||i.connection_buttons_configure||, CODE, READONLY, ALIGN=1

                  connection_buttons_configure PROC
;;;104     */
;;;105    static uint32_t connection_buttons_configure()
000000  b510              PUSH     {r4,lr}
;;;106    {
;;;107        uint32_t err_code;
;;;108    
;;;109        err_code = bsp_event_to_button_action_assign(BTN_ID_SLEEP,
000002  2201              MOVS     r2,#1
000004  2100              MOVS     r1,#0
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       bsp_event_to_button_action_assign
00000c  4604              MOV      r4,r0
;;;110                                                     BTN_ACTION_SLEEP,
;;;111                                                     BSP_EVENT_DEFAULT);
;;;112        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
00000e  bf00              NOP      
000010  b11c              CBZ      r4,|L5.26|
000012  2c07              CMP      r4,#7
000014  d001              BEQ      |L5.26|
000016  4620              MOV      r0,r4
                  |L5.24|
;;;113    
;;;114        err_code = bsp_event_to_button_action_assign(BTN_ID_WHITELIST_OFF,
;;;115                                                     BTN_ACTION_WHITELIST_OFF,
;;;116                                                     BSP_EVENT_WHITELIST_OFF);
;;;117        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
;;;118    
;;;119        err_code = bsp_event_to_button_action_assign(BTN_ID_DISCONNECT,
;;;120                                                     BTN_ACTION_DISCONNECT,
;;;121                                                     BSP_EVENT_DISCONNECT);
;;;122        RETURN_ON_ERROR_NOT_INVALID_PARAM(err_code);
;;;123    
;;;124        return NRF_SUCCESS;
;;;125    }
000018  bd10              POP      {r4,pc}
                  |L5.26|
00001a  bf00              NOP                            ;112
00001c  2207              MOVS     r2,#7                 ;114
00001e  2102              MOVS     r1,#2                 ;114
000020  2001              MOVS     r0,#1                 ;114
000022  f7fffffe          BL       bsp_event_to_button_action_assign
000026  4604              MOV      r4,r0                 ;114
000028  bf00              NOP                            ;117
00002a  b11c              CBZ      r4,|L5.52|
00002c  2c07              CMP      r4,#7                 ;117
00002e  d001              BEQ      |L5.52|
000030  4620              MOV      r0,r4                 ;117
000032  e7f1              B        |L5.24|
                  |L5.52|
000034  bf00              NOP                            ;117
000036  2204              MOVS     r2,#4                 ;119
000038  2102              MOVS     r1,#2                 ;119
00003a  2000              MOVS     r0,#0                 ;119
00003c  f7fffffe          BL       bsp_event_to_button_action_assign
000040  4604              MOV      r4,r0                 ;119
000042  bf00              NOP                            ;122
000044  b11c              CBZ      r4,|L5.78|
000046  2c07              CMP      r4,#7                 ;122
000048  d001              BEQ      |L5.78|
00004a  4620              MOV      r0,r4                 ;122
00004c  e7e4              B        |L5.24|
                  |L5.78|
00004e  bf00              NOP                            ;122
000050  2000              MOVS     r0,#0                 ;124
000052  e7e1              B        |L5.24|
;;;126    
                          ENDP


                          AREA ||i.startup_event_extract||, CODE, READONLY, ALIGN=1

                  startup_event_extract PROC
;;;163     */
;;;164    static void startup_event_extract(bsp_event_t * p_startup_event)
000000  b510              PUSH     {r4,lr}
;;;165    {
000002  4604              MOV      r4,r0
;;;166        // React to button states
;;;167        if (bsp_button_is_pressed(BTN_ID_WAKEUP_BOND_DELETE))
000004  2001              MOVS     r0,#1
000006  f7fffffe          BL       bsp_button_is_pressed
00000a  b110              CBZ      r0,|L6.18|
;;;168        {
;;;169            *p_startup_event = BSP_EVENT_CLEAR_BONDING_DATA;
00000c  2002              MOVS     r0,#2
00000e  7020              STRB     r0,[r4,#0]
000010  e008              B        |L6.36|
                  |L6.18|
;;;170        }
;;;171        else if (bsp_button_is_pressed(BTN_ID_WAKEUP))
000012  2000              MOVS     r0,#0
000014  f7fffffe          BL       bsp_button_is_pressed
000018  b110              CBZ      r0,|L6.32|
;;;172        {
;;;173            *p_startup_event = BSP_EVENT_WAKEUP;
00001a  200b              MOVS     r0,#0xb
00001c  7020              STRB     r0,[r4,#0]
00001e  e001              B        |L6.36|
                  |L6.32|
;;;174        }
;;;175        else
;;;176        {
;;;177            *p_startup_event = BSP_EVENT_NOTHING;
000020  2000              MOVS     r0,#0
000022  7020              STRB     r0,[r4,#0]
                  |L6.36|
;;;178        }
;;;179    }
000024  bd10              POP      {r4,pc}
;;;180    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  m_error_handler
                          DCD      0x00000000
                  m_num_connections
                          DCD      0x00000000

                          AREA sdh_ble_observers1, DATA, READONLY, ALIGN=2

                  m_ble_observer
                  ||__tagsym$$used||
                          DCD      ble_evt_handler
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\libraries\\bsp\\bsp_btn_ble.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_btn_ble_c_4c67689d____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___13_bsp_btn_ble_c_4c67689d____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_btn_ble_c_4c67689d____REVSH|
#line 402
|__asm___13_bsp_btn_ble_c_4c67689d____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_btn_ble_c_4c67689d____RRX|
#line 587
|__asm___13_bsp_btn_ble_c_4c67689d____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
