; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --reduce_paths -o.\_build\nrf_log_str_formatter.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\nrf_log_str_formatter.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..\components\libraries\balloc -I..\..\..\..\..\..\components\libraries\bootloader\dfu -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\experimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\components\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\libraries\fifo -I.\RTE\_nrf52832_xxaa -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.14.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DNRF52 -DBL_SETTINGS_ACCESS_ONLY -DBOARD_PCA10040 -DCONFIG_GPIO_AS_PINRESET -DNRF52 -DNRF52832_XXAA -DNRF52_PAN_74 -DNRF_SD_BLE_API_VERSION=5 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -DDEBUG --omf_browse=.\_build\nrf_log_str_formatter.crf ..\..\..\..\..\..\components\libraries\experimental_log\src\nrf_log_str_formatter.c]
                          THUMB

                          AREA ||i.nrf_log_hexdump_entry_process||, CODE, READONLY, ALIGN=2

                  nrf_log_hexdump_entry_process PROC
;;;162    
;;;163    void nrf_log_hexdump_entry_process(uint8_t * p_data,
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;164                                       uint32_t data_len,
;;;165                                       nrf_log_str_formatter_entry_params_t * p_params,
;;;166                                       nrf_fprintf_ctx_t * p_ctx)
;;;167    {
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4690              MOV      r8,r2
00000a  461d              MOV      r5,r3
;;;168        if (data_len > HEXDUMP_BYTES_IN_LINE)
00000c  2e08              CMP      r6,#8
00000e  d901              BLS      |L1.20|
                  |L1.16|
;;;169        {
;;;170            return;
;;;171        }
;;;172        bool auto_flush = p_ctx->auto_flush;
;;;173        p_ctx->auto_flush = false;
;;;174    
;;;175        prefix_process(p_params, p_ctx);
;;;176    
;;;177        uint32_t i;
;;;178    
;;;179        for (i = 0; i < HEXDUMP_BYTES_IN_LINE; i++)
;;;180        {
;;;181            if (i < data_len)
;;;182            {
;;;183                nrf_fprintf(p_ctx, " %02x", p_data[i]);
;;;184            }
;;;185            else
;;;186            {
;;;187                nrf_fprintf(p_ctx, "   ");
;;;188            }
;;;189        }
;;;190        nrf_fprintf(p_ctx, "|");
;;;191    
;;;192        for (i = 0; i < HEXDUMP_BYTES_IN_LINE; i++)
;;;193        {
;;;194            if (i < data_len)
;;;195            {
;;;196                char c = (char)p_data[i];
;;;197                nrf_fprintf(p_ctx, "%c", isprint((int)c) ? c :'.');
;;;198            }
;;;199            else
;;;200            {
;;;201                nrf_fprintf(p_ctx, " ");
;;;202            }
;;;203        }
;;;204    
;;;205        postfix_process(p_params, p_ctx, true);
;;;206    
;;;207        p_ctx->auto_flush = auto_flush;
;;;208    }
000010  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.20|
000014  f895900c          LDRB     r9,[r5,#0xc]          ;172
000018  2000              MOVS     r0,#0                 ;173
00001a  7328              STRB     r0,[r5,#0xc]          ;173
00001c  4629              MOV      r1,r5                 ;175
00001e  4640              MOV      r0,r8                 ;175
000020  f7fffffe          BL       prefix_process
000024  2400              MOVS     r4,#0                 ;179
000026  e00c              B        |L1.66|
                  |L1.40|
000028  42b4              CMP      r4,r6                 ;181
00002a  d205              BCS      |L1.56|
00002c  5d3a              LDRB     r2,[r7,r4]            ;183
00002e  a11c              ADR      r1,|L1.160|
000030  4628              MOV      r0,r5                 ;183
000032  f7fffffe          BL       nrf_fprintf
000036  e003              B        |L1.64|
                  |L1.56|
000038  a11b              ADR      r1,|L1.168|
00003a  4628              MOV      r0,r5                 ;187
00003c  f7fffffe          BL       nrf_fprintf
                  |L1.64|
000040  1c64              ADDS     r4,r4,#1              ;179
                  |L1.66|
000042  2c08              CMP      r4,#8                 ;179
000044  d3f0              BCC      |L1.40|
000046  a119              ADR      r1,|L1.172|
000048  4628              MOV      r0,r5                 ;190
00004a  f7fffffe          BL       nrf_fprintf
00004e  2400              MOVS     r4,#0                 ;192
000050  e01a              B        |L1.136|
                  |L1.82|
000052  42b4              CMP      r4,r6                 ;194
000054  d213              BCS      |L1.126|
000056  f817a004          LDRB     r10,[r7,r4]           ;196
00005a  f7fffffe          BL       __rt_ctype_table
00005e  6800              LDR      r0,[r0,#0]            ;197
000060  f810000a          LDRB     r0,[r0,r10]           ;197
000064  f000003e          AND      r0,r0,#0x3e           ;197
000068  b108              CBZ      r0,|L1.110|
00006a  4650              MOV      r0,r10                ;197
00006c  e000              B        |L1.112|
                  |L1.110|
00006e  202e              MOVS     r0,#0x2e              ;197
                  |L1.112|
000070  4683              MOV      r11,r0                ;197
000072  465a              MOV      r2,r11                ;197
000074  a10e              ADR      r1,|L1.176|
000076  4628              MOV      r0,r5                 ;197
000078  f7fffffe          BL       nrf_fprintf
00007c  e003              B        |L1.134|
                  |L1.126|
00007e  a10d              ADR      r1,|L1.180|
000080  4628              MOV      r0,r5                 ;201
000082  f7fffffe          BL       nrf_fprintf
                  |L1.134|
000086  1c64              ADDS     r4,r4,#1              ;192
                  |L1.136|
000088  2c08              CMP      r4,#8                 ;192
00008a  d3e2              BCC      |L1.82|
00008c  2201              MOVS     r2,#1                 ;205
00008e  4629              MOV      r1,r5                 ;205
000090  4640              MOV      r0,r8                 ;205
000092  f7fffffe          BL       postfix_process
000096  f885900c          STRB     r9,[r5,#0xc]          ;207
00009a  bf00              NOP      
00009c  e7b8              B        |L1.16|
;;;209    #endif //NRF_LOG_ENABLED
                          ENDP

00009e  0000              DCW      0x0000
                  |L1.160|
0000a0  20253032          DCB      " %02x",0
0000a4  7800    
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L1.168|
0000a8  20202000          DCB      "   ",0
                  |L1.172|
0000ac  7c00              DCB      "|",0
0000ae  00                DCB      0
0000af  00                DCB      0
                  |L1.176|
0000b0  256300            DCB      "%c",0
0000b3  00                DCB      0
                  |L1.180|
0000b4  2000              DCB      " ",0
0000b6  00                DCB      0
0000b7  00                DCB      0

                          AREA ||i.nrf_log_std_entry_process||, CODE, READONLY, ALIGN=1

                  nrf_log_std_entry_process PROC
;;;117    
;;;118    void nrf_log_std_entry_process(char const * p_str,
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;119                                      uint32_t const * p_args,
;;;120                                      uint32_t nargs,
;;;121                                      nrf_log_str_formatter_entry_params_t * p_params,
;;;122                                      nrf_fprintf_ctx_t * p_ctx)
;;;123    {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
00000a  4698              MOV      r8,r3
00000c  9d0c              LDR      r5,[sp,#0x30]
;;;124        bool auto_flush = p_ctx->auto_flush;
00000e  f895900c          LDRB     r9,[r5,#0xc]
;;;125        p_ctx->auto_flush = false;
000012  2000              MOVS     r0,#0
000014  7328              STRB     r0,[r5,#0xc]
;;;126    
;;;127        prefix_process(p_params, p_ctx);
000016  4629              MOV      r1,r5
000018  4640              MOV      r0,r8
00001a  f7fffffe          BL       prefix_process
;;;128    
;;;129        switch (nargs)
00001e  2e07              CMP      r6,#7
000020  d247              BCS      |L2.178|
000022  e8dff006          TBB      [pc,r6]
000026  0409              DCB      0x04,0x09
000028  0f161f2a          DCB      0x0f,0x16,0x1f,0x2a
00002c  3700              DCB      0x37,0x00
;;;130        {
;;;131            case 0:
;;;132                nrf_fprintf(p_ctx, p_str);
00002e  4639              MOV      r1,r7
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       nrf_fprintf
;;;133                break;
000036  e03d              B        |L2.180|
;;;134            case 1:
;;;135                nrf_fprintf(p_ctx, p_str, p_args[0]);
000038  4639              MOV      r1,r7
00003a  4628              MOV      r0,r5
00003c  6822              LDR      r2,[r4,#0]
00003e  f7fffffe          BL       nrf_fprintf
;;;136                break;
000042  e037              B        |L2.180|
;;;137            case 2:
;;;138                nrf_fprintf(p_ctx, p_str, p_args[0], p_args[1]);
000044  4639              MOV      r1,r7
000046  4628              MOV      r0,r5
000048  e9d42300          LDRD     r2,r3,[r4,#0]
00004c  f7fffffe          BL       nrf_fprintf
;;;139                break;
000050  e030              B        |L2.180|
;;;140            case 3:
;;;141                nrf_fprintf(p_ctx, p_str, p_args[0], p_args[1], p_args[2]);
000052  68a0              LDR      r0,[r4,#8]
000054  9000              STR      r0,[sp,#0]
000056  4639              MOV      r1,r7
000058  4628              MOV      r0,r5
00005a  e9d42300          LDRD     r2,r3,[r4,#0]
00005e  f7fffffe          BL       nrf_fprintf
;;;142                break;
000062  e027              B        |L2.180|
;;;143            case 4:
;;;144                nrf_fprintf(p_ctx, p_str, p_args[0], p_args[1], p_args[2], p_args[3]);
000064  e9d40102          LDRD     r0,r1,[r4,#8]
000068  e9cd0100          STRD     r0,r1,[sp,#0]
00006c  4639              MOV      r1,r7
00006e  4628              MOV      r0,r5
000070  e9d42300          LDRD     r2,r3,[r4,#0]
000074  f7fffffe          BL       nrf_fprintf
;;;145                break;
000078  e01c              B        |L2.180|
;;;146            case 5:
;;;147                nrf_fprintf(p_ctx, p_str, p_args[0], p_args[1], p_args[2], p_args[3], p_args[4]);
00007a  e9d41202          LDRD     r1,r2,[r4,#8]
00007e  6920              LDR      r0,[r4,#0x10]
000080  e9cd1200          STRD     r1,r2,[sp,#0]
000084  9002              STR      r0,[sp,#8]
000086  4639              MOV      r1,r7
000088  4628              MOV      r0,r5
00008a  e9d42300          LDRD     r2,r3,[r4,#0]
00008e  f7fffffe          BL       nrf_fprintf
;;;148                break;
000092  e00f              B        |L2.180|
;;;149            case 6:
;;;150                nrf_fprintf(p_ctx, p_str, p_args[0], p_args[1], p_args[2], p_args[3], p_args[4], p_args[5]);
000094  e9d42302          LDRD     r2,r3,[r4,#8]
000098  e9d41004          LDRD     r1,r0,[r4,#0x10]
00009c  e9cd2300          STRD     r2,r3,[sp,#0]
0000a0  e9cd1002          STRD     r1,r0,[sp,#8]
0000a4  4639              MOV      r1,r7
0000a6  4628              MOV      r0,r5
0000a8  e9d42300          LDRD     r2,r3,[r4,#0]
0000ac  f7fffffe          BL       nrf_fprintf
;;;151                break;
0000b0  e000              B        |L2.180|
                  |L2.178|
;;;152    
;;;153            default:
;;;154                break;
0000b2  bf00              NOP      
                  |L2.180|
0000b4  bf00              NOP                            ;133
;;;155        }
;;;156    
;;;157        postfix_process(p_params, p_ctx, false);
0000b6  2200              MOVS     r2,#0
0000b8  4629              MOV      r1,r5
0000ba  4640              MOV      r0,r8
0000bc  f7fffffe          BL       postfix_process
;;;158        p_ctx->auto_flush = auto_flush;
0000c0  f885900c          STRB     r9,[r5,#0xc]
;;;159    }
0000c4  e8bd87ff          POP      {r0-r10,pc}
;;;160    
                          ENDP


                          AREA ||i.postfix_process||, CODE, READONLY, ALIGN=2

                  postfix_process PROC
;;;98     
;;;99     static void postfix_process(nrf_log_str_formatter_entry_params_t * p_params,
000000  b570              PUSH     {r4-r6,lr}
;;;100                                nrf_fprintf_ctx_t * p_ctx,
;;;101                                bool newline)
;;;102    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;103        if (!p_params->raw)
000008  79e0              LDRB     r0,[r4,#7]
00000a  b960              CBNZ     r0,|L3.38|
;;;104        {
;;;105            if (p_params->use_colors)
00000c  7a20              LDRB     r0,[r4,#8]
00000e  b128              CBZ      r0,|L3.28|
;;;106            {
;;;107                nrf_fprintf(p_ctx, "%s", m_colors[0]);
000010  4809              LDR      r0,|L3.56|
000012  a10a              ADR      r1,|L3.60|
000014  6802              LDR      r2,[r0,#0]  ; m_colors
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       nrf_fprintf
                  |L3.28|
;;;108            }
;;;109            nrf_fprintf(p_ctx, "\r\n");
00001c  a108              ADR      r1,|L3.64|
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       nrf_fprintf
000024  e004              B        |L3.48|
                  |L3.38|
;;;110        }
;;;111        else if (newline)
000026  b11e              CBZ      r6,|L3.48|
;;;112        {
;;;113            nrf_fprintf(p_ctx, "\r\n");
000028  a105              ADR      r1,|L3.64|
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       nrf_fprintf
                  |L3.48|
;;;114        }
;;;115        nrf_fprintf_buffer_flush(p_ctx);
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       nrf_fprintf_buffer_flush
;;;116    }
000036  bd70              POP      {r4-r6,pc}
;;;117    
                          ENDP

                  |L3.56|
                          DCD      m_colors
                  |L3.60|
00003c  257300            DCB      "%s",0
00003f  00                DCB      0
                  |L3.64|
000040  0d0a00            DCB      "\r\n",0
000043  00                DCB      0

                          AREA ||i.prefix_process||, CODE, READONLY, ALIGN=2

                  prefix_process PROC
;;;77     
;;;78     static void prefix_process(nrf_log_str_formatter_entry_params_t * p_params,
000000  b570              PUSH     {r4-r6,lr}
;;;79                                nrf_fprintf_ctx_t * p_ctx)
;;;80     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;81         if (!(p_params->raw))
000006  79e0              LDRB     r0,[r4,#7]
000008  b9d8              CBNZ     r0,|L4.66|
;;;82         {
;;;83             if (p_params->use_colors)
00000a  7a20              LDRB     r0,[r4,#8]
00000c  b158              CBZ      r0,|L4.38|
;;;84             {
;;;85                 nrf_fprintf(p_ctx, "%s",
00000e  79a1              LDRB     r1,[r4,#6]
000010  88a0              LDRH     r0,[r4,#4]
000012  f7fffffe          BL       nrf_log_color_id_get
000016  490b              LDR      r1,|L4.68|
000018  f8516020          LDR      r6,[r1,r0,LSL #2]
00001c  4632              MOV      r2,r6
00001e  a10a              ADR      r1,|L4.72|
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       nrf_fprintf
                  |L4.38|
;;;86                               m_colors[nrf_log_color_id_get( p_params->module_id, p_params->severity)]);
;;;87             }
;;;88     
;;;89             if (NRF_LOG_USES_TIMESTAMP)
;;;90             {
;;;91                 nrf_fprintf(p_ctx, "[%08lu] ", p_params->timestamp);
;;;92             }
;;;93     
;;;94             nrf_fprintf(p_ctx, "<%s> %s: ",
000026  88a0              LDRH     r0,[r4,#4]
000028  2100              MOVS     r1,#0
00002a  f7fffffe          BL       nrf_log_module_name_get
00002e  4606              MOV      r6,r0
000030  79a0              LDRB     r0,[r4,#6]
000032  4906              LDR      r1,|L4.76|
000034  f8512020          LDR      r2,[r1,r0,LSL #2]
000038  4633              MOV      r3,r6
00003a  a105              ADR      r1,|L4.80|
00003c  4628              MOV      r0,r5
00003e  f7fffffe          BL       nrf_fprintf
                  |L4.66|
;;;95                severity_names[p_params->severity], nrf_log_module_name_get(p_params->module_id, false));
;;;96         }
;;;97     }
000042  bd70              POP      {r4-r6,pc}
;;;98     
                          ENDP

                  |L4.68|
                          DCD      m_colors
                  |L4.72|
000048  257300            DCB      "%s",0
00004b  00                DCB      0
                  |L4.76|
                          DCD      severity_names
                  |L4.80|
000050  3c25733e          DCB      "<%s> %s: ",0
000054  2025733a
000058  2000    
00005a  00                DCB      0
00005b  00                DCB      0

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  6572726f          DCB      "error",0
000004  7200    
000006  00                DCB      0
000007  00                DCB      0
000008  7761726e          DCB      "warning",0
00000c  696e6700
000010  696e666f          DCB      "info",0
000014  00      
000015  00                DCB      0
000016  00                DCB      0
000017  00                DCB      0
000018  64656275          DCB      "debug",0
00001c  6700    
00001e  00                DCB      0
00001f  00                DCB      0
000020  1b5b306d          DCB      27,"[0m",0
000024  00      
000025  00                DCB      0
000026  00                DCB      0
000027  00                DCB      0
000028  1b5b313b          DCB      27,"[1;30m",0
00002c  33306d00
000030  1b5b313b          DCB      27,"[1;31m",0
000034  33316d00
000038  1b5b313b          DCB      27,"[1;32m",0
00003c  33326d00
000040  1b5b313b          DCB      27,"[1;33m",0
000044  33336d00
000048  1b5b313b          DCB      27,"[1;34m",0
00004c  33346d00
000050  1b5b313b          DCB      27,"[1;35m",0
000054  33356d00
000058  1b5b313b          DCB      27,"[1;36m",0
00005c  33366d00
000060  1b5b313b          DCB      27,"[1;37m",0
000064  33376d00

                          AREA ||.data||, DATA, ALIGN=2

                  severity_names
                          DCD      0x00000000
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x8
                          DCD      ||.conststring||+0x10
                          DCD      ||.conststring||+0x18
                  m_colors
                          DCD      ||.conststring||+0x20
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x30
                          DCD      ||.conststring||+0x38
                          DCD      ||.conststring||+0x40
                          DCD      ||.conststring||+0x48
                          DCD      ||.conststring||+0x50
                          DCD      ||.conststring||+0x58
                          DCD      ||.conststring||+0x60

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\libraries\\experimental_log\\src\\nrf_log_str_formatter.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___23_nrf_log_str_formatter_c_eaf13dec____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___23_nrf_log_str_formatter_c_eaf13dec____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___23_nrf_log_str_formatter_c_eaf13dec____REVSH|
#line 402
|__asm___23_nrf_log_str_formatter_c_eaf13dec____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___23_nrf_log_str_formatter_c_eaf13dec____RRX|
#line 587
|__asm___23_nrf_log_str_formatter_c_eaf13dec____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
