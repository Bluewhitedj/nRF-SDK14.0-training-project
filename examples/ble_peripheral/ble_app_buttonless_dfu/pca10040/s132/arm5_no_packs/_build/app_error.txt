; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --reduce_paths -o.\_build\app_error.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\app_error.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..\components\libraries\balloc -I..\..\..\..\..\..\components\libraries\bootloader\dfu -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\experimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\components\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\libraries\fifo -I.\RTE\_nrf52832_xxaa -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.14.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DNRF52 -DBL_SETTINGS_ACCESS_ONLY -DBOARD_PCA10040 -DCONFIG_GPIO_AS_PINRESET -DNRF52 -DNRF52832_XXAA -DNRF52_PAN_74 -DNRF_SD_BLE_API_VERSION=5 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -DDEBUG --omf_browse=.\_build\app_error.crf ..\..\..\..\..\..\components\libraries\util\app_error.c]
                          THUMB

                          AREA ||i.app_error_handler||, CODE, READONLY, ALIGN=1

                  app_error_handler PROC
;;;64     /*lint -save -e14 */
;;;65     void app_error_handler(ret_code_t error_code, uint32_t line_num, const uint8_t * p_file_name)
000000  b5fe              PUSH     {r1-r7,lr}
;;;66     {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
000006  4615              MOV      r5,r2
;;;67         error_info_t error_info =
000008  b2b0              UXTH     r0,r6
00000a  f8ad0000          STRH     r0,[sp,#0]
00000e  9501              STR      r5,[sp,#4]
000010  9402              STR      r4,[sp,#8]
;;;68         {
;;;69             .line_num    = line_num,
;;;70             .p_file_name = p_file_name,
;;;71             .err_code    = error_code,
;;;72         };
;;;73         app_error_fault_handler(NRF_FAULT_ID_SDK_ERROR, 0, (uint32_t)(&error_info));
000012  466a              MOV      r2,sp
000014  2100              MOVS     r1,#0
000016  f2440001          MOV      r0,#0x4001
00001a  f7fffffe          BL       app_error_fault_handler
;;;74     
;;;75         UNUSED_VARIABLE(error_info);
;;;76     }
00001e  bdfe              POP      {r1-r7,pc}
;;;77     
                          ENDP


                          AREA ||i.app_error_handler_bare||, CODE, READONLY, ALIGN=1

                  app_error_handler_bare PROC
;;;78     /*lint -save -e14 */
;;;79     void app_error_handler_bare(ret_code_t error_code)
000000  b53e              PUSH     {r1-r5,lr}
;;;80     {
000002  4604              MOV      r4,r0
;;;81         error_info_t error_info =
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
000008  9001              STR      r0,[sp,#4]
00000a  9002              STR      r0,[sp,#8]
00000c  9402              STR      r4,[sp,#8]
;;;82         {
;;;83             .line_num    = 0,
;;;84             .p_file_name = NULL,
;;;85             .err_code    = error_code,
;;;86         };
;;;87     
;;;88         app_error_fault_handler(NRF_FAULT_ID_SDK_ERROR, 0, (uint32_t)(&error_info));
00000e  466a              MOV      r2,sp
000010  2100              MOVS     r1,#0
000012  f2440001          MOV      r0,#0x4001
000016  f7fffffe          BL       app_error_fault_handler
;;;89     
;;;90         UNUSED_VARIABLE(error_info);
;;;91     }
00001a  bd3e              POP      {r1-r5,pc}
;;;92     
                          ENDP


                          AREA ||i.app_error_save_and_stop||, CODE, READONLY, ALIGN=2

                  app_error_save_and_stop PROC
;;;93     
;;;94     void app_error_save_and_stop(uint32_t id, uint32_t pc, uint32_t info)
000000  b518              PUSH     {r3,r4,lr}
;;;95     {
;;;96         /* static error variables - in order to prevent removal by optimizers */
;;;97         static volatile struct
;;;98         {
;;;99             uint32_t        fault_id;
;;;100            uint32_t        pc;
;;;101            uint32_t        error_info;
;;;102            assert_info_t * p_assert_info;
;;;103            error_info_t  * p_error_info;
;;;104            ret_code_t      err_code;
;;;105            uint32_t        line_num;
;;;106            const uint8_t * p_file_name;
;;;107        } m_error_data = {0};
;;;108    
;;;109        // The following variable helps Keil keep the call stack visible, in addition, it can be set to
;;;110        // 0 in the debugger to continue executing code after the error check.
;;;111        volatile bool loop = true;
000002  2301              MOVS     r3,#1
000004  9300              STR      r3,[sp,#0]
;;;112        UNUSED_VARIABLE(loop);
000006  f89d3000          LDRB     r3,[sp,#0]
;;;113    
;;;114        m_error_data.fault_id   = id;
00000a  4b1e              LDR      r3,|L3.132|
00000c  6018              STR      r0,[r3,#0]  ; m_error_data
;;;115        m_error_data.pc         = pc;
00000e  6059              STR      r1,[r3,#4]  ; m_error_data
;;;116        m_error_data.error_info = info;
000010  609a              STR      r2,[r3,#8]  ; m_error_data
;;;117    
;;;118        switch (id)
000012  f46f4380          MVN      r3,#0x4000
000016  4403              ADD      r3,r3,r0
000018  b163              CBZ      r3,|L3.52|
00001a  2b01              CMP      r3,#1
00001c  d119              BNE      |L3.82|
;;;119        {
;;;120            case NRF_FAULT_ID_SDK_ASSERT:
;;;121                m_error_data.p_assert_info = (assert_info_t *)info;
00001e  4b19              LDR      r3,|L3.132|
000020  60da              STR      r2,[r3,#0xc]  ; m_error_data
;;;122                m_error_data.line_num      = m_error_data.p_assert_info->line_num;
000022  68db              LDR      r3,[r3,#0xc]  ; m_error_data
000024  881b              LDRH     r3,[r3,#0]
000026  4c17              LDR      r4,|L3.132|
000028  61a3              STR      r3,[r4,#0x18]  ; m_error_data
;;;123                m_error_data.p_file_name   = m_error_data.p_assert_info->p_file_name;
00002a  4623              MOV      r3,r4
00002c  68db              LDR      r3,[r3,#0xc]  ; m_error_data
00002e  685b              LDR      r3,[r3,#4]
000030  61e3              STR      r3,[r4,#0x1c]  ; m_error_data
;;;124                break;
000032  e00e              B        |L3.82|
                  |L3.52|
;;;125    
;;;126            case NRF_FAULT_ID_SDK_ERROR:
;;;127                m_error_data.p_error_info = (error_info_t *)info;
000034  4b13              LDR      r3,|L3.132|
000036  611a              STR      r2,[r3,#0x10]  ; m_error_data
;;;128                m_error_data.err_code     = m_error_data.p_error_info->err_code;
000038  691b              LDR      r3,[r3,#0x10]  ; m_error_data
00003a  689b              LDR      r3,[r3,#8]
00003c  4c11              LDR      r4,|L3.132|
00003e  6163              STR      r3,[r4,#0x14]  ; m_error_data
;;;129                m_error_data.line_num     = m_error_data.p_error_info->line_num;
000040  4623              MOV      r3,r4
000042  691b              LDR      r3,[r3,#0x10]  ; m_error_data
000044  881b              LDRH     r3,[r3,#0]
000046  61a3              STR      r3,[r4,#0x18]  ; m_error_data
;;;130                m_error_data.p_file_name  = m_error_data.p_error_info->p_file_name;
000048  4623              MOV      r3,r4
00004a  691b              LDR      r3,[r3,#0x10]  ; m_error_data
00004c  685b              LDR      r3,[r3,#4]
00004e  61e3              STR      r3,[r4,#0x1c]  ; m_error_data
;;;131                break;
000050  bf00              NOP      
                  |L3.82|
000052  bf00              NOP                            ;124
;;;132        }
;;;133    
;;;134        UNUSED_VARIABLE(m_error_data);
000054  4b0b              LDR      r3,|L3.132|
000056  681b              LDR      r3,[r3,#0]  ; m_error_data
000058  4b0a              LDR      r3,|L3.132|
00005a  685b              LDR      r3,[r3,#4]  ; m_error_data
00005c  4b09              LDR      r3,|L3.132|
00005e  689b              LDR      r3,[r3,#8]  ; m_error_data
000060  4b08              LDR      r3,|L3.132|
000062  68db              LDR      r3,[r3,#0xc]  ; m_error_data
000064  4b07              LDR      r3,|L3.132|
000066  691b              LDR      r3,[r3,#0x10]  ; m_error_data
000068  4b06              LDR      r3,|L3.132|
00006a  695b              LDR      r3,[r3,#0x14]  ; m_error_data
00006c  4b05              LDR      r3,|L3.132|
00006e  699b              LDR      r3,[r3,#0x18]  ; m_error_data
000070  4b04              LDR      r3,|L3.132|
000072  69db              LDR      r3,[r3,#0x1c]  ; m_error_data
;;;135    
;;;136        // If printing is disrupted, remove the irq calls, or set the loop variable to 0 in the debugger.
;;;137        __disable_irq();
000074  b672              CPSID    i
;;;138        while (loop);
000076  bf00              NOP      
                  |L3.120|
000078  f89d3000          LDRB     r3,[sp,#0]
00007c  2b00              CMP      r3,#0
00007e  d1fb              BNE      |L3.120|
;;;139    
;;;140        __enable_irq();
000080  b662              CPSIE    i
;;;141    }
000082  bd18              POP      {r3,r4,pc}
;;;142    
                          ENDP

                  |L3.132|
                          DCD      m_error_data

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  m_error_data
                          %        32

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\libraries\\util\\app_error.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_app_error_c_94ae794d____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___11_app_error_c_94ae794d____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_app_error_c_94ae794d____REVSH|
#line 402
|__asm___11_app_error_c_94ae794d____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_app_error_c_94ae794d____RRX|
#line 587
|__asm___11_app_error_c_94ae794d____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
