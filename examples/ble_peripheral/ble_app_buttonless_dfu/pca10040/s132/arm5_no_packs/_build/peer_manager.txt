; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --reduce_paths -o.\_build\peer_manager.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\peer_manager.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..\components\libraries\balloc -I..\..\..\..\..\..\components\libraries\bootloader\dfu -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\experimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\components\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\libraries\fifo -I.\RTE\_nrf52832_xxaa -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.14.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DNRF52 -DBL_SETTINGS_ACCESS_ONLY -DBOARD_PCA10040 -DCONFIG_GPIO_AS_PINRESET -DNRF52 -DNRF52832_XXAA -DNRF52_PAN_74 -DNRF_SD_BLE_API_VERSION=5 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -DDEBUG --omf_browse=.\_build\peer_manager.crf ..\..\..\..\..\..\components\ble\peer_manager\peer_manager.c]
                          THUMB

                          AREA ||i.ble_evt_handler||, CODE, READONLY, ALIGN=2

                  ble_evt_handler PROC
;;;472     */
;;;473    static void ble_evt_handler(ble_evt_t const * p_ble_evt, void * p_context)
000000  b570              PUSH     {r4-r6,lr}
;;;474    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;475        VERIFY_MODULE_INITIALIZED_VOID();
000006  bf00              NOP      
000008  4807              LDR      r0,|L1.40|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b900              CBNZ     r0,|L1.16|
                  |L1.14|
;;;476    
;;;477        im_ble_evt_handler(p_ble_evt);
;;;478        sm_ble_evt_handler(p_ble_evt);
;;;479        gcm_ble_evt_handler(p_ble_evt);
;;;480    }
00000e  bd70              POP      {r4-r6,pc}
                  |L1.16|
000010  bf00              NOP                            ;475
000012  4620              MOV      r0,r4                 ;477
000014  f7fffffe          BL       im_ble_evt_handler
000018  4620              MOV      r0,r4                 ;478
00001a  f7fffffe          BL       sm_ble_evt_handler
00001e  4620              MOV      r0,r4                 ;479
000020  f7fffffe          BL       gcm_ble_evt_handler
000024  bf00              NOP      
000026  e7f2              B        |L1.14|
;;;481    
                          ENDP

                  |L1.40|
                          DCD      m_module_initialized

                          AREA ||i.evt_send||, CODE, READONLY, ALIGN=2

                  evt_send PROC
;;;74      */
;;;75     static void evt_send(pm_evt_t * p_pm_evt)
000000  b570              PUSH     {r4-r6,lr}
;;;76     {
000002  4605              MOV      r5,r0
;;;77         for (int i = 0; i < m_n_registrants; i++)
000004  2400              MOVS     r4,#0
000006  e005              B        |L2.20|
                  |L2.8|
;;;78         {
;;;79             m_evt_handlers[i](p_pm_evt);
000008  4805              LDR      r0,|L2.32|
00000a  f8501024          LDR      r1,[r0,r4,LSL #2]
00000e  4628              MOV      r0,r5
000010  4788              BLX      r1
000012  1c64              ADDS     r4,r4,#1              ;77
                  |L2.20|
000014  4803              LDR      r0,|L2.36|
000016  7800              LDRB     r0,[r0,#0]            ;77  ; m_n_registrants
000018  4284              CMP      r4,r0                 ;77
00001a  dbf5              BLT      |L2.8|
;;;80         }
;;;81     }
00001c  bd70              POP      {r4-r6,pc}
;;;82     
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      m_evt_handlers
                  |L2.36|
                          DCD      m_n_registrants

                          AREA ||i.internal_state_reset||, CODE, READONLY, ALIGN=2

                  internal_state_reset PROC
;;;486     */
;;;487    static void internal_state_reset()
000000  f64f70ff          MOV      r0,#0xffff
;;;488    {
;;;489        m_highest_ranked_peer = PM_PEER_ID_INVALID;
000004  4905              LDR      r1,|L3.28|
000006  8008              STRH     r0,[r1,#0]
;;;490        m_peer_rank_token     = PM_STORE_TOKEN_INVALID;
000008  2000              MOVS     r0,#0
00000a  4905              LDR      r1,|L3.32|
00000c  6008              STR      r0,[r1,#0]  ; m_peer_rank_token
;;;491        m_pairing_flag_id     = BLE_CONN_STATE_USER_FLAG_INVALID;
00000e  2018              MOVS     r0,#0x18
000010  4904              LDR      r1,|L3.36|
000012  7008              STRB     r0,[r1,#0]
;;;492        m_bonding_flag_id     = BLE_CONN_STATE_USER_FLAG_INVALID;
000014  4904              LDR      r1,|L3.40|
000016  7008              STRB     r0,[r1,#0]
;;;493    }
000018  4770              BX       lr
;;;494    
                          ENDP

00001a  0000              DCW      0x0000
                  |L3.28|
                          DCD      m_highest_ranked_peer
                  |L3.32|
                          DCD      m_peer_rank_token
                  |L3.36|
                          DCD      m_pairing_flag_id
                  |L3.40|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_conn_handle_get||, CODE, READONLY, ALIGN=2

                  pm_conn_handle_get PROC
;;;718    
;;;719    ret_code_t pm_conn_handle_get(pm_peer_id_t peer_id, uint16_t * p_conn_handle)
000000  b570              PUSH     {r4-r6,lr}
;;;720    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;721        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4808              LDR      r0,|L4.44|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L4.18|
00000e  2008              MOVS     r0,#8
                  |L4.16|
;;;722        VERIFY_PARAM_NOT_NULL(p_conn_handle);
;;;723        *p_conn_handle = im_conn_handle_get(peer_id);
;;;724        return NRF_SUCCESS;
;;;725    }
000010  bd70              POP      {r4-r6,pc}
                  |L4.18|
000012  bf00              NOP                            ;721
000014  bf00              NOP                            ;722
000016  b90c              CBNZ     r4,|L4.28|
000018  200e              MOVS     r0,#0xe               ;722
00001a  e7f9              B        |L4.16|
                  |L4.28|
00001c  bf00              NOP                            ;722
00001e  4628              MOV      r0,r5                 ;723
000020  f7fffffe          BL       im_conn_handle_get
000024  8020              STRH     r0,[r4,#0]            ;723
000026  2000              MOVS     r0,#0                 ;724
000028  e7f2              B        |L4.16|
;;;726    
                          ENDP

00002a  0000              DCW      0x0000
                  |L4.44|
                          DCD      m_module_initialized

                          AREA ||i.pm_conn_sec_config_reply||, CODE, READONLY, ALIGN=1

                  pm_conn_sec_config_reply PROC
;;;604    
;;;605    void pm_conn_sec_config_reply(uint16_t conn_handle, pm_conn_sec_config_t * p_conn_sec_config)
000000  b570              PUSH     {r4-r6,lr}
;;;606    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;607        sm_conn_sec_config_reply(conn_handle, p_conn_sec_config);
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       sm_conn_sec_config_reply
;;;608    }
00000e  bd70              POP      {r4-r6,pc}
;;;609    
                          ENDP


                          AREA ||i.pm_conn_sec_status_get||, CODE, READONLY, ALIGN=2

                  pm_conn_sec_status_get PROC
;;;691    
;;;692    ret_code_t pm_conn_sec_status_get(uint16_t conn_handle, pm_conn_sec_status_t * p_conn_sec_status)
000000  b570              PUSH     {r4-r6,lr}
;;;693    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;694        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  481a              LDR      r0,|L6.116|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L6.18|
00000e  2008              MOVS     r0,#8
                  |L6.16|
;;;695        VERIFY_PARAM_NOT_NULL(p_conn_sec_status);
;;;696    
;;;697        ble_conn_state_status_t status = ble_conn_state_status(conn_handle);
;;;698    
;;;699        if (status == BLE_CONN_STATUS_INVALID)
;;;700        {
;;;701            return BLE_ERROR_INVALID_CONN_HANDLE;
;;;702        }
;;;703    
;;;704        p_conn_sec_status->connected      = (status == BLE_CONN_STATUS_CONNECTED);
;;;705        p_conn_sec_status->bonded         = ble_conn_state_user_flag_get(conn_handle, m_bonding_flag_id);
;;;706        p_conn_sec_status->encrypted      = ble_conn_state_encrypted(conn_handle);
;;;707        p_conn_sec_status->mitm_protected = ble_conn_state_mitm_protected(conn_handle);
;;;708        return NRF_SUCCESS;
;;;709    }
000010  bd70              POP      {r4-r6,pc}
                  |L6.18|
000012  bf00              NOP                            ;694
000014  bf00              NOP                            ;695
000016  b90c              CBNZ     r4,|L6.28|
000018  200e              MOVS     r0,#0xe               ;695
00001a  e7f9              B        |L6.16|
                  |L6.28|
00001c  bf00              NOP                            ;695
00001e  4630              MOV      r0,r6                 ;697
000020  f7fffffe          BL       ble_conn_state_status
000024  4605              MOV      r5,r0                 ;697
000026  b915              CBNZ     r5,|L6.46|
000028  f2430002          MOV      r0,#0x3002            ;701
00002c  e7f0              B        |L6.16|
                  |L6.46|
00002e  2d02              CMP      r5,#2                 ;704
000030  d101              BNE      |L6.54|
000032  2001              MOVS     r0,#1                 ;704
000034  e000              B        |L6.56|
                  |L6.54|
000036  2000              MOVS     r0,#0                 ;704
                  |L6.56|
000038  7821              LDRB     r1,[r4,#0]            ;704
00003a  f3600100          BFI      r1,r0,#0,#1           ;704
00003e  7021              STRB     r1,[r4,#0]            ;704
000040  480d              LDR      r0,|L6.120|
000042  7801              LDRB     r1,[r0,#0]            ;705  ; m_bonding_flag_id
000044  4630              MOV      r0,r6                 ;705
000046  f7fffffe          BL       ble_conn_state_user_flag_get
00004a  7821              LDRB     r1,[r4,#0]            ;705
00004c  f36001c3          BFI      r1,r0,#3,#1           ;705
000050  7021              STRB     r1,[r4,#0]            ;705
000052  4630              MOV      r0,r6                 ;706
000054  f7fffffe          BL       ble_conn_state_encrypted
000058  7821              LDRB     r1,[r4,#0]            ;706
00005a  f3600141          BFI      r1,r0,#1,#1           ;706
00005e  7021              STRB     r1,[r4,#0]            ;706
000060  4630              MOV      r0,r6                 ;707
000062  f7fffffe          BL       ble_conn_state_mitm_protected
000066  7821              LDRB     r1,[r4,#0]            ;707
000068  f3600182          BFI      r1,r0,#2,#1           ;707
00006c  7021              STRB     r1,[r4,#0]            ;707
00006e  2000              MOVS     r0,#0                 ;708
000070  e7ce              B        |L6.16|
;;;710    
                          ENDP

000072  0000              DCW      0x0000
                  |L6.116|
                          DCD      m_module_initialized
                  |L6.120|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_conn_secure||, CODE, READONLY, ALIGN=2

                  pm_conn_secure PROC
;;;592    
;;;593    ret_code_t pm_conn_secure(uint16_t conn_handle, bool force_repairing)
000000  b570              PUSH     {r4-r6,lr}
;;;594    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;595        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4806              LDR      r0,|L7.36|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L7.18|
00000e  2008              MOVS     r0,#8
                  |L7.16|
;;;596    
;;;597        ret_code_t err_code;
;;;598    
;;;599        err_code = sm_link_secure(conn_handle, force_repairing);
;;;600    
;;;601        return err_code;
;;;602    }
000010  bd70              POP      {r4-r6,pc}
                  |L7.18|
000012  bf00              NOP                            ;595
000014  4629              MOV      r1,r5                 ;599
000016  4620              MOV      r0,r4                 ;599
000018  f7fffffe          BL       sm_link_secure
00001c  4606              MOV      r6,r0                 ;599
00001e  4630              MOV      r0,r6                 ;601
000020  e7f6              B        |L7.16|
;;;603    
                          ENDP

000022  0000              DCW      0x0000
                  |L7.36|
                          DCD      m_module_initialized

                          AREA ||i.pm_device_identities_list_set||, CODE, READONLY, ALIGN=2

                  pm_device_identities_list_set PROC
;;;683    
;;;684    ret_code_t pm_device_identities_list_set(pm_peer_id_t const * p_peers,
000000  b570              PUSH     {r4-r6,lr}
;;;685                                             uint32_t             peer_cnt)
;;;686    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;687        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4805              LDR      r0,|L8.32|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L8.18|
00000e  2008              MOVS     r0,#8
                  |L8.16|
;;;688        return im_device_identities_list_set(p_peers, peer_cnt);
;;;689    }
000010  bd70              POP      {r4-r6,pc}
                  |L8.18|
000012  bf00              NOP                            ;687
000014  4629              MOV      r1,r5                 ;688
000016  4620              MOV      r0,r4                 ;688
000018  f7fffffe          BL       im_device_identities_list_set
00001c  e7f8              B        |L8.16|
;;;690    
                          ENDP

00001e  0000              DCW      0x0000
                  |L8.32|
                          DCD      m_module_initialized

                          AREA ||i.pm_gcm_evt_handler||, CODE, READONLY, ALIGN=1

                  pm_gcm_evt_handler PROC
;;;369     */
;;;370    void pm_gcm_evt_handler(gcm_evt_t const * p_gcm_evt)
000000  b530              PUSH     {r4,r5,lr}
;;;371    {
000002  b085              SUB      sp,sp,#0x14
000004  4604              MOV      r4,r0
;;;372        bool send_evt = true;
000006  2501              MOVS     r5,#1
;;;373        pm_evt_t pm_evt;
;;;374    
;;;375        memset(&pm_evt, 0, sizeof(pm_evt_t));
000008  2114              MOVS     r1,#0x14
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       __aeabi_memclr4
;;;376        pm_evt.peer_id = p_gcm_evt->peer_id;
000010  8860              LDRH     r0,[r4,#2]
000012  f8ad0004          STRH     r0,[sp,#4]
;;;377        pm_evt.conn_handle = im_conn_handle_get(pm_evt.peer_id);
000016  f8bd0004          LDRH     r0,[sp,#4]
00001a  f7fffffe          BL       im_conn_handle_get
00001e  f8ad0002          STRH     r0,[sp,#2]
;;;378    
;;;379        switch (p_gcm_evt->evt_id)
000022  7820              LDRB     r0,[r4,#0]
000024  280a              CMP      r0,#0xa
000026  d243              BCS      |L9.176|
000028  e8dff000          TBB      [pc,r0]
00002c  050f191d          DCB      0x05,0x0f,0x19,0x1d
000030  212b2f33          DCB      0x21,0x2b,0x2f,0x33
000034  3539              DCB      0x35,0x39
;;;380        {
;;;381            case GCM_EVT_LOCAL_DB_CACHE_STORED:
;;;382                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000036  2007              MOVS     r0,#7
000038  f88d0000          STRB     r0,[sp,#0]
;;;383                pm_evt.params.peer_data_update_succeeded.action = PM_PEER_DATA_OP_UPDATE;
00003c  2100              MOVS     r1,#0
00003e  f88d1009          STRB     r1,[sp,#9]
;;;384                pm_evt.params.peer_data_update_succeeded.data_id =  PM_PEER_DATA_ID_GATT_LOCAL;
000042  2008              MOVS     r0,#8
000044  f88d0008          STRB     r0,[sp,#8]
;;;385                break;
000048  e032              B        |L9.176|
;;;386    
;;;387            case GCM_EVT_LOCAL_DB_CACHE_UPDATED:
;;;388                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
00004a  2007              MOVS     r0,#7
00004c  f88d0000          STRB     r0,[sp,#0]
;;;389                pm_evt.params.peer_data_update_succeeded.action = PM_PEER_DATA_OP_UPDATE;
000050  2100              MOVS     r1,#0
000052  f88d1009          STRB     r1,[sp,#9]
;;;390                pm_evt.params.peer_data_update_succeeded.data_id =  PM_PEER_DATA_ID_GATT_LOCAL;
000056  2008              MOVS     r0,#8
000058  f88d0008          STRB     r0,[sp,#8]
;;;391                break;
00005c  e028              B        |L9.176|
;;;392    
;;;393            case GCM_EVT_LOCAL_DB_CACHE_APPLIED:
;;;394                pm_evt.evt_id = PM_EVT_LOCAL_DB_CACHE_APPLIED;
00005e  200d              MOVS     r0,#0xd
000060  f88d0000          STRB     r0,[sp,#0]
;;;395                break;
000064  e024              B        |L9.176|
;;;396    
;;;397            case GCM_EVT_ERROR_LOCAL_DB_CACHE_APPLY:
;;;398                pm_evt.evt_id = PM_EVT_LOCAL_DB_CACHE_APPLY_FAILED;
000066  200e              MOVS     r0,#0xe
000068  f88d0000          STRB     r0,[sp,#0]
;;;399                break;
00006c  e020              B        |L9.176|
;;;400    
;;;401            case GCM_EVT_REMOTE_DB_CACHE_UPDATED:
;;;402                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
00006e  2007              MOVS     r0,#7
000070  f88d0000          STRB     r0,[sp,#0]
;;;403                pm_evt.params.peer_data_update_succeeded.action = PM_PEER_DATA_OP_UPDATE;
000074  2100              MOVS     r1,#0
000076  f88d1009          STRB     r1,[sp,#9]
;;;404                pm_evt.params.peer_data_update_succeeded.data_id =  PM_PEER_DATA_ID_GATT_REMOTE;
00007a  2005              MOVS     r0,#5
00007c  f88d0008          STRB     r0,[sp,#8]
;;;405                break;
000080  e016              B        |L9.176|
;;;406    
;;;407            case GCM_EVT_SERVICE_CHANGED_IND_SENT:
;;;408                pm_evt.evt_id = PM_EVT_SERVICE_CHANGED_IND_SENT;
000082  200f              MOVS     r0,#0xf
000084  f88d0000          STRB     r0,[sp,#0]
;;;409                break;
000088  e012              B        |L9.176|
;;;410    
;;;411            case GCM_EVT_SERVICE_CHANGED_IND_CONFIRMED:
;;;412                pm_evt.evt_id = PM_EVT_SERVICE_CHANGED_IND_CONFIRMED;
00008a  2010              MOVS     r0,#0x10
00008c  f88d0000          STRB     r0,[sp,#0]
;;;413                break;
000090  e00e              B        |L9.176|
;;;414    
;;;415            case GCM_EVT_ERROR_DATA_SIZE:
;;;416                send_evt = false;
000092  2500              MOVS     r5,#0
;;;417                break;
000094  e00c              B        |L9.176|
;;;418    
;;;419            case GCM_EVT_ERROR_STORAGE_FULL:
;;;420                pm_evt.evt_id = PM_EVT_STORAGE_FULL;
000096  2005              MOVS     r0,#5
000098  f88d0000          STRB     r0,[sp,#0]
;;;421                break;
00009c  e008              B        |L9.176|
;;;422    
;;;423            case GCM_EVT_ERROR_UNEXPECTED:
;;;424                pm_evt.evt_id = PM_EVT_ERROR_UNEXPECTED;
00009e  2006              MOVS     r0,#6
0000a0  f88d0000          STRB     r0,[sp,#0]
;;;425                pm_evt.params.error_unexpected.error = p_gcm_evt->params.error_unexpected.error;
0000a4  68a0              LDR      r0,[r4,#8]
0000a6  9002              STR      r0,[sp,#8]
;;;426                pm_evt.conn_handle = p_gcm_evt->params.error_unexpected.conn_handle;
0000a8  88a0              LDRH     r0,[r4,#4]
0000aa  f8ad0002          STRH     r0,[sp,#2]
;;;427                break;
0000ae  bf00              NOP      
                  |L9.176|
0000b0  bf00              NOP                            ;385
;;;428        }
;;;429    
;;;430        if (send_evt)
0000b2  b115              CBZ      r5,|L9.186|
;;;431        {
;;;432            evt_send(&pm_evt);
0000b4  4668              MOV      r0,sp
0000b6  f7fffffe          BL       evt_send
                  |L9.186|
;;;433        }
;;;434    }
0000ba  b005              ADD      sp,sp,#0x14
0000bc  bd30              POP      {r4,r5,pc}
;;;435    
                          ENDP


                          AREA ||i.pm_id_addr_get||, CODE, READONLY, ALIGN=2

                  pm_id_addr_get PROC
;;;631    
;;;632    ret_code_t pm_id_addr_get(ble_gap_addr_t * p_addr)
000000  b510              PUSH     {r4,lr}
;;;633    {
000002  4604              MOV      r4,r0
;;;634        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4807              LDR      r0,|L10.36|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L10.16|
00000c  2008              MOVS     r0,#8
                  |L10.14|
;;;635        VERIFY_PARAM_NOT_NULL(p_addr);
;;;636        return im_id_addr_get(p_addr);
;;;637    }
00000e  bd10              POP      {r4,pc}
                  |L10.16|
000010  bf00              NOP                            ;634
000012  bf00              NOP                            ;635
000014  b90c              CBNZ     r4,|L10.26|
000016  200e              MOVS     r0,#0xe               ;635
000018  e7f9              B        |L10.14|
                  |L10.26|
00001a  bf00              NOP                            ;635
00001c  4620              MOV      r0,r4                 ;636
00001e  f7fffffe          BL       im_id_addr_get
000022  e7f4              B        |L10.14|
;;;638    
                          ENDP

                  |L10.36|
                          DCD      m_module_initialized

                          AREA ||i.pm_id_addr_set||, CODE, READONLY, ALIGN=2

                  pm_id_addr_set PROC
;;;624    
;;;625    ret_code_t pm_id_addr_set(ble_gap_addr_t const * p_addr)
000000  b510              PUSH     {r4,lr}
;;;626    {
000002  4604              MOV      r4,r0
;;;627        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4805              LDR      r0,|L11.28|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L11.16|
00000c  2008              MOVS     r0,#8
                  |L11.14|
;;;628        return im_id_addr_set(p_addr);
;;;629    }
00000e  bd10              POP      {r4,pc}
                  |L11.16|
000010  bf00              NOP                            ;627
000012  4620              MOV      r0,r4                 ;628
000014  f7fffffe          BL       im_id_addr_set
000018  e7f9              B        |L11.14|
;;;630    
                          ENDP

00001a  0000              DCW      0x0000
                  |L11.28|
                          DCD      m_module_initialized

                          AREA ||i.pm_im_evt_handler||, CODE, READONLY, ALIGN=2

                  pm_im_evt_handler PROC
;;;441     */
;;;442    void pm_im_evt_handler(im_evt_t const * p_im_evt)
000000  b530              PUSH     {r4,r5,lr}
;;;443    {
000002  b085              SUB      sp,sp,#0x14
000004  4604              MOV      r4,r0
;;;444        pm_evt_t pm_evt;
;;;445        ret_code_t err_code;
;;;446    
;;;447        switch (p_im_evt->evt_id)
000006  7820              LDRB     r0,[r4,#0]
000008  b110              CBZ      r0,|L12.16|
00000a  2801              CMP      r0,#1
00000c  d11e              BNE      |L12.76|
00000e  e004              B        |L12.26|
                  |L12.16|
;;;448        {
;;;449            case IM_EVT_DUPLICATE_ID:
;;;450                // Attempt to delete the duplicate data to free space and avoid finding old data when
;;;451                // scanning in the future
;;;452                err_code = pm_peer_delete(p_im_evt->params.duplicate_id.peer_id_2);
000010  88e0              LDRH     r0,[r4,#6]
000012  f7fffffe          BL       pm_peer_delete
000016  4605              MOV      r5,r0
;;;453                UNUSED_VARIABLE(err_code);
;;;454                break;
000018  e018              B        |L12.76|
                  |L12.26|
;;;455    
;;;456            case IM_EVT_BONDED_PEER_CONNECTED:
;;;457                ble_conn_state_user_flag_set(p_im_evt->conn_handle, m_bonding_flag_id, true);
00001a  8860              LDRH     r0,[r4,#2]
00001c  2201              MOVS     r2,#1
00001e  490d              LDR      r1,|L12.84|
000020  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
000022  f7fffffe          BL       ble_conn_state_user_flag_set
;;;458                memset(&pm_evt, 0, sizeof(pm_evt_t));
000026  2114              MOVS     r1,#0x14
000028  4668              MOV      r0,sp
00002a  f7fffffe          BL       __aeabi_memclr4
;;;459                pm_evt.conn_handle = p_im_evt->conn_handle;
00002e  8860              LDRH     r0,[r4,#2]
000030  f8ad0002          STRH     r0,[sp,#2]
;;;460                pm_evt.peer_id = im_peer_id_get_by_conn_handle(p_im_evt->conn_handle);
000034  8860              LDRH     r0,[r4,#2]
000036  f7fffffe          BL       im_peer_id_get_by_conn_handle
00003a  f8ad0004          STRH     r0,[sp,#4]
;;;461                pm_evt.evt_id = PM_EVT_BONDED_PEER_CONNECTED;
00003e  2000              MOVS     r0,#0
000040  f88d0000          STRB     r0,[sp,#0]
;;;462                evt_send(&pm_evt);
000044  4668              MOV      r0,sp
000046  f7fffffe          BL       evt_send
;;;463                break;
00004a  bf00              NOP      
                  |L12.76|
00004c  bf00              NOP                            ;454
;;;464        }
;;;465    }
00004e  b005              ADD      sp,sp,#0x14
000050  bd30              POP      {r4,r5,pc}
;;;466    
                          ENDP

000052  0000              DCW      0x0000
                  |L12.84|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_init||, CODE, READONLY, ALIGN=2

                  pm_init PROC
;;;495    
;;;496    ret_code_t pm_init(void)
000000  b510              PUSH     {r4,lr}
;;;497    {
;;;498        ret_code_t err_code;
;;;499    
;;;500        err_code = pds_init();
000002  f7fffffe          BL       pds_init
000006  4604              MOV      r4,r0
;;;501        if (err_code != NRF_SUCCESS)
000008  b10c              CBZ      r4,|L13.14|
;;;502        {
;;;503            return NRF_ERROR_INTERNAL;
00000a  2003              MOVS     r0,#3
                  |L13.12|
;;;504        }
;;;505    
;;;506        err_code = pdb_init();
;;;507        if (err_code != NRF_SUCCESS)
;;;508        {
;;;509            return NRF_ERROR_INTERNAL;
;;;510        }
;;;511    
;;;512        err_code = sm_init();
;;;513        if (err_code != NRF_SUCCESS)
;;;514        {
;;;515            return NRF_ERROR_INTERNAL;
;;;516        }
;;;517    
;;;518        err_code = smd_init();
;;;519        if (err_code != NRF_SUCCESS)
;;;520        {
;;;521            return NRF_ERROR_INTERNAL;
;;;522        }
;;;523    
;;;524        err_code = gcm_init();
;;;525        if (err_code != NRF_SUCCESS)
;;;526        {
;;;527            return NRF_ERROR_INTERNAL;
;;;528        }
;;;529    
;;;530        err_code = gscm_init();
;;;531        if (err_code != NRF_SUCCESS)
;;;532        {
;;;533            return NRF_ERROR_INTERNAL;
;;;534        }
;;;535    
;;;536        err_code = im_init();
;;;537        if (err_code != NRF_SUCCESS)
;;;538        {
;;;539            return NRF_ERROR_INTERNAL;
;;;540        }
;;;541    
;;;542        internal_state_reset();
;;;543    
;;;544        m_pairing_flag_id = ble_conn_state_user_flag_acquire();
;;;545        if (m_pairing_flag_id == BLE_CONN_STATE_USER_FLAG_INVALID)
;;;546        {
;;;547            return NRF_ERROR_INTERNAL;
;;;548        }
;;;549    
;;;550        m_bonding_flag_id = ble_conn_state_user_flag_acquire();
;;;551        if (m_bonding_flag_id == BLE_CONN_STATE_USER_FLAG_INVALID)
;;;552        {
;;;553            return NRF_ERROR_INTERNAL;
;;;554        }
;;;555    
;;;556        m_peer_rank_initialized = false;
;;;557        m_module_initialized    = true;
;;;558    
;;;559        return NRF_SUCCESS;
;;;560    }
00000c  bd10              POP      {r4,pc}
                  |L13.14|
00000e  f7fffffe          BL       pdb_init
000012  4604              MOV      r4,r0                 ;506
000014  b10c              CBZ      r4,|L13.26|
000016  2003              MOVS     r0,#3                 ;509
000018  e7f8              B        |L13.12|
                  |L13.26|
00001a  f7fffffe          BL       sm_init
00001e  4604              MOV      r4,r0                 ;512
000020  b10c              CBZ      r4,|L13.38|
000022  2003              MOVS     r0,#3                 ;515
000024  e7f2              B        |L13.12|
                  |L13.38|
000026  f7fffffe          BL       smd_init
00002a  4604              MOV      r4,r0                 ;518
00002c  b10c              CBZ      r4,|L13.50|
00002e  2003              MOVS     r0,#3                 ;521
000030  e7ec              B        |L13.12|
                  |L13.50|
000032  f7fffffe          BL       gcm_init
000036  4604              MOV      r4,r0                 ;524
000038  b10c              CBZ      r4,|L13.62|
00003a  2003              MOVS     r0,#3                 ;527
00003c  e7e6              B        |L13.12|
                  |L13.62|
00003e  f7fffffe          BL       gscm_init
000042  4604              MOV      r4,r0                 ;530
000044  b10c              CBZ      r4,|L13.74|
000046  2003              MOVS     r0,#3                 ;533
000048  e7e0              B        |L13.12|
                  |L13.74|
00004a  f7fffffe          BL       im_init
00004e  4604              MOV      r4,r0                 ;536
000050  b10c              CBZ      r4,|L13.86|
000052  2003              MOVS     r0,#3                 ;539
000054  e7da              B        |L13.12|
                  |L13.86|
000056  f7fffffe          BL       internal_state_reset
00005a  f7fffffe          BL       ble_conn_state_user_flag_acquire
00005e  490d              LDR      r1,|L13.148|
000060  7008              STRB     r0,[r1,#0]            ;544
000062  4608              MOV      r0,r1                 ;545
000064  7800              LDRB     r0,[r0,#0]            ;545  ; m_pairing_flag_id
000066  2818              CMP      r0,#0x18              ;545
000068  d101              BNE      |L13.110|
00006a  2003              MOVS     r0,#3                 ;547
00006c  e7ce              B        |L13.12|
                  |L13.110|
00006e  f7fffffe          BL       ble_conn_state_user_flag_acquire
000072  4909              LDR      r1,|L13.152|
000074  7008              STRB     r0,[r1,#0]            ;550
000076  4608              MOV      r0,r1                 ;551
000078  7800              LDRB     r0,[r0,#0]            ;551  ; m_bonding_flag_id
00007a  2818              CMP      r0,#0x18              ;551
00007c  d101              BNE      |L13.130|
00007e  2003              MOVS     r0,#3                 ;553
000080  e7c4              B        |L13.12|
                  |L13.130|
000082  2000              MOVS     r0,#0                 ;556
000084  4905              LDR      r1,|L13.156|
000086  7008              STRB     r0,[r1,#0]            ;556
000088  2001              MOVS     r0,#1                 ;557
00008a  4905              LDR      r1,|L13.160|
00008c  7008              STRB     r0,[r1,#0]            ;557
00008e  2000              MOVS     r0,#0                 ;559
000090  e7bc              B        |L13.12|
;;;561    
                          ENDP

000092  0000              DCW      0x0000
                  |L13.148|
                          DCD      m_pairing_flag_id
                  |L13.152|
                          DCD      m_bonding_flag_id
                  |L13.156|
                          DCD      m_peer_rank_initialized
                  |L13.160|
                          DCD      m_module_initialized

                          AREA ||i.pm_lesc_public_key_set||, CODE, READONLY, ALIGN=2

                  pm_lesc_public_key_set PROC
;;;711    
;;;712    ret_code_t pm_lesc_public_key_set(ble_gap_lesc_p256_pk_t * p_public_key)
000000  b510              PUSH     {r4,lr}
;;;713    {
000002  4604              MOV      r4,r0
;;;714        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4805              LDR      r0,|L14.28|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L14.16|
00000c  2008              MOVS     r0,#8
                  |L14.14|
;;;715        return sm_lesc_public_key_set(p_public_key);
;;;716    }
00000e  bd10              POP      {r4,pc}
                  |L14.16|
000010  bf00              NOP                            ;714
000012  4620              MOV      r0,r4                 ;715
000014  f7fffffe          BL       sm_lesc_public_key_set
000018  e7f9              B        |L14.14|
;;;717    
                          ENDP

00001a  0000              DCW      0x0000
                  |L14.28|
                          DCD      m_module_initialized

                          AREA ||i.pm_local_database_has_changed||, CODE, READONLY, ALIGN=2

                  pm_local_database_has_changed PROC
;;;617    
;;;618    void pm_local_database_has_changed(void)
000000  b510              PUSH     {r4,lr}
;;;619    {
;;;620        VERIFY_MODULE_INITIALIZED_VOID();
000002  bf00              NOP      
000004  4804              LDR      r0,|L15.24|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  b900              CBNZ     r0,|L15.12|
                  |L15.10|
;;;621        gcm_local_database_has_changed();
;;;622    }
00000a  bd10              POP      {r4,pc}
                  |L15.12|
00000c  bf00              NOP                            ;620
00000e  f7fffffe          BL       gcm_local_database_has_changed
000012  bf00              NOP      
000014  e7f9              B        |L15.10|
;;;623    
                          ENDP

000016  0000              DCW      0x0000
                  |L15.24|
                          DCD      m_module_initialized

                          AREA ||i.pm_next_peer_id_get||, CODE, READONLY, ALIGN=2

                  pm_next_peer_id_get PROC
;;;746    
;;;747    pm_peer_id_t pm_next_peer_id_get(pm_peer_id_t prev_peer_id)
000000  b510              PUSH     {r4,lr}
;;;748    {
000002  4604              MOV      r4,r0
;;;749        if (!MODULE_INITIALIZED)
000004  4804              LDR      r0,|L16.24|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  b910              CBNZ     r0,|L16.16|
;;;750        {
;;;751            return PM_PEER_ID_INVALID;
00000a  f64f70ff          MOV      r0,#0xffff
                  |L16.14|
;;;752        }
;;;753        return pdb_next_peer_id_get(prev_peer_id);
;;;754    }
00000e  bd10              POP      {r4,pc}
                  |L16.16|
000010  4620              MOV      r0,r4                 ;753
000012  f7fffffe          BL       pdb_next_peer_id_get
000016  e7fa              B        |L16.14|
;;;755    
                          ENDP

                  |L16.24|
                          DCD      m_module_initialized

                          AREA ||i.pm_pdb_evt_handler||, CODE, READONLY, ALIGN=2

                  pm_pdb_evt_handler PROC
;;;88      */
;;;89     void pm_pdb_evt_handler(pdb_evt_t const * p_pdb_evt)
000000  b530              PUSH     {r4,r5,lr}
;;;90     {
000002  b08b              SUB      sp,sp,#0x2c
000004  4604              MOV      r4,r0
;;;91         bool send_evt = true;
000006  2501              MOVS     r5,#1
;;;92         pm_evt_t pm_evt;
;;;93     
;;;94         memset(&pm_evt, 0, sizeof(pm_evt_t));
000008  2114              MOVS     r1,#0x14
00000a  a806              ADD      r0,sp,#0x18
00000c  f7fffffe          BL       __aeabi_memclr4
;;;95         pm_evt.peer_id = p_pdb_evt->peer_id;
000010  8860              LDRH     r0,[r4,#2]
000012  f8ad001c          STRH     r0,[sp,#0x1c]
;;;96         pm_evt.conn_handle = im_conn_handle_get(pm_evt.peer_id);
000016  f8bd001c          LDRH     r0,[sp,#0x1c]
00001a  f7fffffe          BL       im_conn_handle_get
00001e  f8ad001a          STRH     r0,[sp,#0x1a]
;;;97     
;;;98         switch (p_pdb_evt->evt_id)
000022  7820              LDRB     r0,[r4,#0]
000024  280a              CMP      r0,#0xa
000026  d27d              BCS      |L17.292|
000028  e8dff000          TBB      [pc,r0]
00002c  05123151          DCB      0x05,0x12,0x31,0x51
000030  5d6994b3          DCB      0x5d,0x69,0x94,0xb3
000034  b5b9              DCB      0xb5,0xb9
;;;99         {
;;;100            case PDB_EVT_WRITE_BUF_STORED:
;;;101                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000036  2007              MOVS     r0,#7
000038  f88d0018          STRB     r0,[sp,#0x18]
;;;102                pm_evt.params.peer_data_update_succeeded.data_id       = p_pdb_evt->data_id;
00003c  7920              LDRB     r0,[r4,#4]
00003e  f88d0020          STRB     r0,[sp,#0x20]
;;;103                pm_evt.params.peer_data_update_succeeded.action        = PM_PEER_DATA_OP_UPDATE;
000042  2100              MOVS     r1,#0
000044  a806              ADD      r0,sp,#0x18
000046  7241              STRB     r1,[r0,#9]
;;;104                pm_evt.params.peer_data_update_succeeded.token         = PM_STORE_TOKEN_INVALID;
000048  9109              STR      r1,[sp,#0x24]
;;;105                pm_evt.params.peer_data_update_succeeded.flash_changed = true;
00004a  2101              MOVS     r1,#1
00004c  7281              STRB     r1,[r0,#0xa]
;;;106                break;
00004e  e0ac              B        |L17.426|
;;;107    
;;;108            case PDB_EVT_RAW_STORED:
;;;109                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000050  2007              MOVS     r0,#7
000052  f88d0018          STRB     r0,[sp,#0x18]
;;;110                pm_evt.params.peer_data_update_succeeded.data_id = p_pdb_evt->data_id;
000056  7920              LDRB     r0,[r4,#4]
000058  f88d0020          STRB     r0,[sp,#0x20]
;;;111                pm_evt.params.peer_data_update_succeeded.action  = PM_PEER_DATA_OP_UPDATE;
00005c  2100              MOVS     r1,#0
00005e  a806              ADD      r0,sp,#0x18
000060  7241              STRB     r1,[r0,#9]
;;;112                pm_evt.params.peer_data_update_succeeded.token
000062  68a1              LDR      r1,[r4,#8]
000064  9109              STR      r1,[sp,#0x24]
;;;113                                                = p_pdb_evt->params.raw_stored_evt.store_token;
;;;114                pm_evt.params.peer_data_update_succeeded.flash_changed = true;
000066  2101              MOVS     r1,#1
000068  7281              STRB     r1,[r0,#0xa]
;;;115    
;;;116                if (    (m_peer_rank_token != PM_STORE_TOKEN_INVALID)
00006a  4853              LDR      r0,|L17.440|
00006c  6800              LDR      r0,[r0,#0]  ; m_peer_rank_token
00006e  b168              CBZ      r0,|L17.140|
;;;117                    && (m_peer_rank_token == p_pdb_evt->params.raw_stored_evt.store_token))
000070  4951              LDR      r1,|L17.440|
000072  68a0              LDR      r0,[r4,#8]
000074  6809              LDR      r1,[r1,#0]  ; m_peer_rank_token
000076  4288              CMP      r0,r1
000078  d108              BNE      |L17.140|
;;;118                {
;;;119                    m_peer_rank_token     = PM_STORE_TOKEN_INVALID;
00007a  2000              MOVS     r0,#0
00007c  494e              LDR      r1,|L17.440|
00007e  6008              STR      r0,[r1,#0]  ; m_peer_rank_token
;;;120                    m_highest_ranked_peer = pm_evt.peer_id;
000080  f8bd001c          LDRH     r0,[sp,#0x1c]
000084  494d              LDR      r1,|L17.444|
000086  8008              STRH     r0,[r1,#0]
;;;121    
;;;122                    pm_evt.params.peer_data_update_succeeded.token = PM_STORE_TOKEN_INVALID;
000088  2100              MOVS     r1,#0
00008a  9109              STR      r1,[sp,#0x24]
                  |L17.140|
;;;123                }
;;;124                break;
00008c  e08d              B        |L17.426|
;;;125    
;;;126            case PDB_EVT_RAW_STORE_FAILED:
;;;127                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_FAILED;
00008e  2008              MOVS     r0,#8
000090  f88d0018          STRB     r0,[sp,#0x18]
;;;128                pm_evt.params.peer_data_update_failed.data_id = p_pdb_evt->data_id;
000094  7920              LDRB     r0,[r4,#4]
000096  f88d0020          STRB     r0,[sp,#0x20]
;;;129                pm_evt.params.peer_data_update_failed.action  = PM_PEER_DATA_OP_UPDATE;
00009a  2100              MOVS     r1,#0
00009c  a806              ADD      r0,sp,#0x18
00009e  7241              STRB     r1,[r0,#9]
;;;130                pm_evt.params.peer_data_update_failed.token
0000a0  68a1              LDR      r1,[r4,#8]
0000a2  9109              STR      r1,[sp,#0x24]
;;;131                                                = p_pdb_evt->params.error_raw_store_evt.store_token;
;;;132                pm_evt.params.peer_data_update_failed.error
0000a4  68e1              LDR      r1,[r4,#0xc]
0000a6  910a              STR      r1,[sp,#0x28]
;;;133                                                = p_pdb_evt->params.error_raw_store_evt.err_code;
;;;134    
;;;135                if (    (m_peer_rank_token != PM_STORE_TOKEN_INVALID)
0000a8  4843              LDR      r0,|L17.440|
0000aa  6800              LDR      r0,[r0,#0]  ; m_peer_rank_token
0000ac  b170              CBZ      r0,|L17.204|
;;;136                    && (m_peer_rank_token == p_pdb_evt->params.raw_stored_evt.store_token))
0000ae  4942              LDR      r1,|L17.440|
0000b0  68a0              LDR      r0,[r4,#8]
0000b2  6809              LDR      r1,[r1,#0]  ; m_peer_rank_token
0000b4  4288              CMP      r0,r1
0000b6  d109              BNE      |L17.204|
;;;137                {
;;;138                    m_peer_rank_token            = PM_STORE_TOKEN_INVALID;
0000b8  2000              MOVS     r0,#0
0000ba  493f              LDR      r1,|L17.440|
0000bc  6008              STR      r0,[r1,#0]  ; m_peer_rank_token
;;;139                    m_current_highest_peer_rank -= 1;
0000be  4840              LDR      r0,|L17.448|
0000c0  6800              LDR      r0,[r0,#0]  ; m_current_highest_peer_rank
0000c2  1e40              SUBS     r0,r0,#1
0000c4  493e              LDR      r1,|L17.448|
0000c6  6008              STR      r0,[r1,#0]  ; m_current_highest_peer_rank
;;;140    
;;;141                    pm_evt.params.peer_data_update_succeeded.token = PM_STORE_TOKEN_INVALID;
0000c8  2100              MOVS     r1,#0
0000ca  9109              STR      r1,[sp,#0x24]
                  |L17.204|
;;;142                }
;;;143                break;
0000cc  e06d              B        |L17.426|
;;;144    
;;;145            case PDB_EVT_CLEARED:
;;;146                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
0000ce  2007              MOVS     r0,#7
0000d0  f88d0018          STRB     r0,[sp,#0x18]
;;;147                pm_evt.params.peer_data_update_succeeded.data_id = p_pdb_evt->data_id;
0000d4  7920              LDRB     r0,[r4,#4]
0000d6  f88d0020          STRB     r0,[sp,#0x20]
;;;148                pm_evt.params.peer_data_update_succeeded.action  = PM_PEER_DATA_OP_DELETE;
0000da  2101              MOVS     r1,#1
0000dc  a806              ADD      r0,sp,#0x18
0000de  7241              STRB     r1,[r0,#9]
;;;149                pm_evt.params.peer_data_update_succeeded.token   = PM_STORE_TOKEN_INVALID;
0000e0  2100              MOVS     r1,#0
0000e2  9109              STR      r1,[sp,#0x24]
;;;150                break;
0000e4  e061              B        |L17.426|
;;;151    
;;;152            case PDB_EVT_CLEAR_FAILED:
;;;153                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_FAILED;
0000e6  2008              MOVS     r0,#8
0000e8  f88d0018          STRB     r0,[sp,#0x18]
;;;154                pm_evt.params.peer_data_update_failed.data_id = p_pdb_evt->data_id;
0000ec  7920              LDRB     r0,[r4,#4]
0000ee  f88d0020          STRB     r0,[sp,#0x20]
;;;155                pm_evt.params.peer_data_update_failed.action  = PM_PEER_DATA_OP_DELETE;
0000f2  2101              MOVS     r1,#1
0000f4  a806              ADD      r0,sp,#0x18
0000f6  7241              STRB     r1,[r0,#9]
;;;156                pm_evt.params.peer_data_update_failed.error
0000f8  68a1              LDR      r1,[r4,#8]
0000fa  910a              STR      r1,[sp,#0x28]
;;;157                                                        = p_pdb_evt->params.clear_failed_evt.err_code;
;;;158                break;
0000fc  e055              B        |L17.426|
;;;159    
;;;160            case PDB_EVT_PEER_FREED:
;;;161                pm_evt.evt_id = PM_EVT_PEER_DELETE_SUCCEEDED;
0000fe  2009              MOVS     r0,#9
000100  f88d0018          STRB     r0,[sp,#0x18]
;;;162                // Check that no peers marked for deletion are left.
;;;163                if (m_deleting_all
000104  482f              LDR      r0,|L17.452|
000106  7800              LDRB     r0,[r0,#0]  ; m_deleting_all
000108  b318              CBZ      r0,|L17.338|
;;;164                    && (pdb_next_peer_id_get(PM_PEER_ID_INVALID) == PM_PEER_ID_INVALID)
00010a  f64f70ff          MOV      r0,#0xffff
00010e  f7fffffe          BL       pdb_next_peer_id_get
000112  f64f71ff          MOV      r1,#0xffff
000116  4288              CMP      r0,r1
000118  d11b              BNE      |L17.338|
;;;165                    && (pdb_next_deleted_peer_id_get(PM_PEER_ID_INVALID) == PM_PEER_ID_INVALID))
00011a  f7fffffe          BL       pdb_next_deleted_peer_id_get
00011e  f64f71ff          MOV      r1,#0xffff
000122  e000              B        |L17.294|
                  |L17.292|
000124  e03f              B        |L17.422|
                  |L17.294|
000126  4288              CMP      r0,r1
000128  d113              BNE      |L17.338|
;;;166                {
;;;167                    // pm_peers_delete() has been called and this is the last peer to be deleted.
;;;168                    m_deleting_all = false;
00012a  2000              MOVS     r0,#0
00012c  4925              LDR      r1,|L17.452|
00012e  7008              STRB     r0,[r1,#0]
;;;169    
;;;170                    pm_evt_t pm_delete_all_evt;
;;;171                    memset(&pm_delete_all_evt, 0, sizeof(pm_evt_t));
000130  2114              MOVS     r1,#0x14
000132  a801              ADD      r0,sp,#4
000134  f7fffffe          BL       __aeabi_memclr4
;;;172                    pm_delete_all_evt.evt_id      = PM_EVT_PEERS_DELETE_SUCCEEDED;
000138  200b              MOVS     r0,#0xb
00013a  f88d0004          STRB     r0,[sp,#4]
;;;173                    pm_delete_all_evt.peer_id     = PM_PEER_ID_INVALID;
00013e  f64f70ff          MOV      r0,#0xffff
000142  f8ad0008          STRH     r0,[sp,#8]
;;;174                    pm_delete_all_evt.conn_handle = BLE_CONN_HANDLE_INVALID;
000146  f8ad0006          STRH     r0,[sp,#6]
;;;175    
;;;176                    evt_send(&pm_delete_all_evt);
00014a  a801              ADD      r0,sp,#4
00014c  f7fffffe          BL       evt_send
;;;177                }
000150  bf00              NOP      
                  |L17.338|
;;;178                break;
000152  e02a              B        |L17.426|
;;;179    
;;;180            case PDB_EVT_PEER_FREE_FAILED:
;;;181                pm_evt.evt_id = PM_EVT_PEER_DELETE_FAILED;
000154  200a              MOVS     r0,#0xa
000156  f88d0018          STRB     r0,[sp,#0x18]
;;;182                pm_evt.params.peer_delete_failed.error
00015a  68a0              LDR      r0,[r4,#8]
00015c  9008              STR      r0,[sp,#0x20]
;;;183                                                    = p_pdb_evt->params.peer_free_failed_evt.err_code;
;;;184                if (m_deleting_all)
00015e  4819              LDR      r0,|L17.452|
000160  7800              LDRB     r0,[r0,#0]  ; m_deleting_all
000162  b1a8              CBZ      r0,|L17.400|
;;;185                {
;;;186                    // pm_peers_delete() has been called and has thus failed.
;;;187    
;;;188                    m_deleting_all = false;
000164  2000              MOVS     r0,#0
000166  4917              LDR      r1,|L17.452|
000168  7008              STRB     r0,[r1,#0]
;;;189    
;;;190                    pm_evt_t pm_delete_all_evt;
;;;191                    memset(&pm_delete_all_evt, 0, sizeof(pm_evt_t));
00016a  2114              MOVS     r1,#0x14
00016c  a801              ADD      r0,sp,#4
00016e  f7fffffe          BL       __aeabi_memclr4
;;;192                    pm_delete_all_evt.evt_id      = PM_EVT_PEERS_DELETE_FAILED;
000172  200c              MOVS     r0,#0xc
000174  f88d0004          STRB     r0,[sp,#4]
;;;193                    pm_delete_all_evt.peer_id     = PM_PEER_ID_INVALID;
000178  f64f70ff          MOV      r0,#0xffff
00017c  f8ad0008          STRH     r0,[sp,#8]
;;;194                    pm_delete_all_evt.conn_handle = BLE_CONN_HANDLE_INVALID;
000180  f8ad0006          STRH     r0,[sp,#6]
;;;195                    pm_delete_all_evt.params.peers_delete_failed_evt.error
000184  68a0              LDR      r0,[r4,#8]
000186  9003              STR      r0,[sp,#0xc]
;;;196                                                  = p_pdb_evt->params.peer_free_failed_evt.err_code;
;;;197    
;;;198                    evt_send(&pm_delete_all_evt);
000188  a801              ADD      r0,sp,#4
00018a  f7fffffe          BL       evt_send
;;;199                }
00018e  bf00              NOP      
                  |L17.400|
;;;200                break;
000190  e00b              B        |L17.426|
;;;201    
;;;202            case PDB_EVT_COMPRESSED:
;;;203                send_evt = false;
000192  2500              MOVS     r5,#0
;;;204                // Do nothing
;;;205                break;
000194  e009              B        |L17.426|
;;;206    
;;;207            case PDB_EVT_ERROR_NO_MEM:
;;;208                pm_evt.evt_id = PM_EVT_STORAGE_FULL;
000196  2005              MOVS     r0,#5
000198  f88d0018          STRB     r0,[sp,#0x18]
;;;209                break;
00019c  e005              B        |L17.426|
;;;210    
;;;211            case PDB_EVT_ERROR_UNEXPECTED:
;;;212                pm_evt.evt_id = PM_EVT_ERROR_UNEXPECTED;
00019e  2006              MOVS     r0,#6
0001a0  f88d0018          STRB     r0,[sp,#0x18]
;;;213                break;
0001a4  e001              B        |L17.426|
                  |L17.422|
;;;214    
;;;215            default:
;;;216                send_evt = false;
0001a6  2500              MOVS     r5,#0
;;;217                break;
0001a8  bf00              NOP      
                  |L17.426|
0001aa  bf00              NOP                            ;106
;;;218        }
;;;219    
;;;220        if (send_evt)
0001ac  b115              CBZ      r5,|L17.436|
;;;221        {
;;;222            evt_send(&pm_evt);
0001ae  a806              ADD      r0,sp,#0x18
0001b0  f7fffffe          BL       evt_send
                  |L17.436|
;;;223        }
;;;224    }
0001b4  b00b              ADD      sp,sp,#0x2c
0001b6  bd30              POP      {r4,r5,pc}
;;;225    
                          ENDP

                  |L17.440|
                          DCD      m_peer_rank_token
                  |L17.444|
                          DCD      m_highest_ranked_peer
                  |L17.448|
                          DCD      m_current_highest_peer_rank
                  |L17.452|
                          DCD      m_deleting_all

                          AREA ||i.pm_peer_count||, CODE, READONLY, ALIGN=2

                  pm_peer_count PROC
;;;736    
;;;737    uint32_t pm_peer_count(void)
000000  b510              PUSH     {r4,lr}
;;;738    {
;;;739        if (!MODULE_INITIALIZED)
000002  4804              LDR      r0,|L18.20|
000004  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000006  b908              CBNZ     r0,|L18.12|
;;;740        {
;;;741            return 0;
000008  2000              MOVS     r0,#0
                  |L18.10|
;;;742        }
;;;743        return pdb_n_peers();
;;;744    }
00000a  bd10              POP      {r4,pc}
                  |L18.12|
00000c  f7fffffe          BL       pdb_n_peers
000010  e7fb              B        |L18.10|
;;;745    
                          ENDP

000012  0000              DCW      0x0000
                  |L18.20|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_data_app_data_load||, CODE, READONLY, ALIGN=1

                  pm_peer_data_app_data_load PROC
;;;805    
;;;806    ret_code_t pm_peer_data_app_data_load(pm_peer_id_t       peer_id,
000000  b570              PUSH     {r4-r6,lr}
;;;807                                          uint8_t          * p_data,
;;;808                                          uint16_t         * p_length)
;;;809    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;810        return pm_peer_data_load(peer_id,
000008  462b              MOV      r3,r5
00000a  4622              MOV      r2,r4
00000c  2104              MOVS     r1,#4
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       pm_peer_data_load
;;;811                                 PM_PEER_DATA_ID_APPLICATION,
;;;812                                 p_data,
;;;813                                 p_length);
;;;814    }
000014  bd70              POP      {r4-r6,pc}
;;;815    
                          ENDP


                          AREA ||i.pm_peer_data_app_data_store||, CODE, READONLY, ALIGN=1

                  pm_peer_data_app_data_store PROC
;;;864    
;;;865    ret_code_t pm_peer_data_app_data_store(pm_peer_id_t       peer_id,
000000  b5f8              PUSH     {r3-r7,lr}
;;;866                                           uint8_t    const * p_data,
;;;867                                           uint16_t           length,
;;;868                                           pm_store_token_t * p_token)
;;;869    {
000002  4607              MOV      r7,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
000008  461e              MOV      r6,r3
;;;870        return pm_peer_data_store(peer_id,
00000a  462b              MOV      r3,r5
00000c  4622              MOV      r2,r4
00000e  2104              MOVS     r1,#4
000010  4638              MOV      r0,r7
000012  9600              STR      r6,[sp,#0]
000014  f7fffffe          BL       pm_peer_data_store
;;;871                                  PM_PEER_DATA_ID_APPLICATION,
;;;872                                  p_data,
;;;873                                  length,
;;;874                                  p_token);
;;;875    }
000018  bdf8              POP      {r3-r7,pc}
;;;876    
                          ENDP


                          AREA ||i.pm_peer_data_bonding_load||, CODE, READONLY, ALIGN=1

                  pm_peer_data_bonding_load PROC
;;;783    
;;;784    ret_code_t pm_peer_data_bonding_load(pm_peer_id_t             peer_id,
000000  b538              PUSH     {r3-r5,lr}
;;;785                                         pm_peer_data_bonding_t * p_data)
;;;786    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;787        uint16_t length = sizeof(pm_peer_data_bonding_t);
000006  2050              MOVS     r0,#0x50
000008  9000              STR      r0,[sp,#0]
;;;788        return pm_peer_data_load(peer_id,
00000a  466b              MOV      r3,sp
00000c  4622              MOV      r2,r4
00000e  2107              MOVS     r1,#7
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       pm_peer_data_load
;;;789                                 PM_PEER_DATA_ID_BONDING,
;;;790                                 p_data,
;;;791                                 &length);
;;;792    }
000016  bd38              POP      {r3-r5,pc}
;;;793    
                          ENDP


                          AREA ||i.pm_peer_data_bonding_store||, CODE, READONLY, ALIGN=1

                  pm_peer_data_bonding_store PROC
;;;839    
;;;840    ret_code_t pm_peer_data_bonding_store(pm_peer_id_t                   peer_id,
000000  b5f8              PUSH     {r3-r7,lr}
;;;841                                          pm_peer_data_bonding_t const * p_data,
;;;842                                          pm_store_token_t             * p_token)
;;;843    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;844        return pm_peer_data_store(peer_id,
000008  2350              MOVS     r3,#0x50
00000a  4622              MOV      r2,r4
00000c  2107              MOVS     r1,#7
00000e  4630              MOV      r0,r6
000010  9500              STR      r5,[sp,#0]
000012  f7fffffe          BL       pm_peer_data_store
;;;845                                  PM_PEER_DATA_ID_BONDING,
;;;846                                  p_data,
;;;847                                  ALIGN_NUM(4, sizeof(pm_peer_data_bonding_t)),
;;;848                                  p_token);
;;;849    }
000016  bdf8              POP      {r3-r7,pc}
;;;850    
                          ENDP


                          AREA ||i.pm_peer_data_delete||, CODE, READONLY, ALIGN=2

                  pm_peer_data_delete PROC
;;;877    
;;;878    ret_code_t pm_peer_data_delete(pm_peer_id_t peer_id, pm_peer_data_id_t data_id)
000000  b570              PUSH     {r4-r6,lr}
;;;879    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;880        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4807              LDR      r0,|L23.40|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L23.18|
00000e  2008              MOVS     r0,#8
                  |L23.16|
;;;881    
;;;882        if (data_id == PM_PEER_DATA_ID_BONDING)
;;;883        {
;;;884            return NRF_ERROR_INVALID_PARAM;
;;;885        }
;;;886    
;;;887        return pdb_clear(peer_id, data_id);
;;;888    }
000010  bd70              POP      {r4-r6,pc}
                  |L23.18|
000012  bf00              NOP                            ;880
000014  2c07              CMP      r4,#7                 ;882
000016  d101              BNE      |L23.28|
000018  2007              MOVS     r0,#7                 ;884
00001a  e7f9              B        |L23.16|
                  |L23.28|
00001c  4621              MOV      r1,r4                 ;887
00001e  4628              MOV      r0,r5                 ;887
000020  f7fffffe          BL       pdb_clear
000024  e7f4              B        |L23.16|
;;;889    
                          ENDP

000026  0000              DCW      0x0000
                  |L23.40|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_data_load||, CODE, READONLY, ALIGN=2

                  pm_peer_data_load PROC
;;;756    
;;;757    ret_code_t pm_peer_data_load(pm_peer_id_t       peer_id,
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;758                                 pm_peer_data_id_t  data_id,
;;;759                                 void             * p_data,
;;;760                                 uint16_t         * p_length)
;;;761    {
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
00000a  461c              MOV      r4,r3
;;;762        VERIFY_MODULE_INITIALIZED();
00000c  bf00              NOP      
00000e  481d              LDR      r0,|L24.132|
000010  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000012  b910              CBNZ     r0,|L24.26|
000014  2008              MOVS     r0,#8
                  |L24.22|
;;;763        VERIFY_PARAM_NOT_NULL(p_data);
;;;764        VERIFY_PARAM_NOT_NULL(p_length);
;;;765        if (ALIGN_NUM(4, *p_length) != *p_length)
;;;766        {
;;;767            return NRF_ERROR_INVALID_PARAM;
;;;768        }
;;;769    
;;;770        pm_peer_data_t peer_data;
;;;771        memset(&peer_data, 0, sizeof(peer_data));
;;;772        peer_data.length_words = BYTES_TO_WORDS(*p_length);
;;;773        peer_data.data_id      = data_id;
;;;774        peer_data.p_all_data   = p_data;
;;;775    
;;;776        ret_code_t err_code = pdb_peer_data_load(peer_id, data_id, &peer_data);
;;;777    
;;;778        *p_length = peer_data.length_words * BYTES_PER_WORD;
;;;779    
;;;780        return err_code;
;;;781    }
000016  e8bd81fc          POP      {r2-r8,pc}
                  |L24.26|
00001a  bf00              NOP                            ;762
00001c  bf00              NOP                            ;763
00001e  b90d              CBNZ     r5,|L24.36|
000020  200e              MOVS     r0,#0xe               ;763
000022  e7f8              B        |L24.22|
                  |L24.36|
000024  bf00              NOP                            ;763
000026  bf00              NOP                            ;764
000028  b90c              CBNZ     r4,|L24.46|
00002a  200e              MOVS     r0,#0xe               ;764
00002c  e7f3              B        |L24.22|
                  |L24.46|
00002e  bf00              NOP                            ;764
000030  8821              LDRH     r1,[r4,#0]            ;765
000032  1e48              SUBS     r0,r1,#1              ;765
000034  17c1              ASRS     r1,r0,#31             ;765
000036  eb007191          ADD      r1,r0,r1,LSR #30      ;765
00003a  1089              ASRS     r1,r1,#2              ;765
00003c  eba00281          SUB      r2,r0,r1,LSL #2       ;765
000040  8821              LDRH     r1,[r4,#0]            ;765
000042  1cc9              ADDS     r1,r1,#3              ;765
000044  1a89              SUBS     r1,r1,r2              ;765
000046  8822              LDRH     r2,[r4,#0]            ;765
000048  4291              CMP      r1,r2                 ;765
00004a  d001              BEQ      |L24.80|
00004c  2007              MOVS     r0,#7                 ;767
00004e  e7e2              B        |L24.22|
                  |L24.80|
000050  2000              MOVS     r0,#0                 ;771
000052  9000              STR      r0,[sp,#0]            ;771
000054  9001              STR      r0,[sp,#4]            ;771
000056  8820              LDRH     r0,[r4,#0]            ;772
000058  1cc0              ADDS     r0,r0,#3              ;772
00005a  1080              ASRS     r0,r0,#2              ;772
00005c  f8ad0000          STRH     r0,[sp,#0]            ;772
000060  f88d6002          STRB     r6,[sp,#2]            ;773
000064  9501              STR      r5,[sp,#4]            ;774
000066  466a              MOV      r2,sp                 ;776
000068  4631              MOV      r1,r6                 ;776
00006a  4638              MOV      r0,r7                 ;776
00006c  f7fffffe          BL       pdb_peer_data_load
000070  4680              MOV      r8,r0                 ;776
000072  f8bd0000          LDRH     r0,[sp,#0]            ;778
000076  f64f71ff          MOV      r1,#0xffff            ;778
00007a  ea010080          AND      r0,r1,r0,LSL #2       ;778
00007e  8020              STRH     r0,[r4,#0]            ;778
000080  4640              MOV      r0,r8                 ;780
000082  e7c8              B        |L24.22|
;;;782    
                          ENDP

                  |L24.132|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_data_remote_db_load||, CODE, READONLY, ALIGN=1

                  pm_peer_data_remote_db_load PROC
;;;794    
;;;795    ret_code_t pm_peer_data_remote_db_load(pm_peer_id_t        peer_id,
000000  b570              PUSH     {r4-r6,lr}
;;;796                                           ble_gatt_db_srv_t * p_data,
;;;797                                           uint16_t          * p_length)
;;;798    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;799        return pm_peer_data_load(peer_id,
000008  462b              MOV      r3,r5
00000a  4622              MOV      r2,r4
00000c  2105              MOVS     r1,#5
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       pm_peer_data_load
;;;800                                 PM_PEER_DATA_ID_GATT_REMOTE,
;;;801                                 p_data,
;;;802                                 p_length);
;;;803    }
000014  bd70              POP      {r4-r6,pc}
;;;804    
                          ENDP


                          AREA ||i.pm_peer_data_remote_db_store||, CODE, READONLY, ALIGN=1

                  pm_peer_data_remote_db_store PROC
;;;851    
;;;852    ret_code_t pm_peer_data_remote_db_store(pm_peer_id_t              peer_id,
000000  b5f8              PUSH     {r3-r7,lr}
;;;853                                            ble_gatt_db_srv_t const * p_data,
;;;854                                            uint16_t                  length,
;;;855                                            pm_store_token_t        * p_token)
;;;856    {
000002  4607              MOV      r7,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
000008  461e              MOV      r6,r3
;;;857        return pm_peer_data_store(peer_id,
00000a  462b              MOV      r3,r5
00000c  4622              MOV      r2,r4
00000e  2105              MOVS     r1,#5
000010  4638              MOV      r0,r7
000012  9600              STR      r6,[sp,#0]
000014  f7fffffe          BL       pm_peer_data_store
;;;858                                  PM_PEER_DATA_ID_GATT_REMOTE,
;;;859                                  p_data,
;;;860                                  length,
;;;861                                  p_token);
;;;862    }
000018  bdf8              POP      {r3-r7,pc}
;;;863    
                          ENDP


                          AREA ||i.pm_peer_data_store||, CODE, READONLY, ALIGN=2

                  pm_peer_data_store PROC
;;;816    
;;;817    ret_code_t pm_peer_data_store(pm_peer_id_t       peer_id,
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;818                                  pm_peer_data_id_t  data_id,
;;;819                                  void       const * p_data,
;;;820                                  uint16_t           length,
;;;821                                  pm_store_token_t * p_token)
;;;822    {
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
00000a  461c              MOV      r4,r3
00000c  f8dd8020          LDR      r8,[sp,#0x20]
;;;823        VERIFY_MODULE_INITIALIZED();
000010  bf00              NOP      
000012  4814              LDR      r0,|L27.100|
000014  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000016  b910              CBNZ     r0,|L27.30|
000018  2008              MOVS     r0,#8
                  |L27.26|
;;;824        VERIFY_PARAM_NOT_NULL(p_data);
;;;825        if (ALIGN_NUM(4, length) != length)
;;;826        {
;;;827            return NRF_ERROR_INVALID_PARAM;
;;;828        }
;;;829    
;;;830        pm_peer_data_flash_t peer_data;
;;;831        memset(&peer_data, 0, sizeof(peer_data));
;;;832        peer_data.length_words = BYTES_TO_WORDS(length);
;;;833        peer_data.data_id      = data_id;
;;;834        peer_data.p_all_data   = p_data;
;;;835    
;;;836        return pdb_raw_store(peer_id, &peer_data, p_token);
;;;837    }
00001a  e8bd81fc          POP      {r2-r8,pc}
                  |L27.30|
00001e  bf00              NOP                            ;823
000020  bf00              NOP                            ;824
000022  b90d              CBNZ     r5,|L27.40|
000024  200e              MOVS     r0,#0xe               ;824
000026  e7f8              B        |L27.26|
                  |L27.40|
000028  bf00              NOP                            ;824
00002a  1e60              SUBS     r0,r4,#1              ;825
00002c  17c1              ASRS     r1,r0,#31             ;825
00002e  eb007191          ADD      r1,r0,r1,LSR #30      ;825
000032  1089              ASRS     r1,r1,#2              ;825
000034  eba00281          SUB      r2,r0,r1,LSL #2       ;825
000038  1ce1              ADDS     r1,r4,#3              ;825
00003a  1a89              SUBS     r1,r1,r2              ;825
00003c  42a1              CMP      r1,r4                 ;825
00003e  d001              BEQ      |L27.68|
000040  2007              MOVS     r0,#7                 ;827
000042  e7ea              B        |L27.26|
                  |L27.68|
000044  2000              MOVS     r0,#0                 ;831
000046  9000              STR      r0,[sp,#0]            ;831
000048  9001              STR      r0,[sp,#4]            ;831
00004a  1ce0              ADDS     r0,r4,#3              ;832
00004c  1080              ASRS     r0,r0,#2              ;832
00004e  f8ad0000          STRH     r0,[sp,#0]            ;832
000052  f88d6002          STRB     r6,[sp,#2]            ;833
000056  9501              STR      r5,[sp,#4]            ;834
000058  4642              MOV      r2,r8                 ;836
00005a  4669              MOV      r1,sp                 ;836
00005c  4638              MOV      r0,r7                 ;836
00005e  f7fffffe          BL       pdb_raw_store
000062  e7da              B        |L27.26|
;;;838    
                          ENDP

                  |L27.100|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_delete||, CODE, READONLY, ALIGN=2

                  pm_peer_delete PROC
;;;951    
;;;952    ret_code_t pm_peer_delete(pm_peer_id_t peer_id)
000000  b510              PUSH     {r4,lr}
;;;953    {
000002  4604              MOV      r4,r0
;;;954        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4805              LDR      r0,|L28.28|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L28.16|
00000c  2008              MOVS     r0,#8
                  |L28.14|
;;;955    
;;;956        return im_peer_free(peer_id);
;;;957    }
00000e  bd10              POP      {r4,pc}
                  |L28.16|
000010  bf00              NOP                            ;954
000012  4620              MOV      r0,r4                 ;956
000014  f7fffffe          BL       im_peer_free
000018  e7f9              B        |L28.14|
;;;958    
                          ENDP

00001a  0000              DCW      0x0000
                  |L28.28|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_id_get||, CODE, READONLY, ALIGN=2

                  pm_peer_id_get PROC
;;;727    
;;;728    ret_code_t pm_peer_id_get(uint16_t conn_handle, pm_peer_id_t * p_peer_id)
000000  b570              PUSH     {r4-r6,lr}
;;;729    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;730        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4808              LDR      r0,|L29.44|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L29.18|
00000e  2008              MOVS     r0,#8
                  |L29.16|
;;;731        VERIFY_PARAM_NOT_NULL(p_peer_id);
;;;732        *p_peer_id = im_peer_id_get_by_conn_handle(conn_handle);
;;;733        return NRF_SUCCESS;
;;;734    }
000010  bd70              POP      {r4-r6,pc}
                  |L29.18|
000012  bf00              NOP                            ;730
000014  bf00              NOP                            ;731
000016  b90c              CBNZ     r4,|L29.28|
000018  200e              MOVS     r0,#0xe               ;731
00001a  e7f9              B        |L29.16|
                  |L29.28|
00001c  bf00              NOP                            ;731
00001e  4628              MOV      r0,r5                 ;732
000020  f7fffffe          BL       im_peer_id_get_by_conn_handle
000024  8020              STRH     r0,[r4,#0]            ;732
000026  2000              MOVS     r0,#0                 ;733
000028  e7f2              B        |L29.16|
;;;735    
                          ENDP

00002a  0000              DCW      0x0000
                  |L29.44|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_new||, CODE, READONLY, ALIGN=2

                  pm_peer_new PROC
;;;890    
;;;891    ret_code_t pm_peer_new(pm_peer_id_t           * p_new_peer_id,
000000  b5fe              PUSH     {r1-r7,lr}
;;;892                           pm_peer_data_bonding_t * p_bonding_data,
;;;893                           pm_store_token_t       * p_token)
;;;894    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4617              MOV      r7,r2
;;;895        ret_code_t           err_code;
;;;896        pm_peer_id_t         peer_id;
;;;897        pm_peer_data_flash_t peer_data;
;;;898    
;;;899        VERIFY_MODULE_INITIALIZED();
000008  bf00              NOP      
00000a  4826              LDR      r0,|L30.164|
00000c  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000e  b908              CBNZ     r0,|L30.20|
000010  2008              MOVS     r0,#8
                  |L30.18|
;;;900        VERIFY_PARAM_NOT_NULL(p_bonding_data);
;;;901        VERIFY_PARAM_NOT_NULL(p_new_peer_id);
;;;902    
;;;903        memset(&peer_data, 0, sizeof(pm_peer_data_flash_t));
;;;904    
;;;905        // Search through existing bonds to look for a duplicate.
;;;906        pds_peer_data_iterate_prepare();
;;;907    
;;;908        // @note emdi: should maybe use a critical section, since data is not copied while iterating.
;;;909        while (pds_peer_data_iterate(PM_PEER_DATA_ID_BONDING, &peer_id, &peer_data))
;;;910        {
;;;911            if (im_is_duplicate_bonding_data(p_bonding_data, peer_data.p_bonding_data))
;;;912            {
;;;913                *p_new_peer_id = peer_id;
;;;914                return NRF_SUCCESS;
;;;915            }
;;;916        }
;;;917    
;;;918        // If no duplicate data is found, prepare to write a new bond to flash.
;;;919    
;;;920        *p_new_peer_id = pdb_peer_allocate();
;;;921    
;;;922        if (*p_new_peer_id == PM_PEER_ID_INVALID)
;;;923        {
;;;924            return NRF_ERROR_NO_MEM;
;;;925        }
;;;926    
;;;927        memset(&peer_data, 0, sizeof(pm_peer_data_flash_t));
;;;928    
;;;929        peer_data.data_id        = PM_PEER_DATA_ID_BONDING;
;;;930        peer_data.p_bonding_data = p_bonding_data;
;;;931        peer_data.length_words   = BYTES_TO_WORDS(sizeof(pm_peer_data_bonding_t));
;;;932    
;;;933        err_code = pdb_raw_store(*p_new_peer_id, &peer_data, p_token);
;;;934    
;;;935        if (err_code != NRF_SUCCESS)
;;;936        {
;;;937            if (im_peer_free(*p_new_peer_id) != NRF_SUCCESS)
;;;938            {
;;;939                return NRF_ERROR_INTERNAL;
;;;940            }
;;;941    
;;;942            // NRF_ERROR_STORAGE_FULL, if no space in flash.
;;;943            // NRF_ERROR_BUSY,         if flash filesystem was busy.
;;;944            // NRF_ERROR_INTENRAL,     on internal error.
;;;945            return err_code;
;;;946        }
;;;947    
;;;948        return NRF_SUCCESS;
;;;949    }
000012  bdfe              POP      {r1-r7,pc}
                  |L30.20|
000014  bf00              NOP                            ;899
000016  bf00              NOP                            ;900
000018  b90d              CBNZ     r5,|L30.30|
00001a  200e              MOVS     r0,#0xe               ;900
00001c  e7f9              B        |L30.18|
                  |L30.30|
00001e  bf00              NOP                            ;900
000020  bf00              NOP                            ;901
000022  b90c              CBNZ     r4,|L30.40|
000024  200e              MOVS     r0,#0xe               ;901
000026  e7f4              B        |L30.18|
                  |L30.40|
000028  bf00              NOP                            ;901
00002a  2000              MOVS     r0,#0                 ;903
00002c  9000              STR      r0,[sp,#0]            ;903
00002e  9001              STR      r0,[sp,#4]            ;903
000030  f7fffffe          BL       pds_peer_data_iterate_prepare
000034  e009              B        |L30.74|
                  |L30.54|
000036  4628              MOV      r0,r5                 ;911
000038  9901              LDR      r1,[sp,#4]            ;911
00003a  f7fffffe          BL       im_is_duplicate_bonding_data
00003e  b120              CBZ      r0,|L30.74|
000040  f8bd0008          LDRH     r0,[sp,#8]            ;913
000044  8020              STRH     r0,[r4,#0]            ;913
000046  2000              MOVS     r0,#0                 ;914
000048  e7e3              B        |L30.18|
                  |L30.74|
00004a  466a              MOV      r2,sp                 ;909
00004c  a902              ADD      r1,sp,#8              ;909
00004e  2007              MOVS     r0,#7                 ;909
000050  f7fffffe          BL       pds_peer_data_iterate
000054  2800              CMP      r0,#0                 ;909
000056  d1ee              BNE      |L30.54|
000058  f7fffffe          BL       pdb_peer_allocate
00005c  8020              STRH     r0,[r4,#0]            ;920
00005e  8820              LDRH     r0,[r4,#0]            ;922
000060  f64f71ff          MOV      r1,#0xffff            ;922
000064  4288              CMP      r0,r1                 ;922
000066  d101              BNE      |L30.108|
000068  2004              MOVS     r0,#4                 ;924
00006a  e7d2              B        |L30.18|
                  |L30.108|
00006c  2000              MOVS     r0,#0                 ;927
00006e  9000              STR      r0,[sp,#0]            ;927
000070  9001              STR      r0,[sp,#4]            ;927
000072  2007              MOVS     r0,#7                 ;929
000074  f88d0002          STRB     r0,[sp,#2]            ;929
000078  9501              STR      r5,[sp,#4]            ;930
00007a  2014              MOVS     r0,#0x14              ;931
00007c  f8ad0000          STRH     r0,[sp,#0]            ;931
000080  8820              LDRH     r0,[r4,#0]            ;933
000082  463a              MOV      r2,r7                 ;933
000084  4669              MOV      r1,sp                 ;933
000086  f7fffffe          BL       pdb_raw_store
00008a  4606              MOV      r6,r0                 ;933
00008c  b13e              CBZ      r6,|L30.158|
00008e  8820              LDRH     r0,[r4,#0]            ;937
000090  f7fffffe          BL       im_peer_free
000094  b108              CBZ      r0,|L30.154|
000096  2003              MOVS     r0,#3                 ;939
000098  e7bb              B        |L30.18|
                  |L30.154|
00009a  4630              MOV      r0,r6                 ;945
00009c  e7b9              B        |L30.18|
                  |L30.158|
00009e  2000              MOVS     r0,#0                 ;948
0000a0  e7b7              B        |L30.18|
;;;950    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L30.164|
                          DCD      m_module_initialized

                          AREA ||i.pm_peer_rank_highest||, CODE, READONLY, ALIGN=2

                  pm_peer_rank_highest PROC
;;;1083   
;;;1084   ret_code_t pm_peer_rank_highest(pm_peer_id_t peer_id)
000000  b530              PUSH     {r4,r5,lr}
;;;1085   {
000002  b087              SUB      sp,sp,#0x1c
000004  4605              MOV      r5,r0
;;;1086       VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  482a              LDR      r0,|L31.180|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b910              CBNZ     r0,|L31.20|
00000e  2008              MOVS     r0,#8
                  |L31.16|
;;;1087   
;;;1088       ret_code_t err_code;
;;;1089       //lint -save -e65 -e64
;;;1090       pm_peer_data_flash_t peer_data   = {.length_words = BYTES_TO_WORDS(sizeof(m_current_highest_peer_rank)),
;;;1091                                           .data_id      = PM_PEER_DATA_ID_PEER_RANK,
;;;1092                                           .p_peer_rank  = &m_current_highest_peer_rank};
;;;1093       //lint -restore
;;;1094   
;;;1095   
;;;1096       if (!m_peer_rank_initialized)
;;;1097       {
;;;1098           rank_init();
;;;1099       }
;;;1100   
;;;1101       if (!m_peer_rank_initialized || (m_peer_rank_token != PM_STORE_TOKEN_INVALID))
;;;1102       {
;;;1103           err_code = NRF_ERROR_BUSY;
;;;1104       }
;;;1105       else
;;;1106       {
;;;1107           if ((peer_id == m_highest_ranked_peer) && (m_current_highest_peer_rank > 0))
;;;1108           {
;;;1109               pm_evt_t pm_evt;
;;;1110   
;;;1111               // The reported peer is already regarded as highest (provided it has an index at all)
;;;1112               err_code = NRF_SUCCESS;
;;;1113   
;;;1114               memset(&pm_evt, 0, sizeof(pm_evt));
;;;1115               pm_evt.evt_id      = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
;;;1116               pm_evt.conn_handle = im_conn_handle_get(peer_id);
;;;1117               pm_evt.peer_id     = peer_id;
;;;1118               pm_evt.params.peer_data_update_succeeded.data_id       = PM_PEER_DATA_ID_PEER_RANK;
;;;1119               pm_evt.params.peer_data_update_succeeded.action        = PM_PEER_DATA_OP_UPDATE;
;;;1120               pm_evt.params.peer_data_update_succeeded.token         = PM_STORE_TOKEN_INVALID;
;;;1121               pm_evt.params.peer_data_update_succeeded.flash_changed = false;
;;;1122   
;;;1123               evt_send(&pm_evt);
;;;1124           }
;;;1125           else
;;;1126           {
;;;1127               m_current_highest_peer_rank += 1;
;;;1128               err_code = pdb_raw_store(peer_id, &peer_data, &m_peer_rank_token);
;;;1129               if (err_code != NRF_SUCCESS)
;;;1130               {
;;;1131                   m_peer_rank_token    = PM_STORE_TOKEN_INVALID;
;;;1132                   m_current_highest_peer_rank -= 1;
;;;1133                   {
;;;1134                   if ((err_code != NRF_ERROR_BUSY) && (err_code != NRF_ERROR_STORAGE_FULL))
;;;1135                       err_code = NRF_ERROR_INTERNAL;
;;;1136                   }
;;;1137               }
;;;1138           }
;;;1139       }
;;;1140       return err_code;
;;;1141   }
000010  b007              ADD      sp,sp,#0x1c
000012  bd30              POP      {r4,r5,pc}
                  |L31.20|
000014  bf00              NOP                            ;1086
000016  4928              LDR      r1,|L31.184|
000018  c903              LDM      r1,{r0,r1}            ;1090
00001a  e9cd0105          STRD     r0,r1,[sp,#0x14]      ;1090
00001e  4827              LDR      r0,|L31.188|
000020  7800              LDRB     r0,[r0,#0]            ;1096  ; m_peer_rank_initialized
000022  b908              CBNZ     r0,|L31.40|
000024  f7fffffe          BL       rank_init
                  |L31.40|
000028  4824              LDR      r0,|L31.188|
00002a  7800              LDRB     r0,[r0,#0]            ;1101  ; m_peer_rank_initialized
00002c  b110              CBZ      r0,|L31.52|
00002e  4824              LDR      r0,|L31.192|
000030  6800              LDR      r0,[r0,#0]            ;1101  ; m_peer_rank_token
000032  b108              CBZ      r0,|L31.56|
                  |L31.52|
000034  2411              MOVS     r4,#0x11              ;1103
000036  e03b              B        |L31.176|
                  |L31.56|
000038  4822              LDR      r0,|L31.196|
00003a  8800              LDRH     r0,[r0,#0]            ;1107  ; m_highest_ranked_peer
00003c  4285              CMP      r5,r0                 ;1107
00003e  d11e              BNE      |L31.126|
000040  4821              LDR      r0,|L31.200|
000042  6800              LDR      r0,[r0,#0]            ;1107  ; m_current_highest_peer_rank
000044  b1d8              CBZ      r0,|L31.126|
000046  2400              MOVS     r4,#0                 ;1112
000048  2114              MOVS     r1,#0x14              ;1114
00004a  4668              MOV      r0,sp                 ;1114
00004c  f7fffffe          BL       __aeabi_memclr4
000050  2007              MOVS     r0,#7                 ;1115
000052  f88d0000          STRB     r0,[sp,#0]            ;1115
000056  4628              MOV      r0,r5                 ;1116
000058  f7fffffe          BL       im_conn_handle_get
00005c  f8ad0002          STRH     r0,[sp,#2]            ;1116
000060  f8ad5004          STRH     r5,[sp,#4]            ;1117
000064  2006              MOVS     r0,#6                 ;1118
000066  f88d0008          STRB     r0,[sp,#8]            ;1118
00006a  2100              MOVS     r1,#0                 ;1119
00006c  f88d1009          STRB     r1,[sp,#9]            ;1119
000070  9103              STR      r1,[sp,#0xc]          ;1120
000072  f88d100a          STRB     r1,[sp,#0xa]          ;1121
000076  4668              MOV      r0,sp                 ;1123
000078  f7fffffe          BL       evt_send
00007c  e018              B        |L31.176|
                  |L31.126|
00007e  4812              LDR      r0,|L31.200|
000080  6800              LDR      r0,[r0,#0]            ;1127  ; m_current_highest_peer_rank
000082  1c40              ADDS     r0,r0,#1              ;1127
000084  4910              LDR      r1,|L31.200|
000086  6008              STR      r0,[r1,#0]            ;1127  ; m_current_highest_peer_rank
000088  4a0d              LDR      r2,|L31.192|
00008a  a905              ADD      r1,sp,#0x14           ;1128
00008c  4628              MOV      r0,r5                 ;1128
00008e  f7fffffe          BL       pdb_raw_store
000092  4604              MOV      r4,r0                 ;1128
000094  b164              CBZ      r4,|L31.176|
000096  2000              MOVS     r0,#0                 ;1131
000098  4909              LDR      r1,|L31.192|
00009a  6008              STR      r0,[r1,#0]            ;1131  ; m_peer_rank_token
00009c  480a              LDR      r0,|L31.200|
00009e  6800              LDR      r0,[r0,#0]            ;1132  ; m_current_highest_peer_rank
0000a0  1e40              SUBS     r0,r0,#1              ;1132
0000a2  4909              LDR      r1,|L31.200|
0000a4  6008              STR      r0,[r1,#0]            ;1132  ; m_current_highest_peer_rank
0000a6  2c11              CMP      r4,#0x11              ;1134
0000a8  d002              BEQ      |L31.176|
0000aa  2c86              CMP      r4,#0x86              ;1134
0000ac  d000              BEQ      |L31.176|
0000ae  2403              MOVS     r4,#3                 ;1135
                  |L31.176|
0000b0  4620              MOV      r0,r4                 ;1140
0000b2  e7ad              B        |L31.16|
;;;1142   #endif // NRF_MODULE_ENABLED(PEER_MANAGER)
                          ENDP

                  |L31.180|
                          DCD      m_module_initialized
                  |L31.184|
                          DCD      ||.constdata||+0x8
                  |L31.188|
                          DCD      m_peer_rank_initialized
                  |L31.192|
                          DCD      m_peer_rank_token
                  |L31.196|
                          DCD      m_highest_ranked_peer
                  |L31.200|
                          DCD      m_current_highest_peer_rank

                          AREA ||i.pm_peer_ranks_get||, CODE, READONLY, ALIGN=2

                  pm_peer_ranks_get PROC
;;;996    
;;;997    ret_code_t pm_peer_ranks_get(pm_peer_id_t * p_highest_ranked_peer,
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;998                                 uint32_t     * p_highest_rank,
;;;999                                 pm_peer_id_t * p_lowest_ranked_peer,
;;;1000                                uint32_t     * p_lowest_rank)
;;;1001   {
000004  b085              SUB      sp,sp,#0x14
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
;;;1002       VERIFY_MODULE_INITIALIZED();
00000e  bf00              NOP      
000010  482f              LDR      r0,|L32.208|
000012  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000014  b918              CBNZ     r0,|L32.30|
000016  2008              MOVS     r0,#8
                  |L32.24|
;;;1003   
;;;1004       pm_peer_id_t         peer_id      = pdb_next_peer_id_get(PM_PEER_ID_INVALID);
;;;1005       uint32_t             peer_rank    = 0;
;;;1006       //lint -save -e65 -e64
;;;1007       pm_peer_data_t       peer_data    = {.length_words = BYTES_TO_WORDS(sizeof(peer_rank)),
;;;1008                                            .p_peer_rank  = &peer_rank};
;;;1009       //lint -restore
;;;1010       ret_code_t           err_code     = pdb_peer_data_load(peer_id, PM_PEER_DATA_ID_PEER_RANK, &peer_data);
;;;1011       uint32_t             highest_rank = 0;
;;;1012       uint32_t             lowest_rank  = 0xFFFFFFFF;
;;;1013       pm_peer_id_t         highest_ranked_peer = PM_PEER_ID_INVALID;
;;;1014       pm_peer_id_t         lowest_ranked_peer  = PM_PEER_ID_INVALID;
;;;1015   
;;;1016       if (err_code == NRF_ERROR_INVALID_PARAM)
;;;1017       {
;;;1018           // No peer IDs exist.
;;;1019           return NRF_ERROR_NOT_FOUND;
;;;1020       }
;;;1021   
;;;1022       while ((err_code == NRF_SUCCESS) || (err_code == NRF_ERROR_NOT_FOUND))
;;;1023       {
;;;1024           if (err_code == NRF_ERROR_NOT_FOUND)
;;;1025           {
;;;1026               peer_rank = 0;
;;;1027           }
;;;1028           if (peer_rank >= highest_rank)
;;;1029           {
;;;1030               highest_rank      = peer_rank;
;;;1031               highest_ranked_peer = peer_id;
;;;1032           }
;;;1033           if (peer_rank < lowest_rank)
;;;1034           {
;;;1035               lowest_rank      = peer_rank;
;;;1036               lowest_ranked_peer = peer_id;
;;;1037           }
;;;1038           peer_id = pdb_next_peer_id_get(peer_id);
;;;1039           err_code = pdb_peer_data_load(peer_id, PM_PEER_DATA_ID_PEER_RANK, &peer_data);
;;;1040       }
;;;1041       if (peer_id == PM_PEER_ID_INVALID)
;;;1042       {
;;;1043           err_code = NRF_SUCCESS;
;;;1044           if (p_highest_ranked_peer != NULL)
;;;1045           {
;;;1046               *p_highest_ranked_peer = highest_ranked_peer;
;;;1047           }
;;;1048           if (p_highest_rank != NULL)
;;;1049           {
;;;1050               *p_highest_rank = highest_rank;
;;;1051           }
;;;1052           if (p_lowest_ranked_peer != NULL)
;;;1053           {
;;;1054               *p_lowest_ranked_peer = lowest_ranked_peer;
;;;1055           }
;;;1056           if (p_lowest_rank != NULL)
;;;1057           {
;;;1058               *p_lowest_rank = lowest_rank;
;;;1059           }
;;;1060       }
;;;1061       else
;;;1062       {
;;;1063           err_code = NRF_ERROR_INTERNAL;
;;;1064       }
;;;1065       return err_code;
;;;1066   }
000018  b005              ADD      sp,sp,#0x14
00001a  e8bd8ff0          POP      {r4-r11,pc}
                  |L32.30|
00001e  bf00              NOP                            ;1002
000020  f64f70ff          MOV      r0,#0xffff            ;1004
000024  f7fffffe          BL       pdb_next_peer_id_get
000028  4605              MOV      r5,r0                 ;1004
00002a  2000              MOVS     r0,#0                 ;1005
00002c  9004              STR      r0,[sp,#0x10]         ;1005
00002e  4929              LDR      r1,|L32.212|
000030  c903              LDM      r1,{r0,r1}            ;1007
000032  e9cd0102          STRD     r0,r1,[sp,#8]         ;1007
000036  a804              ADD      r0,sp,#0x10           ;1007
000038  9003              STR      r0,[sp,#0xc]          ;1007
00003a  aa02              ADD      r2,sp,#8              ;1010
00003c  2106              MOVS     r1,#6                 ;1010
00003e  4628              MOV      r0,r5                 ;1010
000040  f7fffffe          BL       pdb_peer_data_load
000044  4604              MOV      r4,r0                 ;1010
000046  f04f0a00          MOV      r10,#0                ;1011
00004a  f04f3bff          MOV      r11,#0xffffffff       ;1012
00004e  f64f70ff          MOV      r0,#0xffff            ;1013
000052  9001              STR      r0,[sp,#4]            ;1013
000054  9000              STR      r0,[sp,#0]            ;1014
000056  2c07              CMP      r4,#7                 ;1016
000058  d101              BNE      |L32.94|
00005a  2005              MOVS     r0,#5                 ;1019
00005c  e7dc              B        |L32.24|
                  |L32.94|
00005e  e019              B        |L32.148|
                  |L32.96|
000060  2c05              CMP      r4,#5                 ;1024
000062  d101              BNE      |L32.104|
000064  2000              MOVS     r0,#0                 ;1026
000066  9004              STR      r0,[sp,#0x10]         ;1026
                  |L32.104|
000068  9804              LDR      r0,[sp,#0x10]         ;1028
00006a  4550              CMP      r0,r10                ;1028
00006c  d302              BCC      |L32.116|
00006e  f8dda010          LDR      r10,[sp,#0x10]        ;1030
000072  9501              STR      r5,[sp,#4]            ;1031
                  |L32.116|
000074  9804              LDR      r0,[sp,#0x10]         ;1033
000076  4558              CMP      r0,r11                ;1033
000078  d202              BCS      |L32.128|
00007a  f8ddb010          LDR      r11,[sp,#0x10]        ;1035
00007e  9500              STR      r5,[sp,#0]            ;1036
                  |L32.128|
000080  4628              MOV      r0,r5                 ;1038
000082  f7fffffe          BL       pdb_next_peer_id_get
000086  4605              MOV      r5,r0                 ;1038
000088  aa02              ADD      r2,sp,#8              ;1039
00008a  2106              MOVS     r1,#6                 ;1039
00008c  4628              MOV      r0,r5                 ;1039
00008e  f7fffffe          BL       pdb_peer_data_load
000092  4604              MOV      r4,r0                 ;1039
                  |L32.148|
000094  2c00              CMP      r4,#0                 ;1022
000096  d0e3              BEQ      |L32.96|
000098  2c05              CMP      r4,#5                 ;1022
00009a  d0e1              BEQ      |L32.96|
00009c  f64f70ff          MOV      r0,#0xffff            ;1041
0000a0  4285              CMP      r5,r0                 ;1041
0000a2  d112              BNE      |L32.202|
0000a4  2400              MOVS     r4,#0                 ;1043
0000a6  b10e              CBZ      r6,|L32.172|
0000a8  9801              LDR      r0,[sp,#4]            ;1046
0000aa  8030              STRH     r0,[r6,#0]            ;1046
                  |L32.172|
0000ac  b10f              CBZ      r7,|L32.178|
0000ae  f8c7a000          STR      r10,[r7,#0]           ;1050
                  |L32.178|
0000b2  f1b80f00          CMP      r8,#0                 ;1052
0000b6  d002              BEQ      |L32.190|
0000b8  9800              LDR      r0,[sp,#0]            ;1054
0000ba  f8a80000          STRH     r0,[r8,#0]            ;1054
                  |L32.190|
0000be  f1b90f00          CMP      r9,#0                 ;1056
0000c2  d003              BEQ      |L32.204|
0000c4  f8c9b000          STR      r11,[r9,#0]           ;1058
0000c8  e000              B        |L32.204|
                  |L32.202|
0000ca  2403              MOVS     r4,#3                 ;1063
                  |L32.204|
0000cc  4620              MOV      r0,r4                 ;1065
0000ce  e7a3              B        |L32.24|
;;;1067   
                          ENDP

                  |L32.208|
                          DCD      m_module_initialized
                  |L32.212|
                          DCD      ||.constdata||

                          AREA ||i.pm_peers_delete||, CODE, READONLY, ALIGN=2

                  pm_peers_delete PROC
;;;959    
;;;960    ret_code_t pm_peers_delete(void)
000000  b530              PUSH     {r4,r5,lr}
;;;961    {
000002  b085              SUB      sp,sp,#0x14
;;;962        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  481c              LDR      r0,|L33.120|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b910              CBNZ     r0,|L33.18|
00000c  2008              MOVS     r0,#8
                  |L33.14|
;;;963    
;;;964        m_deleting_all = true;
;;;965    
;;;966        pm_peer_id_t current_peer_id = pdb_next_peer_id_get(PM_PEER_ID_INVALID);
;;;967    
;;;968        if (current_peer_id == PM_PEER_ID_INVALID)
;;;969        {
;;;970            // No peers bonded.
;;;971            m_deleting_all = false;
;;;972    
;;;973            pm_evt_t pm_delete_all_evt;
;;;974            memset(&pm_delete_all_evt, 0, sizeof(pm_evt_t));
;;;975            pm_delete_all_evt.evt_id      = PM_EVT_PEERS_DELETE_SUCCEEDED;
;;;976            pm_delete_all_evt.peer_id     = PM_PEER_ID_INVALID;
;;;977            pm_delete_all_evt.conn_handle = BLE_CONN_HANDLE_INVALID;
;;;978    
;;;979            evt_send(&pm_delete_all_evt);
;;;980        }
;;;981    
;;;982        while (current_peer_id != PM_PEER_ID_INVALID)
;;;983        {
;;;984            ret_code_t err_code = pm_peer_delete(current_peer_id);
;;;985            if (err_code != NRF_SUCCESS)
;;;986            {
;;;987                return NRF_ERROR_INTERNAL;
;;;988            }
;;;989    
;;;990            current_peer_id = pdb_next_peer_id_get(current_peer_id);
;;;991        }
;;;992    
;;;993        return NRF_SUCCESS;
;;;994    }
00000e  b005              ADD      sp,sp,#0x14
000010  bd30              POP      {r4,r5,pc}
                  |L33.18|
000012  bf00              NOP                            ;962
000014  2001              MOVS     r0,#1                 ;964
000016  4919              LDR      r1,|L33.124|
000018  7008              STRB     r0,[r1,#0]            ;964
00001a  f64f70ff          MOV      r0,#0xffff            ;966
00001e  f7fffffe          BL       pdb_next_peer_id_get
000022  4604              MOV      r4,r0                 ;966
000024  f64f70ff          MOV      r0,#0xffff            ;968
000028  4284              CMP      r4,r0                 ;968
00002a  d112              BNE      |L33.82|
00002c  2000              MOVS     r0,#0                 ;971
00002e  4913              LDR      r1,|L33.124|
000030  7008              STRB     r0,[r1,#0]            ;971
000032  2114              MOVS     r1,#0x14              ;974
000034  4668              MOV      r0,sp                 ;974
000036  f7fffffe          BL       __aeabi_memclr4
00003a  200b              MOVS     r0,#0xb               ;975
00003c  f88d0000          STRB     r0,[sp,#0]            ;975
000040  4620              MOV      r0,r4                 ;976
000042  f8ad0004          STRH     r0,[sp,#4]            ;976
000046  f8ad0002          STRH     r0,[sp,#2]            ;977
00004a  4668              MOV      r0,sp                 ;979
00004c  f7fffffe          BL       evt_send
000050  bf00              NOP                            ;980
                  |L33.82|
000052  e00b              B        |L33.108|
                  |L33.84|
000054  4620              MOV      r0,r4                 ;984
000056  f7fffffe          BL       pm_peer_delete
00005a  4605              MOV      r5,r0                 ;984
00005c  b10d              CBZ      r5,|L33.98|
00005e  2003              MOVS     r0,#3                 ;987
000060  e7d5              B        |L33.14|
                  |L33.98|
000062  4620              MOV      r0,r4                 ;990
000064  f7fffffe          BL       pdb_next_peer_id_get
000068  4604              MOV      r4,r0                 ;990
00006a  bf00              NOP                            ;991
                  |L33.108|
00006c  f64f70ff          MOV      r0,#0xffff            ;982
000070  4284              CMP      r4,r0                 ;982
000072  d1ef              BNE      |L33.84|
000074  2000              MOVS     r0,#0                 ;993
000076  e7ca              B        |L33.14|
;;;995    
                          ENDP

                  |L33.120|
                          DCD      m_module_initialized
                  |L33.124|
                          DCD      m_deleting_all

                          AREA ||i.pm_privacy_get||, CODE, READONLY, ALIGN=2

                  pm_privacy_get PROC
;;;647    
;;;648    ret_code_t pm_privacy_get(pm_privacy_params_t * p_privacy_params)
000000  b510              PUSH     {r4,lr}
;;;649    {
000002  4604              MOV      r4,r0
;;;650        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  480a              LDR      r0,|L34.48|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L34.16|
00000c  2008              MOVS     r0,#8
                  |L34.14|
;;;651        VERIFY_PARAM_NOT_NULL(p_privacy_params);
;;;652        VERIFY_PARAM_NOT_NULL(p_privacy_params->p_device_irk);
;;;653        return im_privacy_get(p_privacy_params);
;;;654    }
00000e  bd10              POP      {r4,pc}
                  |L34.16|
000010  bf00              NOP                            ;650
000012  bf00              NOP                            ;651
000014  b90c              CBNZ     r4,|L34.26|
000016  200e              MOVS     r0,#0xe               ;651
000018  e7f9              B        |L34.14|
                  |L34.26|
00001a  bf00              NOP                            ;651
00001c  bf00              NOP                            ;652
00001e  6860              LDR      r0,[r4,#4]            ;652
000020  b908              CBNZ     r0,|L34.38|
000022  200e              MOVS     r0,#0xe               ;652
000024  e7f3              B        |L34.14|
                  |L34.38|
000026  bf00              NOP                            ;652
000028  4620              MOV      r0,r4                 ;653
00002a  f7fffffe          BL       im_privacy_get
00002e  e7ee              B        |L34.14|
;;;655    
                          ENDP

                  |L34.48|
                          DCD      m_module_initialized

                          AREA ||i.pm_privacy_set||, CODE, READONLY, ALIGN=2

                  pm_privacy_set PROC
;;;639    
;;;640    ret_code_t pm_privacy_set(pm_privacy_params_t const * p_privacy_params)
000000  b510              PUSH     {r4,lr}
;;;641    {
000002  4604              MOV      r4,r0
;;;642        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4807              LDR      r0,|L35.36|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L35.16|
00000c  2008              MOVS     r0,#8
                  |L35.14|
;;;643        VERIFY_PARAM_NOT_NULL(p_privacy_params);
;;;644        return im_privacy_set(p_privacy_params);
;;;645    }
00000e  bd10              POP      {r4,pc}
                  |L35.16|
000010  bf00              NOP                            ;642
000012  bf00              NOP                            ;643
000014  b90c              CBNZ     r4,|L35.26|
000016  200e              MOVS     r0,#0xe               ;643
000018  e7f9              B        |L35.14|
                  |L35.26|
00001a  bf00              NOP                            ;643
00001c  4620              MOV      r0,r4                 ;644
00001e  f7fffffe          BL       im_privacy_set
000022  e7f4              B        |L35.14|
;;;646    
                          ENDP

                  |L35.36|
                          DCD      m_module_initialized

                          AREA ||i.pm_register||, CODE, READONLY, ALIGN=2

                  pm_register PROC
;;;562    
;;;563    ret_code_t pm_register(pm_evt_handler_t event_handler)
000000  4601              MOV      r1,r0
;;;564    {
;;;565        VERIFY_MODULE_INITIALIZED();
000002  bf00              NOP      
000004  480b              LDR      r0,|L36.52|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  b908              CBNZ     r0,|L36.14|
00000a  2008              MOVS     r0,#8
                  |L36.12|
;;;566    
;;;567        if (m_n_registrants >= PM_MAX_REGISTRANTS)
;;;568        {
;;;569            return NRF_ERROR_NO_MEM;
;;;570        }
;;;571    
;;;572        m_evt_handlers[m_n_registrants] = event_handler;
;;;573        m_n_registrants += 1;
;;;574    
;;;575        return NRF_SUCCESS;
;;;576    }
00000c  4770              BX       lr
                  |L36.14|
00000e  bf00              NOP                            ;565
000010  4809              LDR      r0,|L36.56|
000012  7800              LDRB     r0,[r0,#0]            ;567  ; m_n_registrants
000014  2803              CMP      r0,#3                 ;567
000016  db01              BLT      |L36.28|
000018  2004              MOVS     r0,#4                 ;569
00001a  e7f7              B        |L36.12|
                  |L36.28|
00001c  4807              LDR      r0,|L36.60|
00001e  4a06              LDR      r2,|L36.56|
000020  7812              LDRB     r2,[r2,#0]            ;572  ; m_n_registrants
000022  f8401022          STR      r1,[r0,r2,LSL #2]     ;572
000026  4804              LDR      r0,|L36.56|
000028  7800              LDRB     r0,[r0,#0]            ;573  ; m_n_registrants
00002a  1c40              ADDS     r0,r0,#1              ;573
00002c  4a02              LDR      r2,|L36.56|
00002e  7010              STRB     r0,[r2,#0]            ;573
000030  2000              MOVS     r0,#0                 ;575
000032  e7eb              B        |L36.12|
;;;577    
                          ENDP

                  |L36.52|
                          DCD      m_module_initialized
                  |L36.56|
                          DCD      m_n_registrants
                  |L36.60|
                          DCD      m_evt_handlers

                          AREA ||i.pm_sec_params_reply||, CODE, READONLY, ALIGN=2

                  pm_sec_params_reply PROC
;;;610    
;;;611    ret_code_t pm_sec_params_reply(uint16_t conn_handle, ble_gap_sec_params_t * p_sec_params)
000000  4602              MOV      r2,r0
;;;612    {
;;;613        VERIFY_MODULE_INITIALIZED();
000002  bf00              NOP      
000004  4803              LDR      r0,|L37.20|
000006  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000008  b908              CBNZ     r0,|L37.14|
00000a  2008              MOVS     r0,#8
                  |L37.12|
;;;614        return NRF_SUCCESS;
;;;615    }
00000c  4770              BX       lr
                  |L37.14|
00000e  bf00              NOP                            ;613
000010  2000              MOVS     r0,#0                 ;614
000012  e7fb              B        |L37.12|
;;;616    
                          ENDP

                  |L37.20|
                          DCD      m_module_initialized

                          AREA ||i.pm_sec_params_set||, CODE, READONLY, ALIGN=2

                  pm_sec_params_set PROC
;;;578    
;;;579    ret_code_t pm_sec_params_set(ble_gap_sec_params_t * p_sec_params)
000000  b570              PUSH     {r4-r6,lr}
;;;580    {
000002  4604              MOV      r4,r0
;;;581        VERIFY_MODULE_INITIALIZED();
000004  bf00              NOP      
000006  4806              LDR      r0,|L38.32|
000008  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000a  b908              CBNZ     r0,|L38.16|
00000c  2008              MOVS     r0,#8
                  |L38.14|
;;;582    
;;;583        ret_code_t err_code;
;;;584    
;;;585        err_code = sm_sec_params_set(p_sec_params);
;;;586    
;;;587        // NRF_ERROR_INVALID_PARAM if parameters are invalid,
;;;588        // NRF_SUCCESS             otherwise.
;;;589        return err_code;
;;;590    }
00000e  bd70              POP      {r4-r6,pc}
                  |L38.16|
000010  bf00              NOP                            ;581
000012  4620              MOV      r0,r4                 ;585
000014  f7fffffe          BL       sm_sec_params_set
000018  4605              MOV      r5,r0                 ;585
00001a  4628              MOV      r0,r5                 ;589
00001c  e7f7              B        |L38.14|
;;;591    
                          ENDP

00001e  0000              DCW      0x0000
                  |L38.32|
                          DCD      m_module_initialized

                          AREA ||i.pm_sm_evt_handler||, CODE, READONLY, ALIGN=2

                  pm_sm_evt_handler PROC
;;;231     */
;;;232    void pm_sm_evt_handler(sm_evt_t const * p_sm_evt)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;233    {
000004  b086              SUB      sp,sp,#0x18
000006  4604              MOV      r4,r0
;;;234        bool find_peer_id = true;
000008  2501              MOVS     r5,#1
;;;235        bool send_evt     = true;
00000a  2601              MOVS     r6,#1
;;;236        pm_evt_t pm_evt;
;;;237        memset(&pm_evt, 0, sizeof(pm_evt_t));
00000c  2114              MOVS     r1,#0x14
00000e  a801              ADD      r0,sp,#4
000010  f7fffffe          BL       __aeabi_memclr4
;;;238        pm_evt.conn_handle = p_sm_evt->conn_handle;
000014  8860              LDRH     r0,[r4,#2]
000016  f8ad0006          STRH     r0,[sp,#6]
;;;239    
;;;240        switch (p_sm_evt->evt_id)
00001a  7820              LDRB     r0,[r4,#0]
00001c  280d              CMP      r0,#0xd
00001e  d270              BCS      |L39.258|
000020  e8dff000          TBB      [pc,r0]
000024  b2070a26          DCB      0xb2,0x07,0x0a,0x26
000028  3d526270          DCB      0x3d,0x52,0x62,0x70
00002c  7e8e9498          DCB      0x7e,0x8e,0x94,0x98
000030  ae00              DCB      0xae,0x00
;;;241        {
;;;242            case SM_EVT_SLAVE_SECURITY_REQ:
;;;243                find_peer_id = false;
000032  2500              MOVS     r5,#0
;;;244                send_evt     = false;
000034  2600              MOVS     r6,#0
;;;245                break;
000036  e0a9              B        |L39.396|
;;;246    
;;;247            case SM_EVT_SEC_PROCEDURE_START:
;;;248            {
;;;249                pm_evt.evt_id = PM_EVT_CONN_SEC_START;
000038  2001              MOVS     r0,#1
00003a  f88d0004          STRB     r0,[sp,#4]
;;;250                bool pairing = p_sm_evt->params.sec_procedure_start.procedure
00003e  7920              LDRB     r0,[r4,#4]
000040  b108              CBZ      r0,|L39.70|
000042  2001              MOVS     r0,#1
000044  e000              B        |L39.72|
                  |L39.70|
000046  2000              MOVS     r0,#0
                  |L39.72|
000048  4607              MOV      r7,r0
;;;251                                    != PM_LINK_SECURED_PROCEDURE_ENCRYPTION;
;;;252                bool bonding = p_sm_evt->params.sec_procedure_start.procedure
00004a  7920              LDRB     r0,[r4,#4]
00004c  2801              CMP      r0,#1
00004e  d100              BNE      |L39.82|
000050  e000              B        |L39.84|
                  |L39.82|
000052  2000              MOVS     r0,#0
                  |L39.84|
000054  4680              MOV      r8,r0
;;;253                                    == PM_LINK_SECURED_PROCEDURE_BONDING;
;;;254                ble_conn_state_user_flag_set(p_sm_evt->conn_handle, m_pairing_flag_id, pairing);
000056  8860              LDRH     r0,[r4,#2]
000058  463a              MOV      r2,r7
00005a  4953              LDR      r1,|L39.424|
00005c  7809              LDRB     r1,[r1,#0]  ; m_pairing_flag_id
00005e  f7fffffe          BL       ble_conn_state_user_flag_set
;;;255                ble_conn_state_user_flag_set(p_sm_evt->conn_handle, m_bonding_flag_id, bonding);
000062  8860              LDRH     r0,[r4,#2]
000064  4642              MOV      r2,r8
000066  4951              LDR      r1,|L39.428|
000068  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
00006a  f7fffffe          BL       ble_conn_state_user_flag_set
;;;256                break;
00006e  e08d              B        |L39.396|
;;;257            }
;;;258    
;;;259            case SM_EVT_PAIRING_SUCCESS:
;;;260                pm_evt.evt_id = PM_EVT_CONN_SEC_SUCCEEDED;
000070  2002              MOVS     r0,#2
000072  f88d0004          STRB     r0,[sp,#4]
;;;261                pm_evt.params.conn_sec_succeeded.procedure =
000076  7920              LDRB     r0,[r4,#4]
000078  b108              CBZ      r0,|L39.126|
;;;262                            p_sm_evt->params.pairing_success.bonded
;;;263                            ? PM_LINK_SECURED_PROCEDURE_BONDING
00007a  2001              MOVS     r0,#1
00007c  e000              B        |L39.128|
                  |L39.126|
;;;264                            : PM_LINK_SECURED_PROCEDURE_PAIRING;
00007e  2002              MOVS     r0,#2
                  |L39.128|
000080  f88d000c          STRB     r0,[sp,#0xc]
;;;265                ble_conn_state_user_flag_set(p_sm_evt->conn_handle, m_pairing_flag_id, true);
000084  8860              LDRH     r0,[r4,#2]
000086  2201              MOVS     r2,#1
000088  4947              LDR      r1,|L39.424|
00008a  7809              LDRB     r1,[r1,#0]  ; m_pairing_flag_id
00008c  f7fffffe          BL       ble_conn_state_user_flag_set
;;;266                ble_conn_state_user_flag_set(p_sm_evt->conn_handle,
000090  7922              LDRB     r2,[r4,#4]
000092  8860              LDRH     r0,[r4,#2]
000094  4945              LDR      r1,|L39.428|
000096  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
000098  f7fffffe          BL       ble_conn_state_user_flag_set
;;;267                                             m_bonding_flag_id,
;;;268                                             p_sm_evt->params.pairing_success.bonded
;;;269                );
;;;270                break;
00009c  e076              B        |L39.396|
;;;271    
;;;272            case SM_EVT_PAIRING_FAIL:
;;;273                pm_evt.evt_id = PM_EVT_CONN_SEC_FAILED;
00009e  2003              MOVS     r0,#3
0000a0  f88d0004          STRB     r0,[sp,#4]
;;;274                pm_evt.params.conn_sec_failed.procedure =
0000a4  8860              LDRH     r0,[r4,#2]
0000a6  4941              LDR      r1,|L39.428|
0000a8  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
0000aa  f7fffffe          BL       ble_conn_state_user_flag_get
0000ae  b108              CBZ      r0,|L39.180|
;;;275                            ble_conn_state_user_flag_get(p_sm_evt->conn_handle, m_bonding_flag_id)
;;;276                            ? PM_LINK_SECURED_PROCEDURE_BONDING
0000b0  2001              MOVS     r0,#1
0000b2  e000              B        |L39.182|
                  |L39.180|
;;;277                            : PM_LINK_SECURED_PROCEDURE_PAIRING;
0000b4  2002              MOVS     r0,#2
                  |L39.182|
0000b6  f88d000c          STRB     r0,[sp,#0xc]
;;;278                pm_evt.params.conn_sec_failed.error_src
0000ba  79a1              LDRB     r1,[r4,#6]
0000bc  f88d1010          STRB     r1,[sp,#0x10]
;;;279                    = p_sm_evt->params.pairing_failed.error_src;
;;;280                pm_evt.params.conn_sec_failed.error
0000c0  88a1              LDRH     r1,[r4,#4]
0000c2  f8ad100e          STRH     r1,[sp,#0xe]
;;;281                    = p_sm_evt->params.pairing_failed.error;
;;;282                break;
0000c6  e061              B        |L39.396|
;;;283    
;;;284            case SM_EVT_LINK_ENCRYPTION_UPDATE:
;;;285                if (!ble_conn_state_user_flag_get(p_sm_evt->conn_handle, m_pairing_flag_id))
0000c8  8860              LDRH     r0,[r4,#2]
0000ca  4937              LDR      r1,|L39.424|
0000cc  7809              LDRB     r1,[r1,#0]  ; m_pairing_flag_id
0000ce  f7fffffe          BL       ble_conn_state_user_flag_get
0000d2  b930              CBNZ     r0,|L39.226|
;;;286                {
;;;287                    pm_evt.evt_id = PM_EVT_CONN_SEC_SUCCEEDED;
0000d4  2002              MOVS     r0,#2
0000d6  f88d0004          STRB     r0,[sp,#4]
;;;288                    pm_evt.params.conn_sec_succeeded.procedure = PM_LINK_SECURED_PROCEDURE_ENCRYPTION;
0000da  2000              MOVS     r0,#0
0000dc  f88d000c          STRB     r0,[sp,#0xc]
0000e0  e001              B        |L39.230|
                  |L39.226|
;;;289                }
;;;290                else
;;;291                {
;;;292                    find_peer_id = false;
0000e2  2500              MOVS     r5,#0
;;;293                    send_evt     = false;
0000e4  2600              MOVS     r6,#0
                  |L39.230|
;;;294                }
;;;295                break;
0000e6  e051              B        |L39.396|
;;;296    
;;;297            case SM_EVT_LINK_ENCRYPTION_FAILED:
;;;298                pm_evt.evt_id = PM_EVT_CONN_SEC_FAILED;
0000e8  2003              MOVS     r0,#3
0000ea  f88d0004          STRB     r0,[sp,#4]
;;;299                pm_evt.params.conn_sec_failed.procedure
0000ee  2000              MOVS     r0,#0
0000f0  f88d000c          STRB     r0,[sp,#0xc]
;;;300                                = PM_LINK_SECURED_PROCEDURE_ENCRYPTION;
;;;301                pm_evt.params.conn_sec_failed.error_src
0000f4  79a1              LDRB     r1,[r4,#6]
0000f6  f88d1010          STRB     r1,[sp,#0x10]
;;;302                                = p_sm_evt->params.link_encryption_failed.error_src;
;;;303                pm_evt.params.conn_sec_failed.error
0000fa  88a1              LDRH     r1,[r4,#4]
0000fc  f8ad100e          STRH     r1,[sp,#0xe]
;;;304                                = p_sm_evt->params.link_encryption_failed.error;
;;;305                break;
000100  e044              B        |L39.396|
                  |L39.258|
000102  e041              B        |L39.392|
;;;306    
;;;307            case SM_EVT_BONDING_INFO_STORED:
;;;308                pm_evt.evt_id  = PM_EVT_PEER_DATA_UPDATE_SUCCEEDED;
000104  2007              MOVS     r0,#7
000106  f88d0004          STRB     r0,[sp,#4]
;;;309                pm_evt.peer_id = p_sm_evt->params.bonding_info_stored.peer_id;
00010a  88a0              LDRH     r0,[r4,#4]
00010c  f8ad0008          STRH     r0,[sp,#8]
;;;310                pm_evt.params.peer_data_update_succeeded.data_id = PM_PEER_DATA_ID_BONDING;
000110  2007              MOVS     r0,#7
000112  f88d000c          STRB     r0,[sp,#0xc]
;;;311                pm_evt.params.peer_data_update_succeeded.action  = PM_PEER_DATA_OP_UPDATE;
000116  2100              MOVS     r1,#0
000118  f88d100d          STRB     r1,[sp,#0xd]
;;;312                find_peer_id = false;
00011c  2500              MOVS     r5,#0
;;;313                break;
00011e  e035              B        |L39.396|
;;;314    
;;;315            case SM_EVT_ERROR_BONDING_INFO:
;;;316                pm_evt.evt_id = PM_EVT_PEER_DATA_UPDATE_FAILED;
000120  2008              MOVS     r0,#8
000122  f88d0004          STRB     r0,[sp,#4]
;;;317                pm_evt.peer_id = p_sm_evt->params.error_bonding_info.peer_id;
000126  88a0              LDRH     r0,[r4,#4]
000128  f8ad0008          STRH     r0,[sp,#8]
;;;318                pm_evt.params.peer_data_update_failed.data_id = PM_PEER_DATA_ID_BONDING;
00012c  2007              MOVS     r0,#7
00012e  f88d000c          STRB     r0,[sp,#0xc]
;;;319                pm_evt.params.peer_data_update_failed.action  = PM_PEER_DATA_OP_UPDATE;
000132  2100              MOVS     r1,#0
000134  f88d100d          STRB     r1,[sp,#0xd]
;;;320                pm_evt.params.peer_data_update_failed.error
000138  68a1              LDR      r1,[r4,#8]
00013a  9105              STR      r1,[sp,#0x14]
;;;321                    = p_sm_evt->params.error_bonding_info.error;
;;;322                find_peer_id = false;
00013c  2500              MOVS     r5,#0
;;;323                break;
00013e  e025              B        |L39.396|
;;;324    
;;;325            case SM_EVT_ERROR_UNEXPECTED:
;;;326                pm_evt.evt_id = PM_EVT_ERROR_UNEXPECTED;
000140  2006              MOVS     r0,#6
000142  f88d0004          STRB     r0,[sp,#4]
;;;327                pm_evt.params.error_unexpected.error = p_sm_evt->params.error_unexpected.error;
000146  6860              LDR      r0,[r4,#4]
000148  9003              STR      r0,[sp,#0xc]
;;;328                break;
00014a  e01f              B        |L39.396|
;;;329    
;;;330            case SM_EVT_ERROR_NO_MEM:
;;;331                pm_evt.evt_id = PM_EVT_STORAGE_FULL;
00014c  2005              MOVS     r0,#5
00014e  f88d0004          STRB     r0,[sp,#4]
;;;332                break;
000152  e01b              B        |L39.396|
;;;333    
;;;334            case SM_EVT_ERROR_SMP_TIMEOUT:
;;;335                pm_evt.evt_id = PM_EVT_CONN_SEC_FAILED;
000154  2003              MOVS     r0,#3
000156  f88d0004          STRB     r0,[sp,#4]
;;;336                pm_evt.params.conn_sec_failed.procedure
00015a  8860              LDRH     r0,[r4,#2]
00015c  4913              LDR      r1,|L39.428|
00015e  7809              LDRB     r1,[r1,#0]  ; m_bonding_flag_id
000160  f7fffffe          BL       ble_conn_state_user_flag_get
000164  b108              CBZ      r0,|L39.362|
;;;337                            = ble_conn_state_user_flag_get(p_sm_evt->conn_handle, m_bonding_flag_id)
;;;338                            ? PM_LINK_SECURED_PROCEDURE_BONDING
000166  2001              MOVS     r0,#1
000168  e000              B        |L39.364|
                  |L39.362|
;;;339                            : PM_LINK_SECURED_PROCEDURE_PAIRING;
00016a  2002              MOVS     r0,#2
                  |L39.364|
00016c  f88d000c          STRB     r0,[sp,#0xc]
;;;340                pm_evt.params.conn_sec_failed.error_src  = BLE_GAP_SEC_STATUS_SOURCE_LOCAL;
000170  2100              MOVS     r1,#0
000172  f88d1010          STRB     r1,[sp,#0x10]
;;;341                pm_evt.params.conn_sec_failed.error      = PM_CONN_SEC_ERROR_SMP_TIMEOUT;
000176  f2411101          MOV      r1,#0x1101
00017a  f8ad100e          STRH     r1,[sp,#0xe]
;;;342                break;
00017e  e005              B        |L39.396|
;;;343    
;;;344            case SM_EVT_CONN_SEC_CONFIG_REQ:
;;;345                pm_evt.evt_id = PM_EVT_CONN_SEC_CONFIG_REQ;
000180  2004              MOVS     r0,#4
000182  f88d0004          STRB     r0,[sp,#4]
;;;346                break;
000186  e001              B        |L39.396|
                  |L39.392|
;;;347    
;;;348            default:
;;;349                send_evt = false;
000188  2600              MOVS     r6,#0
;;;350                break;
00018a  bf00              NOP      
                  |L39.396|
00018c  bf00              NOP                            ;245
;;;351        }
;;;352    
;;;353        if (find_peer_id)
00018e  b125              CBZ      r5,|L39.410|
;;;354        {
;;;355            pm_evt.peer_id = im_peer_id_get_by_conn_handle(p_sm_evt->conn_handle);
000190  8860              LDRH     r0,[r4,#2]
000192  f7fffffe          BL       im_peer_id_get_by_conn_handle
000196  f8ad0008          STRH     r0,[sp,#8]
                  |L39.410|
;;;356        }
;;;357    
;;;358        if (send_evt)
00019a  b116              CBZ      r6,|L39.418|
;;;359        {
;;;360            evt_send(&pm_evt);
00019c  a801              ADD      r0,sp,#4
00019e  f7fffffe          BL       evt_send
                  |L39.418|
;;;361        }
;;;362    }
0001a2  b006              ADD      sp,sp,#0x18
0001a4  e8bd81f0          POP      {r4-r8,pc}
;;;363    
                          ENDP

                  |L39.424|
                          DCD      m_pairing_flag_id
                  |L39.428|
                          DCD      m_bonding_flag_id

                          AREA ||i.pm_whitelist_get||, CODE, READONLY, ALIGN=2

                  pm_whitelist_get PROC
;;;664    
;;;665    ret_code_t pm_whitelist_get(ble_gap_addr_t * p_addrs,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;666                                uint32_t       * p_addr_cnt,
;;;667                                ble_gap_irk_t  * p_irks,
;;;668                                uint32_t       * p_irk_cnt)
;;;669    {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;670        VERIFY_MODULE_INITIALIZED();
00000c  bf00              NOP      
00000e  480b              LDR      r0,|L40.60|
000010  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
000012  b910              CBNZ     r0,|L40.26|
000014  2008              MOVS     r0,#8
                  |L40.22|
;;;671    
;;;672        if (((p_addrs == NULL) && (p_irks     == NULL)) ||
;;;673            ((p_addrs != NULL) && (p_addr_cnt == NULL)) ||
;;;674            ((p_irks  != NULL) && (p_irk_cnt  == NULL)))
;;;675        {
;;;676            // The buffers can't be both NULL, and if a buffer is provided its size must be specified.
;;;677            return NRF_ERROR_NULL;
;;;678        }
;;;679    
;;;680        return im_whitelist_get(p_addrs, p_addr_cnt, p_irks, p_irk_cnt);
;;;681    }
000016  e8bd81f0          POP      {r4-r8,pc}
                  |L40.26|
00001a  bf00              NOP                            ;670
00001c  b904              CBNZ     r4,|L40.32|
00001e  b11d              CBZ      r5,|L40.40|
                  |L40.32|
000020  b104              CBZ      r4,|L40.36|
000022  b10e              CBZ      r6,|L40.40|
                  |L40.36|
000024  b115              CBZ      r5,|L40.44|
000026  b90f              CBNZ     r7,|L40.44|
                  |L40.40|
000028  200e              MOVS     r0,#0xe               ;677
00002a  e7f4              B        |L40.22|
                  |L40.44|
00002c  463b              MOV      r3,r7                 ;680
00002e  462a              MOV      r2,r5                 ;680
000030  4631              MOV      r1,r6                 ;680
000032  4620              MOV      r0,r4                 ;680
000034  f7fffffe          BL       im_whitelist_get
000038  e7ed              B        |L40.22|
;;;682    
                          ENDP

00003a  0000              DCW      0x0000
                  |L40.60|
                          DCD      m_module_initialized

                          AREA ||i.pm_whitelist_set||, CODE, READONLY, ALIGN=2

                  pm_whitelist_set PROC
;;;656    
;;;657    ret_code_t pm_whitelist_set(pm_peer_id_t const * p_peers,
000000  b570              PUSH     {r4-r6,lr}
;;;658                                uint32_t             peer_cnt)
;;;659    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;660        VERIFY_MODULE_INITIALIZED();
000006  bf00              NOP      
000008  4805              LDR      r0,|L41.32|
00000a  7800              LDRB     r0,[r0,#0]  ; m_module_initialized
00000c  b908              CBNZ     r0,|L41.18|
00000e  2008              MOVS     r0,#8
                  |L41.16|
;;;661        return im_whitelist_set(p_peers, peer_cnt);
;;;662    }
000010  bd70              POP      {r4-r6,pc}
                  |L41.18|
000012  bf00              NOP                            ;660
000014  4629              MOV      r1,r5                 ;661
000016  4620              MOV      r0,r4                 ;661
000018  f7fffffe          BL       im_whitelist_set
00001c  e7f8              B        |L41.16|
;;;663    
                          ENDP

00001e  0000              DCW      0x0000
                  |L41.32|
                          DCD      m_module_initialized

                          AREA ||i.rank_init||, CODE, READONLY, ALIGN=2

                  rank_init PROC
;;;1070    */
;;;1071   static void rank_init(void)
000000  b510              PUSH     {r4,lr}
;;;1072   {
;;;1073       ret_code_t err_code = pm_peer_ranks_get(&m_highest_ranked_peer,
000002  2300              MOVS     r3,#0
000004  461a              MOV      r2,r3
000006  4906              LDR      r1,|L42.32|
000008  4806              LDR      r0,|L42.36|
00000a  f7fffffe          BL       pm_peer_ranks_get
00000e  4604              MOV      r4,r0
;;;1074                                               &m_current_highest_peer_rank,
;;;1075                                               NULL,
;;;1076                                               NULL);
;;;1077       if ((err_code == NRF_SUCCESS) || (err_code == NRF_ERROR_NOT_FOUND))
000010  b10c              CBZ      r4,|L42.22|
000012  2c05              CMP      r4,#5
000014  d102              BNE      |L42.28|
                  |L42.22|
;;;1078       {
;;;1079           m_peer_rank_initialized = true;
000016  2001              MOVS     r0,#1
000018  4903              LDR      r1,|L42.40|
00001a  7008              STRB     r0,[r1,#0]
                  |L42.28|
;;;1080       }
;;;1081   }
00001c  bd10              POP      {r4,pc}
;;;1082   
                          ENDP

00001e  0000              DCW      0x0000
                  |L42.32|
                          DCD      m_current_highest_peer_rank
                  |L42.36|
                          DCD      m_highest_ranked_peer
                  |L42.40|
                          DCD      m_peer_rank_initialized

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  m_evt_handlers
                          %        12

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  0001              DCW      0x0001
000002  0000              DCB      0x00,0x00
                          DCD      0x00000000
000008  0001              DCW      0x0001
00000a  0600              DCB      0x06,0x00
                          DCD      m_current_highest_peer_rank

                          AREA ||.data||, DATA, ALIGN=2

                  m_module_initialized
000000  00                DCB      0x00
                  m_peer_rank_initialized
000001  00                DCB      0x00
                  m_deleting_all
000002  0000              DCB      0x00,0x00
                  m_peer_rank_token
                          DCD      0x00000000
                  m_current_highest_peer_rank
                          DCD      0x00000000
                  m_highest_ranked_peer
00000c  0000              DCB      0x00,0x00
                  m_n_registrants
00000e  00                DCB      0x00
                  m_pairing_flag_id
00000f  00                DCB      0x00
                  m_bonding_flag_id
000010  00                DCB      0x00

                          AREA sdh_ble_observers2, DATA, READONLY, ALIGN=2

                  m_ble_evt_observer
                  ||__tagsym$$used||
                          DCD      ble_evt_handler
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\ble\\peer_manager\\peer_manager.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_peer_manager_c_cf900614____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___14_peer_manager_c_cf900614____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_peer_manager_c_cf900614____REVSH|
#line 402
|__asm___14_peer_manager_c_cf900614____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_peer_manager_c_cf900614____RRX|
#line 587
|__asm___14_peer_manager_c_cf900614____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
