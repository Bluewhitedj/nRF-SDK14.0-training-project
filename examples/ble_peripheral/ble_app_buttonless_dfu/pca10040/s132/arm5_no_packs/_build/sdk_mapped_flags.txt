; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --reduce_paths -o.\_build\sdk_mapped_flags.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\sdk_mapped_flags.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..\components\libraries\balloc -I..\..\..\..\..\..\components\libraries\bootloader\dfu -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\experimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\components\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\libraries\fifo -I.\RTE\_nrf52832_xxaa -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.14.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DNRF52 -DBL_SETTINGS_ACCESS_ONLY -DBOARD_PCA10040 -DCONFIG_GPIO_AS_PINRESET -DNRF52 -DNRF52832_XXAA -DNRF52_PAN_74 -DNRF_SD_BLE_API_VERSION=5 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -DDEBUG --omf_browse=.\_build\sdk_mapped_flags.crf ..\..\..\..\..\..\components\libraries\util\sdk_mapped_flags.c]
                          THUMB

                          AREA ||i.sdk_mapped_flags_bulk_update_by_key||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_bulk_update_by_key PROC
;;;108    
;;;109    void sdk_mapped_flags_bulk_update_by_key(uint16_t           * p_keys,
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;110                                             sdk_mapped_flags_t * p_flags,
;;;111                                             uint32_t             n_flag_collections,
;;;112                                             uint16_t             key,
;;;113                                             bool                 value)
;;;114    {
000004  4604              MOV      r4,r0
000006  4615              MOV      r5,r2
000008  461e              MOV      r6,r3
00000a  f8ddc01c          LDR      r12,[sp,#0x1c]
;;;115        if ((p_keys != NULL) && (p_flags != NULL) && (n_flag_collections > 0))
00000e  b37c              CBZ      r4,|L1.112|
000010  b371              CBZ      r1,|L1.112|
000012  b36d              CBZ      r5,|L1.112|
;;;116        {
;;;117            for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000014  2000              MOVS     r0,#0
000016  e02d              B        |L1.116|
                  |L1.24|
;;;118            {
;;;119                if (p_keys[i] == key)
000018  f8342010          LDRH     r2,[r4,r0,LSL #1]
00001c  42b2              CMP      r2,r6
00001e  d128              BNE      |L1.114|
;;;120                {
;;;121                    for (uint32_t j = 0; j < n_flag_collections; j++)
000020  2200              MOVS     r2,#0
000022  e021              B        |L1.104|
                  |L1.36|
;;;122                    {
;;;123                        if (value)
000024  f1bc0f00          CMP      r12,#0
000028  d00e              BEQ      |L1.72|
;;;124                        {
;;;125                            sdk_mapped_flags_set_by_index(&p_flags[j], i);
00002a  eb010382          ADD      r3,r1,r2,LSL #2
00002e  b287              UXTH     r7,r0
000030  f04f0901          MOV      r9,#1
000034  fa09f907          LSL      r9,r9,r7
000038  f8d38000          LDR      r8,[r3,#0]
00003c  ea480809          ORR      r8,r8,r9
000040  f8c38000          STR      r8,[r3,#0]
000044  bf00              NOP      
000046  e00e              B        |L1.102|
                  |L1.72|
;;;126                        }
;;;127                        else
;;;128                        {
;;;129                            sdk_mapped_flags_clear_by_index(&p_flags[j], i);
000048  eb010382          ADD      r3,r1,r2,LSL #2
00004c  b287              UXTH     r7,r0
00004e  f04f0901          MOV      r9,#1
000052  fa09f907          LSL      r9,r9,r7
000056  f8d38000          LDR      r8,[r3,#0]
00005a  ea280809          BIC      r8,r8,r9
00005e  f8c38000          STR      r8,[r3,#0]
000062  bf00              NOP      
000064  bf00              NOP      
                  |L1.102|
000066  1c52              ADDS     r2,r2,#1              ;121
                  |L1.104|
000068  42aa              CMP      r2,r5                 ;121
00006a  d3db              BCC      |L1.36|
                  |L1.108|
;;;130                        }
;;;131                    }
;;;132                    return;
;;;133                }
;;;134            }
;;;135        }
;;;136    }
00006c  e8bd83f0          POP      {r4-r9,pc}
                  |L1.112|
000070  e002              B        |L1.120|
                  |L1.114|
000072  1c40              ADDS     r0,r0,#1              ;117
                  |L1.116|
000074  2820              CMP      r0,#0x20              ;117
000076  d3cf              BCC      |L1.24|
                  |L1.120|
000078  bf00              NOP      
00007a  e7f7              B        |L1.108|
;;;137    
                          ENDP


                          AREA ||i.sdk_mapped_flags_first_key_index_get||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_first_key_index_get PROC
;;;86     
;;;87     uint16_t sdk_mapped_flags_first_key_index_get(sdk_mapped_flags_t flags)
000000  b570              PUSH     {r4-r6,lr}
;;;88     {
000002  4605              MOV      r5,r0
;;;89         for (uint16_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000004  2400              MOVS     r4,#0
000006  e008              B        |L2.26|
                  |L2.8|
;;;90         {
;;;91             if (sdk_mapped_flags_get_by_index(flags, i))
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       sdk_mapped_flags_get_by_index
000010  b108              CBZ      r0,|L2.22|
;;;92             {
;;;93                 return i;
000012  4620              MOV      r0,r4
                  |L2.20|
;;;94             }
;;;95         }
;;;96         return SDK_MAPPED_FLAGS_INVALID_INDEX;
;;;97     }
000014  bd70              POP      {r4-r6,pc}
                  |L2.22|
000016  1c60              ADDS     r0,r4,#1              ;89
000018  b284              UXTH     r4,r0                 ;89
                  |L2.26|
00001a  2c20              CMP      r4,#0x20              ;89
00001c  dbf4              BLT      |L2.8|
00001e  f64f70ff          MOV      r0,#0xffff            ;96
000022  e7f7              B        |L2.20|
;;;98     
                          ENDP


                          AREA ||i.sdk_mapped_flags_get_by_index||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_get_by_index PROC
;;;79      */
;;;80     static __INLINE bool sdk_mapped_flags_get_by_index(sdk_mapped_flags_t flags, uint16_t index)
000000  4602              MOV      r2,r0
;;;81     {
;;;82         return ((flags & (1 << index)) != 0);
000002  2001              MOVS     r0,#1
000004  4088              LSLS     r0,r0,r1
000006  4010              ANDS     r0,r0,r2
000008  b108              CBZ      r0,|L3.14|
00000a  2001              MOVS     r0,#1
                  |L3.12|
;;;83     }
00000c  4770              BX       lr
                  |L3.14|
00000e  2000              MOVS     r0,#0                 ;82
000010  e7fc              B        |L3.12|
;;;84     
                          ENDP


                          AREA ||i.sdk_mapped_flags_get_by_key||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_get_by_key PROC
;;;165    
;;;166    bool sdk_mapped_flags_get_by_key(uint16_t * p_keys, sdk_mapped_flags_t flags, uint16_t key)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;167    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;168        if (p_keys != NULL)
00000a  b175              CBZ      r5,|L4.42|
;;;169        {
;;;170            for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
00000c  2400              MOVS     r4,#0
00000e  e00a              B        |L4.38|
                  |L4.16|
;;;171            {
;;;172                if (p_keys[i] == key)
000010  f8350014          LDRH     r0,[r5,r4,LSL #1]
000014  42b8              CMP      r0,r7
000016  d105              BNE      |L4.36|
;;;173                {
;;;174                    return sdk_mapped_flags_get_by_index(flags, i);
000018  b2a1              UXTH     r1,r4
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       sdk_mapped_flags_get_by_index
                  |L4.32|
;;;175                }
;;;176            }
;;;177        }
;;;178        return false;
;;;179    }
000020  e8bd81f0          POP      {r4-r8,pc}
                  |L4.36|
000024  1c64              ADDS     r4,r4,#1              ;170
                  |L4.38|
000026  2c20              CMP      r4,#0x20              ;170
000028  d3f2              BCC      |L4.16|
                  |L4.42|
00002a  2000              MOVS     r0,#0                 ;178
00002c  e7f8              B        |L4.32|
;;;180    
                          ENDP


                          AREA ||i.sdk_mapped_flags_get_by_key_w_idx||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_get_by_key_w_idx PROC
;;;138    
;;;139    bool sdk_mapped_flags_get_by_key_w_idx(uint16_t         * p_keys,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;140                                           sdk_mapped_flags_t flags,
;;;141                                           uint16_t           key,
;;;142                                           uint8_t          * p_index)
;;;143    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
00000a  461c              MOV      r4,r3
;;;144        if (p_keys != NULL)
00000c  b186              CBZ      r6,|L5.48|
;;;145        {
;;;146            for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
00000e  2500              MOVS     r5,#0
000010  e00c              B        |L5.44|
                  |L5.18|
;;;147            {
;;;148                if (p_keys[i] == key)
000012  f8360015          LDRH     r0,[r6,r5,LSL #1]
000016  4540              CMP      r0,r8
000018  d107              BNE      |L5.42|
;;;149                {
;;;150                    if (p_index != NULL)
00001a  b104              CBZ      r4,|L5.30|
;;;151                    {
;;;152                        *p_index = i;
00001c  7025              STRB     r5,[r4,#0]
                  |L5.30|
;;;153                    }
;;;154                    return sdk_mapped_flags_get_by_index(flags, i);
00001e  b2a9              UXTH     r1,r5
000020  4638              MOV      r0,r7
000022  f7fffffe          BL       sdk_mapped_flags_get_by_index
                  |L5.38|
;;;155                }
;;;156            }
;;;157        }
;;;158        if (p_index != NULL)
;;;159        {
;;;160            *p_index = SDK_MAPPED_FLAGS_N_KEYS;
;;;161        }
;;;162        return false;
;;;163    }
000026  e8bd81f0          POP      {r4-r8,pc}
                  |L5.42|
00002a  1c6d              ADDS     r5,r5,#1              ;146
                  |L5.44|
00002c  2d20              CMP      r5,#0x20              ;146
00002e  d3f0              BCC      |L5.18|
                  |L5.48|
000030  b10c              CBZ      r4,|L5.54|
000032  2020              MOVS     r0,#0x20              ;160
000034  7020              STRB     r0,[r4,#0]            ;160
                  |L5.54|
000036  2000              MOVS     r0,#0                 ;162
000038  e7f5              B        |L5.38|
;;;164    
                          ENDP


                          AREA ||i.sdk_mapped_flags_key_list_get||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_key_list_get PROC
;;;181    
;;;182    sdk_mapped_flags_key_list_t sdk_mapped_flags_key_list_get(uint16_t           * p_keys,
000000  b5f0              PUSH     {r4-r7,lr}
;;;183                                                              sdk_mapped_flags_t   flags)
;;;184    {
000002  b091              SUB      sp,sp,#0x44
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;185        sdk_mapped_flags_key_list_t key_list;
;;;186        key_list.len = 0;
00000a  2000              MOVS     r0,#0
00000c  9000              STR      r0,[sp,#0]
;;;187    
;;;188        if (p_keys != NULL)
00000e  b18d              CBZ      r5,|L6.52|
;;;189        {
;;;190            for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000010  2400              MOVS     r4,#0
000012  e00d              B        |L6.48|
                  |L6.20|
;;;191            {
;;;192                if (sdk_mapped_flags_get_by_index(flags, i))
000014  b2a1              UXTH     r1,r4
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       sdk_mapped_flags_get_by_index
00001c  b138              CBZ      r0,|L6.46|
;;;193                {
;;;194                    key_list.flag_keys[key_list.len++] = p_keys[i];
00001e  f8351014          LDRH     r1,[r5,r4,LSL #1]
000022  9a00              LDR      r2,[sp,#0]
000024  1c50              ADDS     r0,r2,#1
000026  9000              STR      r0,[sp,#0]
000028  a801              ADD      r0,sp,#4
00002a  f8201012          STRH     r1,[r0,r2,LSL #1]
                  |L6.46|
00002e  1c64              ADDS     r4,r4,#1              ;190
                  |L6.48|
000030  2c20              CMP      r4,#0x20              ;190
000032  d3ef              BCC      |L6.20|
                  |L6.52|
;;;195                }
;;;196            }
;;;197        }
;;;198    
;;;199        return key_list;
000034  2244              MOVS     r2,#0x44
000036  4669              MOV      r1,sp
000038  4638              MOV      r0,r7
00003a  f7fffffe          BL       __aeabi_memcpy4
;;;200    }
00003e  b011              ADD      sp,sp,#0x44
000040  bdf0              POP      {r4-r7,pc}
;;;201    
                          ENDP


                          AREA ||i.sdk_mapped_flags_n_flags_set||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_n_flags_set PROC
;;;202    
;;;203    uint32_t sdk_mapped_flags_n_flags_set(sdk_mapped_flags_t flags)
000000  b570              PUSH     {r4-r6,lr}
;;;204    {
000002  4606              MOV      r6,r0
;;;205        uint32_t n_flags_set = 0;
000004  2500              MOVS     r5,#0
;;;206    
;;;207        for (uint32_t i = 0; i < SDK_MAPPED_FLAGS_N_KEYS; i++)
000006  2400              MOVS     r4,#0
000008  e006              B        |L7.24|
                  |L7.10|
;;;208        {
;;;209            if (sdk_mapped_flags_get_by_index(flags, i))
00000a  b2a1              UXTH     r1,r4
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       sdk_mapped_flags_get_by_index
000012  b100              CBZ      r0,|L7.22|
;;;210            {
;;;211                n_flags_set += 1;
000014  1c6d              ADDS     r5,r5,#1
                  |L7.22|
000016  1c64              ADDS     r4,r4,#1              ;207
                  |L7.24|
000018  2c20              CMP      r4,#0x20              ;207
00001a  d3f6              BCC      |L7.10|
;;;212            }
;;;213        }
;;;214        return n_flags_set;
00001c  4628              MOV      r0,r5
;;;215    }
00001e  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.sdk_mapped_flags_update_by_key||, CODE, READONLY, ALIGN=1

                  sdk_mapped_flags_update_by_key PROC
;;;99     
;;;100    void sdk_mapped_flags_update_by_key(uint16_t           * p_keys,
000000  b5f8              PUSH     {r3-r7,lr}
;;;101                                        sdk_mapped_flags_t * p_flags,
;;;102                                        uint16_t             key,
;;;103                                        bool                 value)
;;;104    {
000002  4606              MOV      r6,r0
000004  460f              MOV      r7,r1
000006  4614              MOV      r4,r2
000008  461d              MOV      r5,r3
;;;105        sdk_mapped_flags_bulk_update_by_key(p_keys, p_flags, 1, key, value);
00000a  4623              MOV      r3,r4
00000c  2201              MOVS     r2,#1
00000e  4639              MOV      r1,r7
000010  4630              MOV      r0,r6
000012  9500              STR      r5,[sp,#0]
000014  f7fffffe          BL       sdk_mapped_flags_bulk_update_by_key
;;;106    }
000018  bdf8              POP      {r3-r7,pc}
;;;107    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\libraries\\util\\sdk_mapped_flags.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_sdk_mapped_flags_c_164c3d67____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_sdk_mapped_flags_c_164c3d67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_sdk_mapped_flags_c_164c3d67____REVSH|
#line 402
|__asm___18_sdk_mapped_flags_c_164c3d67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_sdk_mapped_flags_c_164c3d67____RRX|
#line 587
|__asm___18_sdk_mapped_flags_c_164c3d67____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
