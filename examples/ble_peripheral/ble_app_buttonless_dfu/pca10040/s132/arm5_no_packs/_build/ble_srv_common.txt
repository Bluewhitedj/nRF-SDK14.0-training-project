; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --reduce_paths -o.\_build\ble_srv_common.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\ble_srv_common.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..\components\libraries\balloc -I..\..\..\..\..\..\components\libraries\bootloader\dfu -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\experimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\components\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\libraries\fifo -I.\RTE\_nrf52832_xxaa -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.14.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DNRF52 -DBL_SETTINGS_ACCESS_ONLY -DBOARD_PCA10040 -DCONFIG_GPIO_AS_PINRESET -DNRF52 -DNRF52832_XXAA -DNRF52_PAN_74 -DNRF_SD_BLE_API_VERSION=5 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -DDEBUG --omf_browse=.\_build\ble_srv_common.crf ..\..\..\..\..\..\components\ble\common\ble_srv_common.c]
                          THUMB

                          AREA ||i.ble_srv_ascii_to_utf8||, CODE, READONLY, ALIGN=1

                  ble_srv_ascii_to_utf8 PROC
;;;75     
;;;76     void ble_srv_ascii_to_utf8(ble_srv_utf8_str_t * p_utf8, char * p_ascii)
000000  b570              PUSH     {r4-r6,lr}
;;;77     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;78         p_utf8->length = (uint16_t)strlen(p_ascii);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       strlen
00000c  8020              STRH     r0,[r4,#0]
;;;79         p_utf8->p_str  = (uint8_t *)p_ascii;
00000e  6065              STR      r5,[r4,#4]
;;;80     }
000010  bd70              POP      {r4-r6,pc}
;;;81     
                          ENDP


                          AREA ||i.ble_srv_is_indication_enabled||, CODE, READONLY, ALIGN=1

                  ble_srv_is_indication_enabled PROC
;;;56     
;;;57     bool ble_srv_is_indication_enabled(uint8_t const * p_encoded_data)
000000  b570              PUSH     {r4-r6,lr}
;;;58     {
000002  4604              MOV      r4,r0
;;;59         uint16_t cccd_value = uint16_decode(p_encoded_data);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       uint16_decode
00000a  4605              MOV      r5,r0
;;;60         return ((cccd_value & BLE_GATT_HVX_INDICATION) != 0);
00000c  f3c50040          UBFX     r0,r5,#1,#1
;;;61     }
000010  bd70              POP      {r4-r6,pc}
;;;62     
                          ENDP


                          AREA ||i.ble_srv_is_notification_enabled||, CODE, READONLY, ALIGN=1

                  ble_srv_is_notification_enabled PROC
;;;50     
;;;51     bool ble_srv_is_notification_enabled(uint8_t const * p_encoded_data)
000000  b570              PUSH     {r4-r6,lr}
;;;52     {
000002  4604              MOV      r4,r0
;;;53         uint16_t cccd_value = uint16_decode(p_encoded_data);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       uint16_decode
00000a  4605              MOV      r5,r0
;;;54         return ((cccd_value & BLE_GATT_HVX_NOTIFICATION) != 0);
00000c  f0050001          AND      r0,r5,#1
;;;55     }
000010  bd70              POP      {r4-r6,pc}
;;;56     
                          ENDP


                          AREA ||i.ble_srv_report_ref_encode||, CODE, READONLY, ALIGN=2

                  ble_srv_report_ref_encode PROC
;;;62     
;;;63     uint8_t ble_srv_report_ref_encode(uint8_t                    * p_encoded_buffer,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;64                                       const ble_srv_report_ref_t * p_report_ref)
;;;65     {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;66         uint8_t len = 0;
000008  2400              MOVS     r4,#0
;;;67     
;;;68         p_encoded_buffer[len++] = p_report_ref->report_id;
00000a  7832              LDRB     r2,[r6,#0]
00000c  4621              MOV      r1,r4
00000e  1c64              ADDS     r4,r4,#1
000010  546a              STRB     r2,[r5,r1]
;;;69         p_encoded_buffer[len++] = p_report_ref->report_type;
000012  7872              LDRB     r2,[r6,#1]
000014  4621              MOV      r1,r4
000016  1c64              ADDS     r4,r4,#1
000018  546a              STRB     r2,[r5,r1]
;;;70     
;;;71         APP_ERROR_CHECK_BOOL(len == BLE_SRV_ENCODED_REPORT_REF_LEN);
00001a  bf00              NOP      
00001c  2c02              CMP      r4,#2
00001e  d101              BNE      |L4.36|
000020  2001              MOVS     r0,#1
000022  e000              B        |L4.38|
                  |L4.36|
000024  2000              MOVS     r0,#0
                  |L4.38|
000026  4607              MOV      r7,r0
000028  b937              CBNZ     r7,|L4.56|
00002a  bf00              NOP      
00002c  a204              ADR      r2,|L4.64|
00002e  2147              MOVS     r1,#0x47
000030  2000              MOVS     r0,#0
000032  f7fffffe          BL       app_error_handler
000036  bf00              NOP      
                  |L4.56|
000038  bf00              NOP      
;;;72         return len;
00003a  4620              MOV      r0,r4
;;;73     }
00003c  e8bd81f0          POP      {r4-r8,pc}
;;;74     
                          ENDP

                  |L4.64|
000040  2e2e5c2e          DCB      "..\\..\\..\\..\\..\\..\\components\\ble\\common\\ble_sr"
000044  2e5c2e2e
000048  5c2e2e5c
00004c  2e2e5c2e
000050  2e5c636f
000054  6d706f6e
000058  656e7473
00005c  5c626c65
000060  5c636f6d
000064  6d6f6e5c
000068  626c655f
00006c  7372    
00006e  765f636f          DCB      "v_common.c",0
000072  6d6d6f6e
000076  2e6300  
000079  00                DCB      0
00007a  00                DCB      0
00007b  00                DCB      0

                          AREA ||i.characteristic_add||, CODE, READONLY, ALIGN=1

                  characteristic_add PROC
;;;119    
;;;120    uint32_t characteristic_add(uint16_t                   service_handle,
000000  b570              PUSH     {r4-r6,lr}
;;;121                                ble_add_char_params_t *    p_char_props,
;;;122                                ble_gatts_char_handles_t * p_char_handle)
;;;123    {
000002  b090              SUB      sp,sp,#0x40
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;124        ble_gatts_char_md_t char_md;
;;;125        ble_gatts_attr_t    attr_char_value;
;;;126        ble_uuid_t          char_uuid;
;;;127        ble_gatts_attr_md_t attr_md;
;;;128        ble_gatts_attr_md_t user_descr_attr_md;
;;;129        ble_gatts_attr_md_t cccd_md;
;;;130    
;;;131        if (p_char_props->uuid_type == 0)
00000a  78a0              LDRB     r0,[r4,#2]
00000c  b918              CBNZ     r0,|L5.22|
;;;132        {
;;;133            char_uuid.type = BLE_UUID_TYPE_BLE;
00000e  2001              MOVS     r0,#1
000010  f88d000e          STRB     r0,[sp,#0xe]
000014  e002              B        |L5.28|
                  |L5.22|
;;;134        }
;;;135        else
;;;136        {
;;;137            char_uuid.type = p_char_props->uuid_type;
000016  78a0              LDRB     r0,[r4,#2]
000018  f88d000e          STRB     r0,[sp,#0xe]
                  |L5.28|
;;;138        }
;;;139        char_uuid.uuid = p_char_props->uuid;
00001c  8820              LDRH     r0,[r4,#0]
00001e  f8ad000c          STRH     r0,[sp,#0xc]
;;;140    
;;;141        memset(&attr_md, 0, sizeof(ble_gatts_attr_md_t));
000022  2000              MOVS     r0,#0
000024  9002              STR      r0,[sp,#8]
;;;142        set_security_req(p_char_props->read_access, &attr_md.read_perm);
000026  7c60              LDRB     r0,[r4,#0x11]
000028  a902              ADD      r1,sp,#8
00002a  f7fffffe          BL       set_security_req
;;;143        set_security_req(p_char_props->write_access, & attr_md.write_perm);
00002e  7ca0              LDRB     r0,[r4,#0x12]
000030  f10d0109          ADD      r1,sp,#9
000034  f7fffffe          BL       set_security_req
;;;144        attr_md.rd_auth    = (p_char_props->is_defered_read ? 1 : 0);
000038  7be0              LDRB     r0,[r4,#0xf]
00003a  b108              CBZ      r0,|L5.64|
00003c  2001              MOVS     r0,#1
00003e  e000              B        |L5.66|
                  |L5.64|
000040  2000              MOVS     r0,#0
                  |L5.66|
000042  f89d100a          LDRB     r1,[sp,#0xa]
000046  f36001c3          BFI      r1,r0,#3,#1
00004a  f88d100a          STRB     r1,[sp,#0xa]
;;;145        attr_md.wr_auth    = (p_char_props->is_defered_write ? 1 : 0);
00004e  7c20              LDRB     r0,[r4,#0x10]
000050  b108              CBZ      r0,|L5.86|
000052  2001              MOVS     r0,#1
000054  e000              B        |L5.88|
                  |L5.86|
000056  2000              MOVS     r0,#0
                  |L5.88|
000058  f89d100a          LDRB     r1,[sp,#0xa]
00005c  f3601104          BFI      r1,r0,#4,#1
000060  f88d100a          STRB     r1,[sp,#0xa]
;;;146        attr_md.vlen       = (p_char_props->is_var_len ? 1 : 0);
000064  7b20              LDRB     r0,[r4,#0xc]
000066  b108              CBZ      r0,|L5.108|
000068  2001              MOVS     r0,#1
00006a  e000              B        |L5.110|
                  |L5.108|
00006c  2000              MOVS     r0,#0
                  |L5.110|
00006e  f89d100a          LDRB     r1,[sp,#0xa]
000072  f3600100          BFI      r1,r0,#0,#1
000076  f88d100a          STRB     r1,[sp,#0xa]
;;;147        attr_md.vloc       = (p_char_props->is_value_user ? BLE_GATTS_VLOC_USER : BLE_GATTS_VLOC_STACK);
00007a  7d20              LDRB     r0,[r4,#0x14]
00007c  b108              CBZ      r0,|L5.130|
00007e  2002              MOVS     r0,#2
000080  e000              B        |L5.132|
                  |L5.130|
000082  2001              MOVS     r0,#1
                  |L5.132|
000084  f89d100a          LDRB     r1,[sp,#0xa]
000088  f3600142          BFI      r1,r0,#1,#2
00008c  f88d100a          STRB     r1,[sp,#0xa]
;;;148    
;;;149    
;;;150        memset(&char_md, 0, sizeof(ble_gatts_char_md_t));
000090  211c              MOVS     r1,#0x1c
000092  a809              ADD      r0,sp,#0x24
000094  f7fffffe          BL       __aeabi_memclr4
;;;151        if ((p_char_props->char_props.notify == 1)||(p_char_props->char_props.indicate == 1))
000098  7b60              LDRB     r0,[r4,#0xd]
00009a  f3c01000          UBFX     r0,r0,#4,#1
00009e  b918              CBNZ     r0,|L5.168|
0000a0  7b60              LDRB     r0,[r4,#0xd]
0000a2  f3c01040          UBFX     r0,r0,#5,#1
0000a6  b1f8              CBZ      r0,|L5.232|
                  |L5.168|
;;;152        {
;;;153    
;;;154            memset(&cccd_md, 0, sizeof(cccd_md));
0000a8  2000              MOVS     r0,#0
0000aa  9000              STR      r0,[sp,#0]
;;;155            set_security_req(p_char_props->cccd_write_access, &cccd_md.write_perm);
0000ac  7ce0              LDRB     r0,[r4,#0x13]
0000ae  f10d0101          ADD      r1,sp,#1
0000b2  f7fffffe          BL       set_security_req
;;;156            BLE_GAP_CONN_SEC_MODE_SET_OPEN(&cccd_md.read_perm);
0000b6  bf00              NOP      
0000b8  f89d0000          LDRB     r0,[sp,#0]
0000bc  f020000f          BIC      r0,r0,#0xf
0000c0  1c40              ADDS     r0,r0,#1
0000c2  f88d0000          STRB     r0,[sp,#0]
0000c6  f89d0000          LDRB     r0,[sp,#0]
0000ca  f02000f0          BIC      r0,r0,#0xf0
0000ce  3010              ADDS     r0,r0,#0x10
0000d0  f88d0000          STRB     r0,[sp,#0]
0000d4  bf00              NOP      
;;;157    
;;;158            cccd_md.vloc       = BLE_GATTS_VLOC_STACK;
0000d6  f89d0002          LDRB     r0,[sp,#2]
0000da  f0200006          BIC      r0,r0,#6
0000de  1c80              ADDS     r0,r0,#2
0000e0  f88d0002          STRB     r0,[sp,#2]
;;;159    
;;;160            char_md.p_cccd_md  = &cccd_md;
0000e4  f8cdd038          STR      sp,[sp,#0x38]
                  |L5.232|
;;;161        }
;;;162        char_md.char_props     = p_char_props->char_props;
0000e8  7b60              LDRB     r0,[r4,#0xd]
0000ea  f88d0024          STRB     r0,[sp,#0x24]
;;;163        char_md.char_ext_props = p_char_props->char_ext_props;
0000ee  7ba0              LDRB     r0,[r4,#0xe]
0000f0  f88d0025          STRB     r0,[sp,#0x25]
;;;164    
;;;165        memset(&attr_char_value, 0, sizeof(ble_gatts_attr_t));
0000f4  2114              MOVS     r1,#0x14
0000f6  a804              ADD      r0,sp,#0x10
0000f8  f7fffffe          BL       __aeabi_memclr4
;;;166        attr_char_value.p_uuid    = &char_uuid;
0000fc  a803              ADD      r0,sp,#0xc
0000fe  9004              STR      r0,[sp,#0x10]
;;;167        attr_char_value.p_attr_md = &attr_md;
000100  a802              ADD      r0,sp,#8
000102  9005              STR      r0,[sp,#0x14]
;;;168        attr_char_value.max_len   = p_char_props->max_len;
000104  88a0              LDRH     r0,[r4,#4]
000106  f8ad001c          STRH     r0,[sp,#0x1c]
;;;169        if (p_char_props->p_init_value != NULL)
00010a  68a0              LDR      r0,[r4,#8]
00010c  b120              CBZ      r0,|L5.280|
;;;170        {
;;;171            attr_char_value.init_len  = p_char_props->init_len;
00010e  88e0              LDRH     r0,[r4,#6]
000110  f8ad0018          STRH     r0,[sp,#0x18]
;;;172            attr_char_value.p_value   = p_char_props->p_init_value;
000114  68a0              LDR      r0,[r4,#8]
000116  9008              STR      r0,[sp,#0x20]
                  |L5.280|
;;;173        }
;;;174        if (p_char_props->p_user_descr != NULL)
000118  69a0              LDR      r0,[r4,#0x18]
00011a  2800              CMP      r0,#0
00011c  d049              BEQ      |L5.434|
;;;175        {
;;;176            memset(&user_descr_attr_md, 0, sizeof(ble_gatts_attr_md_t));
00011e  2000              MOVS     r0,#0
000120  9001              STR      r0,[sp,#4]
;;;177            char_md.char_user_desc_max_size = p_char_props->p_user_descr->max_size;
000122  69a0              LDR      r0,[r4,#0x18]
000124  8800              LDRH     r0,[r0,#0]
000126  f8ad002c          STRH     r0,[sp,#0x2c]
;;;178            char_md.char_user_desc_size     = p_char_props->p_user_descr->size;
00012a  69a0              LDR      r0,[r4,#0x18]
00012c  8840              LDRH     r0,[r0,#2]
00012e  f8ad002e          STRH     r0,[sp,#0x2e]
;;;179            char_md.p_char_user_desc        = p_char_props->p_user_descr->p_char_user_desc;
000132  69a0              LDR      r0,[r4,#0x18]
000134  6840              LDR      r0,[r0,#4]
000136  900a              STR      r0,[sp,#0x28]
;;;180    
;;;181            char_md.p_user_desc_md          = &user_descr_attr_md;
000138  a801              ADD      r0,sp,#4
00013a  900d              STR      r0,[sp,#0x34]
;;;182    
;;;183            set_security_req(p_char_props->p_user_descr->read_access, &user_descr_attr_md.read_perm);
00013c  69a1              LDR      r1,[r4,#0x18]
00013e  7b08              LDRB     r0,[r1,#0xc]
000140  a901              ADD      r1,sp,#4
000142  f7fffffe          BL       set_security_req
;;;184            set_security_req(p_char_props->p_user_descr->write_access, &user_descr_attr_md.write_perm);
000146  69a1              LDR      r1,[r4,#0x18]
000148  7b48              LDRB     r0,[r1,#0xd]
00014a  f10d0105          ADD      r1,sp,#5
00014e  f7fffffe          BL       set_security_req
;;;185    
;;;186            user_descr_attr_md.rd_auth      = (p_char_props->p_user_descr->is_defered_read ? 1 : 0);
000152  69a0              LDR      r0,[r4,#0x18]
000154  7a80              LDRB     r0,[r0,#0xa]
000156  b108              CBZ      r0,|L5.348|
000158  2001              MOVS     r0,#1
00015a  e000              B        |L5.350|
                  |L5.348|
00015c  2000              MOVS     r0,#0
                  |L5.350|
00015e  f89d1006          LDRB     r1,[sp,#6]
000162  f36001c3          BFI      r1,r0,#3,#1
000166  f88d1006          STRB     r1,[sp,#6]
;;;187            user_descr_attr_md.wr_auth      = (p_char_props->p_user_descr->is_defered_write ? 1 : 0);
00016a  69a0              LDR      r0,[r4,#0x18]
00016c  7ac0              LDRB     r0,[r0,#0xb]
00016e  b108              CBZ      r0,|L5.372|
000170  2001              MOVS     r0,#1
000172  e000              B        |L5.374|
                  |L5.372|
000174  2000              MOVS     r0,#0
                  |L5.374|
000176  f89d1006          LDRB     r1,[sp,#6]
00017a  f3601104          BFI      r1,r0,#4,#1
00017e  f88d1006          STRB     r1,[sp,#6]
;;;188            user_descr_attr_md.vlen         = (p_char_props->p_user_descr->is_var_len ? 1 : 0);
000182  69a0              LDR      r0,[r4,#0x18]
000184  7a00              LDRB     r0,[r0,#8]
000186  b108              CBZ      r0,|L5.396|
000188  2001              MOVS     r0,#1
00018a  e000              B        |L5.398|
                  |L5.396|
00018c  2000              MOVS     r0,#0
                  |L5.398|
00018e  f89d1006          LDRB     r1,[sp,#6]
000192  f3600100          BFI      r1,r0,#0,#1
000196  f88d1006          STRB     r1,[sp,#6]
;;;189            user_descr_attr_md.vloc         = (p_char_props->p_user_descr->is_value_user ? BLE_GATTS_VLOC_USER : BLE_GATTS_VLOC_STACK);
00019a  69a0              LDR      r0,[r4,#0x18]
00019c  7b80              LDRB     r0,[r0,#0xe]
00019e  b108              CBZ      r0,|L5.420|
0001a0  2002              MOVS     r0,#2
0001a2  e000              B        |L5.422|
                  |L5.420|
0001a4  2001              MOVS     r0,#1
                  |L5.422|
0001a6  f89d1006          LDRB     r1,[sp,#6]
0001aa  f3600142          BFI      r1,r0,#1,#2
0001ae  f88d1006          STRB     r1,[sp,#6]
                  |L5.434|
;;;190        }
;;;191        if (p_char_props->p_presentation_format != NULL)
0001b2  69e0              LDR      r0,[r4,#0x1c]
0001b4  b108              CBZ      r0,|L5.442|
;;;192        {
;;;193            char_md.p_char_pf = p_char_props->p_presentation_format;
0001b6  69e0              LDR      r0,[r4,#0x1c]
0001b8  900c              STR      r0,[sp,#0x30]
                  |L5.442|
;;;194        }
;;;195        return sd_ble_gatts_characteristic_add(service_handle,
0001ba  462b              MOV      r3,r5
0001bc  aa04              ADD      r2,sp,#0x10
0001be  a909              ADD      r1,sp,#0x24
0001c0  4630              MOV      r0,r6
0001c2  dfa2              SVC      #0xa2
;;;196                                               &char_md,
;;;197                                               &attr_char_value,
;;;198                                               p_char_handle);
;;;199    }
0001c4  b010              ADD      sp,sp,#0x40
0001c6  bd70              POP      {r4-r6,pc}
;;;200    
                          ENDP


                          AREA ||i.descriptor_add||, CODE, READONLY, ALIGN=1

                  descriptor_add PROC
;;;201    
;;;202    uint32_t descriptor_add(uint16_t                   char_handle,
000000  b570              PUSH     {r4-r6,lr}
;;;203                            ble_add_descr_params_t *   p_descr_props,
;;;204                            uint16_t *                 p_descr_handle)
;;;205    {
000002  b088              SUB      sp,sp,#0x20
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;206        ble_gatts_attr_t    descr_params;
;;;207        ble_uuid_t          desc_uuid;
;;;208        ble_gatts_attr_md_t attr_md;
;;;209    
;;;210        memset(&descr_params, 0, sizeof(descr_params));
00000a  2114              MOVS     r1,#0x14
00000c  a803              ADD      r0,sp,#0xc
00000e  f7fffffe          BL       __aeabi_memclr4
;;;211        if (p_descr_props->uuid_type == 0)
000012  78a0              LDRB     r0,[r4,#2]
000014  b918              CBNZ     r0,|L6.30|
;;;212        {
;;;213            desc_uuid.type = BLE_UUID_TYPE_BLE;
000016  2001              MOVS     r0,#1
000018  f88d000a          STRB     r0,[sp,#0xa]
00001c  e002              B        |L6.36|
                  |L6.30|
;;;214        }
;;;215        else
;;;216        {
;;;217            desc_uuid.type = p_descr_props->uuid_type;
00001e  78a0              LDRB     r0,[r4,#2]
000020  f88d000a          STRB     r0,[sp,#0xa]
                  |L6.36|
;;;218        }
;;;219        desc_uuid.uuid = p_descr_props->uuid;
000024  8820              LDRH     r0,[r4,#0]
000026  f8ad0008          STRH     r0,[sp,#8]
;;;220        descr_params.p_uuid = &desc_uuid;
00002a  a802              ADD      r0,sp,#8
00002c  9003              STR      r0,[sp,#0xc]
;;;221    
;;;222        set_security_req(p_descr_props->read_access, &attr_md.read_perm);
00002e  79a0              LDRB     r0,[r4,#6]
000030  a901              ADD      r1,sp,#4
000032  f7fffffe          BL       set_security_req
;;;223        set_security_req(p_descr_props->write_access,&attr_md.write_perm);
000036  79e0              LDRB     r0,[r4,#7]
000038  f10d0105          ADD      r1,sp,#5
00003c  f7fffffe          BL       set_security_req
;;;224    
;;;225        attr_md.rd_auth        = (p_descr_props->is_defered_read ? 1 : 0);
000040  78e0              LDRB     r0,[r4,#3]
000042  b108              CBZ      r0,|L6.72|
000044  2001              MOVS     r0,#1
000046  e000              B        |L6.74|
                  |L6.72|
000048  2000              MOVS     r0,#0
                  |L6.74|
00004a  f89d1006          LDRB     r1,[sp,#6]
00004e  f36001c3          BFI      r1,r0,#3,#1
000052  f88d1006          STRB     r1,[sp,#6]
;;;226        attr_md.wr_auth        = (p_descr_props->is_defered_write ? 1 : 0);
000056  7920              LDRB     r0,[r4,#4]
000058  b108              CBZ      r0,|L6.94|
00005a  2001              MOVS     r0,#1
00005c  e000              B        |L6.96|
                  |L6.94|
00005e  2000              MOVS     r0,#0
                  |L6.96|
000060  f89d1006          LDRB     r1,[sp,#6]
000064  f3601104          BFI      r1,r0,#4,#1
000068  f88d1006          STRB     r1,[sp,#6]
;;;227        attr_md.vlen           = (p_descr_props->is_var_len ? 1 : 0);
00006c  7960              LDRB     r0,[r4,#5]
00006e  b108              CBZ      r0,|L6.116|
000070  2001              MOVS     r0,#1
000072  e000              B        |L6.118|
                  |L6.116|
000074  2000              MOVS     r0,#0
                  |L6.118|
000076  f89d1006          LDRB     r1,[sp,#6]
00007a  f3600100          BFI      r1,r0,#0,#1
00007e  f88d1006          STRB     r1,[sp,#6]
;;;228        attr_md.vloc           = (p_descr_props->is_value_user ? BLE_GATTS_VLOC_USER : BLE_GATTS_VLOC_STACK);
000082  7a20              LDRB     r0,[r4,#8]
000084  b108              CBZ      r0,|L6.138|
000086  2002              MOVS     r0,#2
000088  e000              B        |L6.140|
                  |L6.138|
00008a  2001              MOVS     r0,#1
                  |L6.140|
00008c  f89d1006          LDRB     r1,[sp,#6]
000090  f3600142          BFI      r1,r0,#1,#2
000094  f88d1006          STRB     r1,[sp,#6]
;;;229        descr_params.p_attr_md = &attr_md;
000098  a801              ADD      r0,sp,#4
00009a  9004              STR      r0,[sp,#0x10]
;;;230    
;;;231        descr_params.init_len  = p_descr_props->init_len;
00009c  8960              LDRH     r0,[r4,#0xa]
00009e  f8ad0014          STRH     r0,[sp,#0x14]
;;;232        descr_params.init_offs = p_descr_props->init_offs;
0000a2  89a0              LDRH     r0,[r4,#0xc]
0000a4  f8ad0016          STRH     r0,[sp,#0x16]
;;;233        descr_params.max_len   = p_descr_props->max_len;
0000a8  89e0              LDRH     r0,[r4,#0xe]
0000aa  f8ad0018          STRH     r0,[sp,#0x18]
;;;234        descr_params.p_value   = p_descr_props->p_value;
0000ae  6920              LDR      r0,[r4,#0x10]
0000b0  9007              STR      r0,[sp,#0x1c]
;;;235    
;;;236        return sd_ble_gatts_descriptor_add(char_handle, &descr_params, p_descr_handle);
0000b2  4632              MOV      r2,r6
0000b4  a903              ADD      r1,sp,#0xc
0000b6  4628              MOV      r0,r5
0000b8  dfa3              SVC      #0xa3
;;;237    }
0000ba  b008              ADD      sp,sp,#0x20
0000bc  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.set_security_req||, CODE, READONLY, ALIGN=1

                  set_security_req PROC
;;;89      */
;;;90     static inline void set_security_req(security_req_t level, ble_gap_conn_sec_mode_t * p_perm)
000000  bf00              NOP      
;;;91     {
;;;92     
;;;93     
;;;94         BLE_GAP_CONN_SEC_MODE_SET_NO_ACCESS(p_perm);
000002  780a              LDRB     r2,[r1,#0]
000004  f022020f          BIC      r2,r2,#0xf
000008  700a              STRB     r2,[r1,#0]
00000a  780a              LDRB     r2,[r1,#0]
00000c  f02202f0          BIC      r2,r2,#0xf0
000010  700a              STRB     r2,[r1,#0]
000012  bf00              NOP      
;;;95         switch (level)
000014  2806              CMP      r0,#6
000016  d250              BCS      |L7.186|
000018  e8dff000          TBB      [pc,r0]
00001c  030e1b28          DCB      0x03,0x0e,0x1b,0x28
000020  3542              DCB      0x35,0x42
;;;96         {
;;;97             case SEC_NO_ACCESS:
;;;98                 BLE_GAP_CONN_SEC_MODE_SET_NO_ACCESS(p_perm);
000022  bf00              NOP      
000024  780a              LDRB     r2,[r1,#0]
000026  f022020f          BIC      r2,r2,#0xf
00002a  700a              STRB     r2,[r1,#0]
00002c  780a              LDRB     r2,[r1,#0]
00002e  f02202f0          BIC      r2,r2,#0xf0
000032  700a              STRB     r2,[r1,#0]
000034  bf00              NOP      
;;;99             break;
000036  e040              B        |L7.186|
;;;100            case SEC_OPEN:
;;;101                BLE_GAP_CONN_SEC_MODE_SET_OPEN(p_perm);
000038  bf00              NOP      
00003a  780a              LDRB     r2,[r1,#0]
00003c  f022020f          BIC      r2,r2,#0xf
000040  1c52              ADDS     r2,r2,#1
000042  700a              STRB     r2,[r1,#0]
000044  780a              LDRB     r2,[r1,#0]
000046  f02202f0          BIC      r2,r2,#0xf0
00004a  3210              ADDS     r2,r2,#0x10
00004c  700a              STRB     r2,[r1,#0]
00004e  bf00              NOP      
;;;102            break;
000050  e033              B        |L7.186|
;;;103            case SEC_JUST_WORKS:
;;;104                BLE_GAP_CONN_SEC_MODE_SET_ENC_NO_MITM(p_perm);
000052  bf00              NOP      
000054  780a              LDRB     r2,[r1,#0]
000056  f022020f          BIC      r2,r2,#0xf
00005a  1c52              ADDS     r2,r2,#1
00005c  700a              STRB     r2,[r1,#0]
00005e  780a              LDRB     r2,[r1,#0]
000060  f02202f0          BIC      r2,r2,#0xf0
000064  3220              ADDS     r2,r2,#0x20
000066  700a              STRB     r2,[r1,#0]
000068  bf00              NOP      
;;;105            break;
00006a  e026              B        |L7.186|
;;;106            case SEC_MITM:
;;;107                BLE_GAP_CONN_SEC_MODE_SET_ENC_WITH_MITM(p_perm);
00006c  bf00              NOP      
00006e  780a              LDRB     r2,[r1,#0]
000070  f022020f          BIC      r2,r2,#0xf
000074  1c52              ADDS     r2,r2,#1
000076  700a              STRB     r2,[r1,#0]
000078  780a              LDRB     r2,[r1,#0]
00007a  f02202f0          BIC      r2,r2,#0xf0
00007e  3230              ADDS     r2,r2,#0x30
000080  700a              STRB     r2,[r1,#0]
000082  bf00              NOP      
;;;108            break;
000084  e019              B        |L7.186|
;;;109            case SEC_SIGNED:
;;;110                BLE_GAP_CONN_SEC_MODE_SET_SIGNED_NO_MITM(p_perm);
000086  bf00              NOP      
000088  780a              LDRB     r2,[r1,#0]
00008a  f022020f          BIC      r2,r2,#0xf
00008e  1c92              ADDS     r2,r2,#2
000090  700a              STRB     r2,[r1,#0]
000092  780a              LDRB     r2,[r1,#0]
000094  f02202f0          BIC      r2,r2,#0xf0
000098  3210              ADDS     r2,r2,#0x10
00009a  700a              STRB     r2,[r1,#0]
00009c  bf00              NOP      
;;;111            break;
00009e  e00c              B        |L7.186|
;;;112            case SEC_SIGNED_MITM:
;;;113                BLE_GAP_CONN_SEC_MODE_SET_SIGNED_WITH_MITM(p_perm);
0000a0  bf00              NOP      
0000a2  780a              LDRB     r2,[r1,#0]
0000a4  f022020f          BIC      r2,r2,#0xf
0000a8  1c92              ADDS     r2,r2,#2
0000aa  700a              STRB     r2,[r1,#0]
0000ac  780a              LDRB     r2,[r1,#0]
0000ae  f02202f0          BIC      r2,r2,#0xf0
0000b2  3220              ADDS     r2,r2,#0x20
0000b4  700a              STRB     r2,[r1,#0]
0000b6  bf00              NOP      
;;;114            break;
0000b8  bf00              NOP      
                  |L7.186|
0000ba  bf00              NOP                            ;99
;;;115        }
;;;116        return;
;;;117    }
0000bc  4770              BX       lr
;;;118    
                          ENDP


                          AREA ||i.uint16_decode||, CODE, READONLY, ALIGN=1

                  uint16_decode PROC
;;;865     */
;;;866    static __INLINE uint16_t uint16_decode(const uint8_t * p_encoded_data)
000000  4601              MOV      r1,r0
;;;867    {
;;;868            return ( (((uint16_t)((uint8_t *)p_encoded_data)[0])) |
000002  7808              LDRB     r0,[r1,#0]
000004  784a              LDRB     r2,[r1,#1]
000006  ea402002          ORR      r0,r0,r2,LSL #8
;;;869                     (((uint16_t)((uint8_t *)p_encoded_data)[1]) << 8 ));
;;;870    }
00000a  4770              BX       lr
;;;871    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\ble\\common\\ble_srv_common.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_ble_srv_common_c_d5496d4d____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___16_ble_srv_common_c_d5496d4d____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_ble_srv_common_c_d5496d4d____REVSH|
#line 402
|__asm___16_ble_srv_common_c_d5496d4d____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___16_ble_srv_common_c_d5496d4d____RRX|
#line 587
|__asm___16_ble_srv_common_c_d5496d4d____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
