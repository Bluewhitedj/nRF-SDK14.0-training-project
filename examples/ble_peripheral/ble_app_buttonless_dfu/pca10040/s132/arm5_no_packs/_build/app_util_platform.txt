; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --reduce_paths -o.\_build\app_util_platform.o --asm_dir=.\_build\ --list_dir=.\_build\ --depend=.\_build\app_util_platform.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\config -I..\..\..\..\..\..\components -I..\..\..\..\..\..\components\ble\ble_advertising -I..\..\..\..\..\..\components\ble\ble_services\ble_dfu -I..\..\..\..\..\..\components\ble\common -I..\..\..\..\..\..\components\ble\nrf_ble_gatt -I..\..\..\..\..\..\components\ble\peer_manager -I..\..\..\..\..\..\components\boards -I..\..\..\..\..\..\components\drivers_nrf\clock -I..\..\..\..\..\..\components\drivers_nrf\common -I..\..\..\..\..\..\components\drivers_nrf\delay -I..\..\..\..\..\..\components\drivers_nrf\gpiote -I..\..\..\..\..\..\components\drivers_nrf\hal -I..\..\..\..\..\..\components\drivers_nrf\uart -I..\..\..\..\..\..\components\libraries\atomic -I..\..\..\..\..\..\components\libraries\balloc -I..\..\..\..\..\..\components\libraries\bootloader\dfu -I..\..\..\..\..\..\components\libraries\bsp -I..\..\..\..\..\..\components\libraries\button -I..\..\..\..\..\..\components\libraries\crc16 -I..\..\..\..\..\..\components\libraries\experimental_log -I..\..\..\..\..\..\components\libraries\experimental_log\src -I..\..\..\..\..\..\components\libraries\experimental_memobj -I..\..\..\..\..\..\components\libraries\experimental_section_vars -I..\..\..\..\..\..\components\libraries\fds -I..\..\..\..\..\..\components\libraries\fstorage -I..\..\..\..\..\..\components\libraries\mutex -I..\..\..\..\..\..\components\libraries\pwr_mgmt -I..\..\..\..\..\..\components\libraries\scheduler -I..\..\..\..\..\..\components\libraries\strerror -I..\..\..\..\..\..\components\libraries\svc -I..\..\..\..\..\..\components\libraries\timer -I..\..\..\..\..\..\components\libraries\util -I..\..\..\..\..\..\components\softdevice\common -I..\..\..\..\..\..\components\softdevice\s132\headers -I..\..\..\..\..\..\components\softdevice\s132\headers\nrf52 -I..\..\..\..\..\..\components\toolchain -I..\..\..\..\..\..\external\fprintf -I..\..\..\..\..\..\external\segger_rtt -I..\config -I..\..\..\..\..\..\components\ble\ble_services\ble_dis -I..\..\..\..\..\..\components\ble\ble_services\ble_bas -I..\..\..\..\..\..\components\ble\ble_services\ble_bas_c -I..\..\..\..\..\..\components\libraries\uart -I..\..\..\..\..\..\components\ble\ble_services\ble_nus -I..\..\..\..\..\..\components\libraries\fifo -I.\RTE\_nrf52832_xxaa -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\NordicSemiconductor\nRF_DeviceFamilyPack\8.14.1\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DNRF52 -DBL_SETTINGS_ACCESS_ONLY -DBOARD_PCA10040 -DCONFIG_GPIO_AS_PINRESET -DNRF52 -DNRF52832_XXAA -DNRF52_PAN_74 -DNRF_SD_BLE_API_VERSION=5 -DS132 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -DDEBUG --omf_browse=.\_build\app_util_platform.crf ..\..\..\..\..\..\components\libraries\util\app_util_platform.c]
                          THUMB

                          AREA ||i.__sd_nvic_irq_disable||, CODE, READONLY, ALIGN=1

                  __sd_nvic_irq_disable PROC
;;;276    
;;;277    __STATIC_INLINE int __sd_nvic_irq_disable(void)
000000  bf00              NOP      
000002  f3ef8110          MRS      r1,PRIMASK
;;;278    {
;;;279      int pm = __get_PRIMASK();
000006  4608              MOV      r0,r1
;;;280      __disable_irq();
000008  b672              CPSID    i
;;;281      return pm;
;;;282    }
00000a  4770              BX       lr
;;;283    
                          ENDP


                          AREA ||i.app_util_critical_region_enter||, CODE, READONLY, ALIGN=1

                  app_util_critical_region_enter PROC
;;;63     
;;;64     void app_util_critical_region_enter(uint8_t *p_nested)
000000  b510              PUSH     {r4,lr}
;;;65     {
000002  4604              MOV      r4,r0
;;;66     #if __CORTEX_M == (0x04U)
;;;67         ASSERT(APP_LEVEL_PRIVILEGED == privilege_level_get())
;;;68     #endif
;;;69     
;;;70     #if defined(SOFTDEVICE_PRESENT)
;;;71         /* return value can be safely ignored */
;;;72         (void) sd_nvic_critical_region_enter(p_nested);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       sd_nvic_critical_region_enter
;;;73     #else
;;;74         app_util_disable_irq();
;;;75     #endif
;;;76     }
00000a  bd10              POP      {r4,pc}
;;;77     
                          ENDP


                          AREA ||i.app_util_critical_region_exit||, CODE, READONLY, ALIGN=2

                  app_util_critical_region_exit PROC
;;;77     
;;;78     void app_util_critical_region_exit(uint8_t nested)
000000  b570              PUSH     {r4-r6,lr}
;;;79     {
000002  4604              MOV      r4,r0
;;;80     #if __CORTEX_M == (0x04U)
;;;81         ASSERT(APP_LEVEL_PRIVILEGED == privilege_level_get())
;;;82     #endif
;;;83     
;;;84     #if defined(SOFTDEVICE_PRESENT)
;;;85         /* return value can be safely ignored */
;;;86         (void) sd_nvic_critical_region_exit(nested);
000004  4625              MOV      r5,r4
000006  480e              LDR      r0,|L3.64|
000008  6880              LDR      r0,[r0,#8]  ; nrf_nvic_state
00000a  b1b0              CBZ      r0,|L3.58|
00000c  b9ad              CBNZ     r5,|L3.58|
00000e  f7fffffe          BL       __sd_nvic_irq_disable
000012  4606              MOV      r6,r0
000014  480a              LDR      r0,|L3.64|
000016  6800              LDR      r0,[r0,#0]  ; nrf_nvic_state
000018  490a              LDR      r1,|L3.68|
00001a  6008              STR      r0,[r1,#0]
00001c  4808              LDR      r0,|L3.64|
00001e  6840              LDR      r0,[r0,#4]  ; nrf_nvic_state
000020  f04f21e0          MOV      r1,#0xe000e000
000024  f8c10104          STR      r0,[r1,#0x104]
000028  2000              MOVS     r0,#0
00002a  4905              LDR      r1,|L3.64|
00002c  6088              STR      r0,[r1,#8]  ; nrf_nvic_state
00002e  b91e              CBNZ     r6,|L3.56|
000030  bf00              NOP      
000032  b662              CPSIE    i
000034  bf00              NOP      
000036  bf00              NOP      
                  |L3.56|
000038  bf00              NOP      
                  |L3.58|
00003a  bf00              NOP      
;;;87     #else
;;;88         app_util_enable_irq();
;;;89     #endif
;;;90     }
00003c  bd70              POP      {r4-r6,pc}
;;;91     
                          ENDP

00003e  0000              DCW      0x0000
                  |L3.64|
                          DCD      nrf_nvic_state
                  |L3.68|
                          DCD      0xe000e100

                          AREA ||i.app_util_disable_irq||, CODE, READONLY, ALIGN=2

                  app_util_disable_irq PROC
;;;48     
;;;49     void app_util_disable_irq(void)
000000  b672              CPSID    i
;;;50     {
;;;51         __disable_irq();
;;;52         m_in_critical_region++;
000002  4803              LDR      r0,|L4.16|
000004  6800              LDR      r0,[r0,#0]  ; m_in_critical_region
000006  1c40              ADDS     r0,r0,#1
000008  4901              LDR      r1,|L4.16|
00000a  6008              STR      r0,[r1,#0]  ; m_in_critical_region
;;;53     }
00000c  4770              BX       lr
;;;54     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      m_in_critical_region

                          AREA ||i.app_util_enable_irq||, CODE, READONLY, ALIGN=2

                  app_util_enable_irq PROC
;;;54     
;;;55     void app_util_enable_irq(void)
000000  4804              LDR      r0,|L5.20|
;;;56     {
;;;57         m_in_critical_region--;
000002  6800              LDR      r0,[r0,#0]  ; m_in_critical_region
000004  1e40              SUBS     r0,r0,#1
000006  4903              LDR      r1,|L5.20|
000008  6008              STR      r0,[r1,#0]  ; m_in_critical_region
;;;58         if (m_in_critical_region == 0)
00000a  4608              MOV      r0,r1
00000c  6800              LDR      r0,[r0,#0]  ; m_in_critical_region
00000e  b900              CBNZ     r0,|L5.18|
;;;59         {
;;;60             __enable_irq();
000010  b662              CPSIE    i
                  |L5.18|
;;;61         }
;;;62     }
000012  4770              BX       lr
;;;63     
                          ENDP

                  |L5.20|
                          DCD      m_in_critical_region

                          AREA ||i.current_int_priority_get||, CODE, READONLY, ALIGN=2

                  current_int_priority_get PROC
;;;114    
;;;115    uint8_t current_int_priority_get(void)
000000  b510              PUSH     {r4,lr}
;;;116    {
;;;117        uint32_t isr_vector_num = __get_IPSR() & IPSR_ISR_Msk ;
000002  bf00              NOP      
000004  f3ef8005          MRS      r0,IPSR
000008  f3c00108          UBFX     r1,r0,#0,#9
;;;118        if (isr_vector_num > 0)
00000c  b181              CBZ      r1,|L6.48|
;;;119        {
;;;120            int32_t irq_type = ((int32_t)isr_vector_num - EXTERNAL_INT_VECTOR_OFFSET);
00000e  f1a10210          SUB      r2,r1,#0x10
;;;121            return (NVIC_GetPriority((IRQn_Type)irq_type) & 0xFF);
000012  b250              SXTB     r0,r2
000014  2800              CMP      r0,#0
000016  da06              BGE      |L6.38|
000018  4b06              LDR      r3,|L6.52|
00001a  f000040f          AND      r4,r0,#0xf
00001e  1f24              SUBS     r4,r4,#4
000020  5d1b              LDRB     r3,[r3,r4]
000022  095b              LSRS     r3,r3,#5
000024  e002              B        |L6.44|
                  |L6.38|
000026  4b04              LDR      r3,|L6.56|
000028  5c1b              LDRB     r3,[r3,r0]
00002a  095b              LSRS     r3,r3,#5
                  |L6.44|
00002c  b2d8              UXTB     r0,r3
                  |L6.46|
;;;122        }
;;;123        else
;;;124        {
;;;125            return APP_IRQ_PRIORITY_THREAD;
;;;126        }
;;;127    }
00002e  bd10              POP      {r4,pc}
                  |L6.48|
000030  200f              MOVS     r0,#0xf               ;125
000032  e7fc              B        |L6.46|
                          ENDP

                  |L6.52|
                          DCD      0xe000ed18
                  |L6.56|
                          DCD      0xe000e400

                          AREA ||i.privilege_level_get||, CODE, READONLY, ALIGN=1

                  privilege_level_get PROC
;;;92     
;;;93     uint8_t privilege_level_get(void)
000000  bf00              NOP      
000002  f3ef8005          MRS      r0,IPSR
;;;94     {
;;;95     #if __CORTEX_M == (0x00U) || defined(_WIN32) || defined(__unix) || defined(__APPLE__)
;;;96         /* the Cortex-M0 has no concept of privilege */
;;;97         return APP_LEVEL_PRIVILEGED;
;;;98     #elif __CORTEX_M == (0x04U)
;;;99         uint32_t isr_vector_num = __get_IPSR() & IPSR_ISR_Msk ;
000006  f3c00108          UBFX     r1,r0,#0,#9
;;;100        if (0 == isr_vector_num)
00000a  b941              CBNZ     r1,|L7.30|
;;;101        {
;;;102            /* Thread Mode, check nPRIV */
;;;103            int32_t control = __get_CONTROL();
00000c  bf00              NOP      
00000e  f3ef8014          MRS      r0,CONTROL
000012  4602              MOV      r2,r0
;;;104            return control & CONTROL_nPRIV_Msk ? APP_LEVEL_UNPRIVILEGED : APP_LEVEL_PRIVILEGED;
000014  f0020001          AND      r0,r2,#1
000018  f0800001          EOR      r0,r0,#1
                  |L7.28|
;;;105        }
;;;106        else
;;;107        {
;;;108            /* Handler Mode, always privileged */
;;;109            return APP_LEVEL_PRIVILEGED;
;;;110        }
;;;111    #endif
;;;112    }
00001c  4770              BX       lr
                  |L7.30|
00001e  2001              MOVS     r0,#1                 ;109
000020  e7fc              B        |L7.28|
;;;113    
                          ENDP


                          AREA ||i.sd_nvic_critical_region_enter||, CODE, READONLY, ALIGN=2

                  sd_nvic_critical_region_enter PROC
;;;436    
;;;437    __STATIC_INLINE uint32_t sd_nvic_critical_region_enter(uint8_t * p_is_nested_critical_region)
000000  b570              PUSH     {r4-r6,lr}
;;;438    {
000002  4604              MOV      r4,r0
;;;439      int was_masked = __sd_nvic_irq_disable();
000004  f7fffffe          BL       __sd_nvic_irq_disable
000008  4605              MOV      r5,r0
;;;440      if (!nrf_nvic_state.__cr_flag)
00000a  4814              LDR      r0,|L8.92|
00000c  6880              LDR      r0,[r0,#8]  ; nrf_nvic_state
00000e  b9d8              CBNZ     r0,|L8.72|
;;;441      {
;;;442        nrf_nvic_state.__cr_flag = 1;
000010  2001              MOVS     r0,#1
000012  4912              LDR      r1,|L8.92|
000014  6088              STR      r0,[r1,#8]  ; nrf_nvic_state
;;;443        nrf_nvic_state.__irq_masks[0] = ( NVIC->ICER[0] & __NRF_NVIC_APP_IRQS_0 );
000016  4812              LDR      r0,|L8.96|
000018  6800              LDR      r0,[r0,#0]
00001a  4912              LDR      r1,|L8.100|
00001c  4008              ANDS     r0,r0,r1
00001e  490f              LDR      r1,|L8.92|
000020  6008              STR      r0,[r1,#0]  ; nrf_nvic_state
;;;444        NVIC->ICER[0] = __NRF_NVIC_APP_IRQS_0;
000022  4810              LDR      r0,|L8.100|
000024  f04f21e0          MOV      r1,#0xe000e000
000028  f8c10180          STR      r0,[r1,#0x180]
;;;445        nrf_nvic_state.__irq_masks[1] = ( NVIC->ICER[1] & __NRF_NVIC_APP_IRQS_1 );
00002c  480c              LDR      r0,|L8.96|
00002e  3880              SUBS     r0,r0,#0x80
000030  f8d00084          LDR      r0,[r0,#0x84]
000034  4909              LDR      r1,|L8.92|
000036  6048              STR      r0,[r1,#4]  ; nrf_nvic_state
;;;446        NVIC->ICER[1] = __NRF_NVIC_APP_IRQS_1;
000038  f04f31ff          MOV      r1,#0xffffffff
00003c  4808              LDR      r0,|L8.96|
00003e  1d00              ADDS     r0,r0,#4
000040  6001              STR      r1,[r0,#0]
;;;447        *p_is_nested_critical_region = 0;
000042  2000              MOVS     r0,#0
000044  7020              STRB     r0,[r4,#0]
000046  e001              B        |L8.76|
                  |L8.72|
;;;448      }
;;;449      else
;;;450      {
;;;451        *p_is_nested_critical_region = 1;
000048  2001              MOVS     r0,#1
00004a  7020              STRB     r0,[r4,#0]
                  |L8.76|
;;;452      }
;;;453      if (!was_masked)
00004c  b91d              CBNZ     r5,|L8.86|
;;;454      {
;;;455        __sd_nvic_irq_enable();
00004e  bf00              NOP      
000050  b662              CPSIE    i
000052  bf00              NOP      
000054  bf00              NOP      
                  |L8.86|
;;;456      }
;;;457      return NRF_SUCCESS;
000056  2000              MOVS     r0,#0
;;;458    }
000058  bd70              POP      {r4-r6,pc}
;;;459    
                          ENDP

00005a  0000              DCW      0x0000
                  |L8.92|
                          DCD      nrf_nvic_state
                  |L8.96|
                          DCD      0xe000e180
                  |L8.100|
                          DCD      0xbdff06fc

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  nrf_nvic_state
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  m_in_critical_region
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\components\\libraries\\util\\app_util_platform.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_app_util_platform_c_6d89e7e5____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___19_app_util_platform_c_6d89e7e5____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_app_util_platform_c_6d89e7e5____REVSH|
#line 402
|__asm___19_app_util_platform_c_6d89e7e5____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_app_util_platform_c_6d89e7e5____RRX|
#line 587
|__asm___19_app_util_platform_c_6d89e7e5____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
